%!PS-Adobe-2.0
%%Creator: dvips 5.55 Copyright 1986, 1994 Radical Eye Software
%%Title: paper.dvi
%%CreationDate: Mon Mar 20 11:33:02 1995
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Times-Italic Times-Bold Courier
%%EndComments
%DVIPSCommandLine: dvips -D 600 paper -o
%DVIPSParameters: dpi=600, comments removed
%DVIPSSource:  TeX output 1995.03.20:1132
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: /u/ddas/tex/pstricks/ps/pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1993/3/12. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
pathforall z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 eq y 0 eq and { /x 1 def /y 1 def } if [ y x ] 1 a
sub y mul setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap n { currentstrokeadjust == x1 y1 moveto x2 y1 L
stroke /y1 y1 a add def } repeat grestore } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap systemdict /currentstrokeadjust known {
currentstrokeadjust } { false } ifelse { /t { } def } { /t { transform
0.25 sub round 0.25 add exch 0.25 sub round 0.25 add exch itransform }
bind def } ifelse n { x1 y1 t moveto x2 y1 t L stroke /y1 y1 a add def }
repeat grestore } def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } pathforall ] cvx newpath 3 1 roll T exec } def
/SD { 0 360 arc fill } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { /a 4 string def /b ED /d ED /n ED cvi dup 1 lt { pop 1 } if /c ED
c div dup 0 eq { pop 1 } if /cy ED c div dup 0 eq { pop 1 } if /cx ED cy
div cvi /y ED cx div cvi /x ED cy div cvi /y2 ED cx div cvi /x2 ED cy
div cvi /y1 ED cx div cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse
def /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2
div add def /Helvetica findfont b scalefont setfont /b b .95 mul CLW 2
div add def } if gsave n 0 gt { 1 setlinecap [ 0 cy n div ] 0 setdash }
{ 2 setlinecap } ifelse /c x1 def /i 500 w mul x1 add def /e y cy mul
def /f y1 cy mul def /g y2 cy mul def x1 cx mul 0 T { newpath 0 e moveto
b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1} {z1 z2
add neg} ifelse h 0 gt {b neg} {z1} ifelse rmoveto show grestore } if 0
f moveto 0 g L stroke cx w mul 0 T c x2 eq c i eq or {exit} if /c c w
add def } loop grestore gsave n 0 gt { 1 setlinecap [ 0 cx n div ] 0
setdash } { 2 setlinecap } ifelse /c y1 def /i 500 h mul y1 add def /e x
cx mul def /f x1 cx mul def /g x2 cx mul def 0 y1 cy mul T { newpath e 0
moveto b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1 z2
add neg} {z1} ifelse h 0 gt {z1} {b neg} ifelse rmoveto show grestore }
if f 0 moveto g 0 L stroke 0 cy h mul T c y2 eq c i eq or {exit} if /c c
h add def } loop grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /lmtrx [ tx@Dict /lmtrx known { lmtrx aload pop } if CM ] def
CP 4 2 roll T moveto } def
/PutEnd { CP /lmtrx [ lmtrx aload pop setmatrix ] def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { CP OLUnit T
moveto /IfVisible true def } if } { IfVisible { CP OLUnit NET moveto
/IfVisible false def } if } ifelse } def
/InitOL { /OLUnit [ gsave CM STV 2890.79999 dup moveto setmatrix CP
grestore ] cvx def /BOL { BeginOL } def /IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: /u/ddas/tex/pstricks/ps/pst-node.pro
% PostScript prologue for pst-node.tex.
% Created 1993/3/12. Source file was pst-node.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@NodeDict 200 dict def tx@NodeDict begin
/NewNode { gsave /next ED dict dup 3 -1 roll ED begin tx@Dict begin STV
CP T exec end /NodeMtrx CM def next end grestore } def
/InitPnode { /Y ED /X ED /NodePos { Nodesep Cos mul Nodesep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { Nodesep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r Nodesep add def } { /dx l Nodesep sub def
} ifelse Sin 0 gt { /dy u Nodesep add def } { /dy d Nodesep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /r ED r mul neg /l ED /r r l add def /X l neg def { neg /d
ED /u ED /Y 0 def } { neg /Y ED Y sub /u ED u mul neg /d ED /u u d add
def /Y Y d sub def } ifelse /NodePos { GetRnodePos } def } def
/InitRNode { /Y ED /X ED /r ED /X r 2 div X add def /r r X sub def /l X
neg def Y add neg /d ED Y sub /u ED /NodePos { GetRnodePos } def } def
/GetOnodePos { /ww w Nodesep add def /hh h Nodesep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/GetAngle { nodeA GetCenter nodeB GetCenter 3 -1 roll sub 3 1 roll sub
neg Atan  } def
/GetEdge { begin /Nodesep ED dup 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED NodePos Y add exch X add exch
NodeMtrx transform CM itransform end 4 2 roll 1 index 0 eq { pop pop } {
2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse } def
/GetPos { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED OffsetB
AngleB NodesepB nodeB GetEdge /y2 ED /x2 ED } def
/InitNC { /nodeB ED /nodeA ED /NodesepB ED /NodesepA ED /OffsetB ED
/OffsetA ED tx@NodeDict nodeA known tx@NodeDict nodeB known and dup {
/nodeA nodeA load def /nodeB nodeB load def } if } def
/LineMP { 4 copy 1 t sub mul exch t mul add 3 1 roll 1 t sub mul exch t
mul add exch 6 2 roll sub 3 1 roll sub Atan  } def
/NCCoor { GetAngle /AngleA ED /AngleB AngleA 180 add def GetPos /LPutVar
[ x2 x1 y2 y1 ] cvx def /LPutPos { LPutVar LineMP } def x1 y1 x2 y2 }
def
/NCLine { NCCoor tx@Dict begin ArrowB 4 2 roll ArrowA lineto end } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan } def
/GetArms { /x1a armA AngleA cos mul x1 add def /y1a armA AngleA sin mul
y1 add def /x2a armB AngleB cos mul x2 add def /y2a armB AngleB sin mul
y2 add def } def
/NCCurve { GetPos x1 x2 sub y1 y2 sub Pyth 2 div dup 3 -1 roll mul /armA
ED mul /armB ED GetArms x1a y1a x1 y1 tx@Dict begin ArrowA end x2a y2a
x2 y2 tx@Dict begin ArrowB end curveto /LPutVar [ x1 y1 x1a y1a x2a y2a
x2 y2 ] cvx def /LPutPos { t LPutVar BezierMidpoint } def } def
/AnglesMP { LPutVar t 3 gt { /t t 3 sub def } { t 2 gt { /t t 2 sub def
10 -2 roll } { t 1 gt { /t t 1 sub def 10 -4 roll } { 10 4 roll } ifelse
} ifelse } ifelse 6 { pop } repeat 3 -1 roll exch LineMP  } def
/NCAngles { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform exch pop mtrx itransform /y0 ED /x0
ED mark armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1a y1a armA 0 ne { x1 y1 }
if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a y2a x0 y0 x1a y1a
x1 y1 ] cvx def /LPutPos { AnglesMP } def } def
/NCAngle { GetPos /x2a armB AngleB cos mul x2 add def /y2a armB AngleB
sin mul y2 add def /mtrx AngleA matrix rotate def x2a y2a mtrx transform
pop x1 y1 mtrx transform exch pop mtrx itransform /y0 ED /x0 ED mark
armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1 y1 tx@Dict begin false Line end
/LPutVar [ x2 y2 x2 y2 x2a y2a x0 y0 x1 y1 ] cvx def /LPutPos { AnglesMP
} def } def
/NCBar { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform pop sub dup 0 mtrx itransform 3 -1
roll 0 gt { /y2a exch y2a add def /x2a exch x2a add def } { /y1a exch
neg y1a add def /x2a exch neg x2a add def } ifelse mark x2 y2 x2a y2a
x1a y1a x1 y1 tx@Dict begin false Line end /LPutVar [ x2 y2 x2 y2 x2a
y2a x1a y1a x1 y1 ] cvx def /LPutPos { LPutVar AnglesMP } def } def
/NCDiag { GetPos GetArms mark x2 y2 x2a y2a x1a y1a x1 y1 tx@Dict begin
false Line end /LPutVar [ x2 y2 x2 y2 x2a y2a x1a y1a x1 y1 ] cvx def
/LPutPos { AnglesMP } def } def
/NCDiagg { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED /x1a armA
AngleA cos mul x1 add def /y1a armA AngleA sin mul y1 add def nodeB
GetCenter y1a sub exch x1a sub Atan 180 add /AngleB ED OffsetB AngleB
NodesepB nodeB GetEdge /y2 ED /x2 ED mark x2 y2 x1a y1a x1 y1 tx@Dict
begin false Line end /LPutVar [ x2 y2 x2 y2 x2 y2 x1a y1a x1 y1] cvx def
/LPutPos { AnglesMP } def } def
/LoopMP { /t t abs def [ LPutVar ] length 2 div 1 sub dup t lt { /t ED }
{ pop } ifelse mark LPutVar t cvi { /t t 1 sub def pop pop } repeat
counttomark 1 add 4 roll cleartomark 3 -1 roll exch LineMP  } def
/NCLoop { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform loopsize add /y1b ED /x1b ED /x2b x2a y2a mtrx transform pop
def x2b y1b mtrx itransform /y2b ED /x2b ED x1b y1b mtrx itransform /y1b
ED /x1b ED mark armB 0 ne { x2 y2 } if x2a y2a x2b y2b x1b y1b x1a y1a
armA 0 ne { x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a
y2a x2b y2b x1b y1b x1a y1a x1 y1 ] cvx def /LPutPos { LoopMP } def }
def
/NCCircle { nodeA GetCenter 0 0 NodesepA nodeA GetEdge pop 3 1 roll /Y ED
/X ED X sub 2 div dup 2 exp r r mul sub abs sqrt atan 2 mul /a ED r
AngleA 90 add PtoC Y add exch X add exch 2 copy /LPutVar [ 4 2 roll r a
] def /LPutPos { LPutVar aload pop t 360 mul add dup 5 1 roll 90 sub
PtoC 3 -1 roll add 3 1 roll add exch 3 -1 roll } def r AngleA 90 sub a
add AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c
57.2957 r Div def /y ED /x ED } def
/LPutCoor { tx@NodeDict /LPutPos known { gsave LPutPos tx@Dict begin
/langle ED CM 3 1 roll STV CP 3 -1 roll sub neg 3 1 roll sub exch moveto
setmatrix CP end grestore } { 0 0 tx@Dict /langle 0 def end } ifelse }
def
end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /box{newpath 2 copy moveto 3 copy pop exch lineto 4
copy pop pop lineto 4 copy exch pop exch pop lineto closepath } bind
def /min{ 2 copy gt { exch } if pop } bind def/max{ 2 copy lt { exch
} if pop } bind def/roundedbox{/radius exch store 3 2 roll 2 copy min
radius sub /miny exch store max radius add /maxy exch store 2 copy
min radius sub /minx exch store max radius add /maxx exch store newpath
minx radius add miny moveto maxx miny maxx maxy radius arcto maxx maxy
minx maxy radius arcto minx maxy minx miny radius arcto minx miny maxx
miny radius arcto 16 {pop} repeat closepath }bind def /rectcartouche{box
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def /cartouche{roundedbox
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def end

 TeXDict begin /box{newpath 2 copy moveto 3 copy pop exch lineto 4
copy pop pop lineto 4 copy exch pop exch pop lineto closepath } bind
def /min{ 2 copy gt { exch } if pop } bind def/max{ 2 copy lt { exch
} if pop } bind def/roundedbox{/radius exch store 3 2 roll 2 copy min
radius sub /miny exch store max radius add /maxy exch store 2 copy
min radius sub /minx exch store max radius add /maxx exch store newpath
minx radius add miny moveto maxx miny maxx maxy radius arcto maxx maxy
minx maxy radius arcto minx maxy minx miny radius arcto minx miny maxx
miny radius arcto 16 {pop} repeat closepath }bind def /rectcartouche{box
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def /cartouche{roundedbox
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def end
 
@fedspecial end TeXDict begin
40258431 52099146 1000 600 600
(/v/ahhnold/v3/ddas/research/papers/ICDE-11/paper.dvi)
@start /Fa 188[28 67[{}1 41.666668 /Times-Italic rf /Fb
1 60 df<38FEFEFFFFFF3B0303030706060E0C1C3830706008147A8614>59
D E /Fc 7 57 df<003FC00000FFF00003E07C0007C03E000F801F000F000F001E000780
1E0007803E0007C03E0007C07C0003E07C0003E07C0003E07C0003E07C0003E0FC0003F0
FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0
FC0003F0FC0003F0FC0003F0FC0003F0FC0003F0FC0003F07C0003E07C0003E07C0003E0
7E0007E03E0007C03E0007C03E0007C01F000F800F000F000F801F0007C03E0003F0FC00
00FFF000003FC0001C2D7DAB23>48 D<000C00003C00007C0003FC00FFFC00FC7C00007C
00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C
00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C
00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0000FE007FFF
FE7FFFFE172C7AAB23>I<007F800001FFF0000780FC000E003F001C001F8038000FC070
000FC0600007E0F00007E0FC0007F0FE0007F0FE0003F0FE0003F0FE0003F07C0007F000
0007F0000007F0000007E000000FE000000FC000001FC000001F8000003F0000007E0000
007C000000F8000001F0000003E0000007C000000F8000001E0000003C00000078000000
F0003000E0003001C0003003800060070000600E0000E01FFFFFE03FFFFFE07FFFFFC0FF
FFFFC0FFFFFFC01C2C7DAB23>I<003FC00001FFF00007C0FC000E007E001C003F001C00
1F803F001FC03F001FC03F800FC03F000FC03F000FC00C001FC000001FC000001F800000
1F8000003F0000003E0000007C000000F8000003F00000FFC00000FFF0000000FC000000
3F0000001F8000001FC000000FC000000FE000000FE0000007F0000007F0380007F07C00
07F0FE0007F0FE0007F0FE0007F0FE000FE0F8000FE060000FC070001FC038001F801E00
3F000780FC0001FFF000007FC0001C2D7DAB23>I<00000E0000000E0000001E0000003E
0000003E0000007E000000FE000000FE000001BE000003BE0000033E0000063E00000E3E
00000C3E0000183E0000383E0000303E0000603E0000E03E0000C03E0001803E0003803E
0003003E0006003E000E003E000C003E0018003E0038003E0030003E0060003E00E0003E
00FFFFFFFCFFFFFFFC00003E0000003E0000003E0000003E0000003E0000003E0000003E
0000003E0000003E0000007F00001FFFFC001FFFFC1E2D7EAC23>I<0C0001800FC01F80
0FFFFF000FFFFE000FFFFC000FFFF0000FFFC0000C7E00000C0000000C0000000C000000
0C0000000C0000000C0000000C0000000C0000000C1FC0000C7FF8000DE07C000F801F00
0F001F800E000F800C0007C0000007E0000007E0000003E0000003F0000003F0000003F0
000003F0780003F0FC0003F0FC0003F0FC0003F0FC0003F0F80007E0E00007E0600007C0
70000FC038000F801C001F000E003E000780F80001FFE000007F80001C2D7DAB23>I<00
1FC00000FFF00003E07C0007801E000F000F001E0007801E0007803C0003C03C0003C03C
0003C03C0003C03E0003C03E0007C03F0007801FC00F801FE00F001FF81E000FFC3C0007
FFF80003FFE00000FFE000003FF80000FFFC0003C7FF000783FF801F00FFC01E003FC03C
001FE07C0007E0780003F0F80003F0F00001F0F00000F0F00000F0F00000F0F00000F0F8
0000E0780001E07C0001C03C0003C01E0007800F800F0007E03C0001FFF000003FC0001C
2D7DAB23>56 D E /Fd 135[50 3[50 50 3[50 50 50 50 2[50
2[50 50 1[50 50 50 97[{}13 83.333336 /Courier rf /Fe
1 49 df<038007C007C007C00F800F800F800F001F001E001E003E003C003C0038007800
780070007000E000E0000A157D9612>48 D E /Ff 6 104 df<FFFFFFFFFEFFFFFFFFFE
FFFFFFFFFE27037A8F34>0 D<003800003800003800003800003800403804F0381EF810
3E7E10FC0F11E003938000FE0000380000FE000393800F11E07E10FCF8103EF0381E4038
0400380000380000380000380000380017197B9A22>3 D<000000003000000000000000
380000000000000038000000000000003C000000000000001E000000000000000E000000
000000000F00000000000000078000000000000003C000007FFFFFFFFFE00000FFFFFFFF
FFF00000FFFFFFFFFFFC000000000000003E000000000000000F8000000000000007E000
000000000001FC000000000000007F800000000000003F80000000000000FC0000000000
0003F00000000000000F800000000000001F000000000000003C0000FFFFFFFFFFF80000
FFFFFFFFFFF000007FFFFFFFFFE000000000000003C00000000000000780000000000000
0F000000000000000E000000000000001E000000000000003C0000000000000038000000
0000000038000000000000003000000039237C9F42>41 D<00F001F803F803F803F807F0
07F007F007E007E00FC00FC00FC00F801F801F001F001F003E003E003C003C007C007800
78007000F000F000E0000D1D7D9F13>48 D<00007E0003FE0007E0000F00001E00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C0000780000780000F00003E000FF8000FC0000
FF800003E00000F000007800007800003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
001E00000F000007E00003FE00007E173B7BAB22>102 D<FC0000FF800007E00001F000
007800003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00001E00001E00000F000007C0
0001FE00007E0001FE0007C0000F00001E00001E00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00003C0000780001F00007E000FF8000FC0000173B7BAB22>I
E /Fg 7 56 df<001C00007C0007FC00FFFC00FFFC00F8FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC007FFFF87FFFF87FFFF8151C7B9B1F>49 D<03FE000FFFC03FFFF0
7E07F8F803FCFC01FCFC00FEFC00FEFC007E7800FE0000FE0000FE0001FC0001F80003F0
0007E0000F80003E00007C0000F00E01E00E07801C0FFFFC1FFFFC7FFFFCFFFFFCFFFFF8
FFFFF8171C7C9B1F>I<00FF800003FFE0000FFFF8001F01FC003E00FE003F007E003F00
7E003F007E003F00FE000C00FC000001FC000003F00000FFC00000FFF0000001FC000000
FE0000007F0000003F8000003F8030003F80FC003F80FC003F80FC003F80FC007F00F800
FF007E01FE003FFFF8000FFFF00001FF8000191D7D9B1F>I<0003F0000003F0000007F0
00000FF000001DF0000039F0000039F0000071F00000E1F00001C1F0000381F0000701F0
000701F0000E01F0001C01F0003801F0007001F000F001F000FFFFFF80FFFFFF80FFFFFF
800003F0000003F0000003F0000003F00000FFFF8000FFFF8000FFFF80191C7D9B1F>I<
3800783FFFF83FFFF03FFFE03FFF803FFE003FF0003C00003C00003C00003CFF003FFFC0
3F03F03E01F83C00FC38007C00007E00007E00007E78007EFC007EFC007EFC00FCF800FC
7801F87E03F03FFFE00FFF8003FE00171D7C9B1F>I<001FE00000FFF80003FFFC0007F0
3E000FC07E001F807E003F007E003E007E007E003C007E000000FC3F8000FCFFF000FDC0
FC00FF807E00FF003F00FE001F00FE001F80FC001F80FC001F80FC001F807C001F807E00
1F807E001F803E003F003F003F001F80FE000FFFF80003FFF000007F8000191D7D9B1F>
I<380000003FFFFF803FFFFF807FFFFF807FFFFF007FFFFE007FFFFC007000F800E001F0
00E003E0000007C000000F8000001F0000001F0000003E0000007E0000007C0000007C00
0000FC000000FC000000F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000000F00000191D7C9B1F>I E /Fh 7 62 df<007C00000000600001FF000000
00F00003C380000001F0000700C0000001E0000E0060000003E0001E007000000FC0001C
003C00001F80003C003F00007F80003C001BE003FF00007C0018FFFF9E00007800181FFC
3E000078000C00007C0000F8000C0000780000F8000C0000F80000F8000C0001F00000F8
000C0001E00000F8000C0003E00000F8000C0007C00000F8000C0007800000F8000C000F
800000F8000C001F00000078000C001E000000780018003E0000007C0018007C0000003C
001800780000003C003000F80000001C003001F00000001E006001E00000000E006003E0
0000000700C007C000000003C380078000000001FF000F80000000007C001F0000000000
00001E0007C0000000003E001FF0000000007C003C38000000007800700C00000000F800
F00600000001F001E00600000001E001E00300000003E003C00300000007C003C0018000
00078007C0018000000F800780018000001F000780018000001E000F8000C000003E000F
8000C000007C000F8000C0000078000F8000C00000F8000F8000C00001F0000F8000C000
01E0000F8000C00003E0000F8000C00007C0000F8000C0000780000F8000C0000F800007
800180001F000007800180001E000007C00180003E000003C00180007C000003C0030000
78000001E0030000F8000001E0060001F0000000F0060001E0000000700C0003E0000000
3C380003C00000001FF000018000000007C0003A437BBD45>37 D<0003F80000001FFF00
00007E0FC00000F803E00003E000F80003C000780007C0007C000F80003E000F80003E00
1F00001F001F00001F003F00001F803F00001F803F00001F807E00000FC07E00000FC07E
00000FC07E00000FC07E00000FC0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00
000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE07E00000F
C07E00000FC07E00000FC07E00000FC07F00001FC03F00001F803F00001F803F00001F80
1F00001F001F00001F000F80003E000F80003E0007C0007C0003E000F80003E000F80000
F803E000007E0FC000001FFF00000007FC000023387DB62A>48 D<000180000007800000
0F8000003F800001FF8000FFFF8000FFDF8000FE1F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800000
1F8000001F8000001F8000001F8000003FC0007FFFFFE07FFFFFE07FFFFFE01B3779B62A
>I<0007F80000003FFF000000FFFFC00001F00FE000038003F000070001F8000F0001FC
000FC001FE001FE000FE001FE000FF001FE000FF001FE000FF000FE000FF000FC000FF00
038000FF00000000FE00000000FE00000001FE00000001FC00000001F800000003F00000
0003E000000007C00000000F800000007F0000001FFC0000001FFF800000000FE0000000
03F000000001FC00000000FE00000000FF000000007F000000007F800000007FC0000000
3FC00000003FC00000003FE00000003FE03E00003FE07F00003FE0FF80003FE0FF80003F
E0FF80003FE0FF80003FC0FF00007FC07E00007F807C00007F80300000FF00380000FE00
1C0001FC000F0003F80007F00FF00001FFFFC000007FFF8000000FFC000023387DB62A>
51 D<0600000C000780003C0007F003F80007FFFFF00007FFFFE00007FFFFC00007FFFF
800007FFFF000007FFFC0000067FE0000006000000000600000000060000000006000000
000600000000060000000006000000000600000000060000000006000000000600000000
0607F80000063FFF000006F80F800007C003C000070001F000060000F800040000F80000
00007C000000007E000000007E000000003F000000003F000000003F000000003F800000
003F800000003F803C00003F807E00003F80FF00003F80FF00003F80FF00003F80FF0000
3F00FE00003F00FC00007F006000007E006000007E00300000FC00380000F800180001F8
000E0003F000070007E00003E03F800001FFFF0000007FFC0000001FE0000021387CB62A
>53 D<1C003E007F00FF80FF80FF807F003E001C00000000000000000000000000000000
0000000000000000000000000000000000000000001C003E007F00FF80FF80FF807F003E
001C00092479A317>58 D<7FFFFFFFFFFFF8FFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFF
FFFFFC000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFC
FFFFFFFFFFFFFCFFFFFFFFFFFFFC7FFFFFFFFFFFF836167B9F41>61
D E /Fi 3 106 df<001FF00000FFFF0003E03FC00F801FE01F000FF01F800FF83FC007
F83FE007F83FE007F83FE007F83FE00FF83FE00FF01FC00FF007001FE000003FE000007F
800000FF00007FFC00007FF800007FFF0000003FC000000FF0000007F8000007FC0C0007
FC3F0003FE7F8003FEFFC003FEFFC003FEFFC003FEFFC003FEFFC003FC7F8007FC7F0007
F83F000FF01FC03FE007FFFFC001FFFF00003FF0001F277DA526>51
D<FFFFFFFF000000FFFFFFFFF00000FFFFFFFFFC000003FE0007FF000003FE00007FC000
03FE00003FE00003FE00000FF00003FE000007F80003FE000003F80003FE000003FC0003
FE000001FE0003FE000001FE0003FE000000FF0003FE000000FF0003FE000000FF0003FE
000000FF0003FE000000FF8003FE000000FF8003FE000000FF8003FE000000FF8003FE00
0000FF8003FE000000FF8003FE000000FF8003FE000000FF8003FE000000FF8003FE0000
00FF0003FE000000FF0003FE000000FF0003FE000001FE0003FE000001FE0003FE000003
FC0003FE000003FC0003FE000007F80003FE00000FF00003FE00001FE00003FE00007FC0
0003FE0003FF0000FFFFFFFFFE0000FFFFFFFFF00000FFFFFFFF00000031287DA739>68
D<0F801FC03FE03FE03FE03FE03FE01FC00F80000000000000000000000000FFE0FFE0FF
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE0FFFCFFFCFFFC0E297CA816>105 D E /Fj 1 69 df<FFFFFFFFFF800000FF
FFFFFFFFF80000FFFFFFFFFFFF0000FFFFFFFFFFFFC000007FF80007FFF000007FF80000
7FF800007FF800001FFE00007FF800000FFF00007FF8000003FF80007FF8000001FFC000
7FF8000001FFC0007FF8000000FFE0007FF80000007FF0007FF80000007FF0007FF80000
003FF8007FF80000003FF8007FF80000003FFC007FF80000001FFC007FF80000001FFC00
7FF80000001FFE007FF80000001FFE007FF80000001FFE007FF80000001FFE007FF80000
001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF00
7FF80000001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFF007FF80000
001FFF007FF80000001FFF007FF80000001FFF007FF80000001FFE007FF80000001FFE00
7FF80000001FFE007FF80000001FFE007FF80000001FFC007FF80000003FFC007FF80000
003FFC007FF80000003FF8007FF80000007FF8007FF80000007FF0007FF8000000FFE000
7FF8000000FFE0007FF8000001FFC0007FF8000003FF80007FF8000007FF00007FF80000
1FFE00007FF800007FFC00007FF80007FFF000FFFFFFFFFFFFC000FFFFFFFFFFFF0000FF
FFFFFFFFFC0000FFFFFFFFFF80000040397DB849>68 D E /Fk 3
106 df<00000000003C00000000000000003C00000000000000003E0000000000000000
1E00000000000000001F00000000000000000F8000000000000000078000000000000000
07C00000000000000003E00000000000000001F00000000000000000F800000000000000
00FC00007FFFFFFFFFFFFE0000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFF8000FFFFFFFFFF
FFFFC00000000000000003E00000000000000001F80000000000000000FE000000000000
00003F00000000000000001FE00000000000000007F80000000000000001FF0000000000
000001FF0000000000000007F8000000000000001FE0000000000000003F000000000000
0000FE0000000000000001F80000000000000003E000FFFFFFFFFFFFFFC000FFFFFFFFFF
FFFF8000FFFFFFFFFFFFFF00007FFFFFFFFFFFFE0000000000000000FC00000000000000
00F80000000000000001F00000000000000003E00000000000000007C000000000000000
0780000000000000000F80000000000000001F00000000000000001E0000000000000000
3E00000000000000003C00000000000000003C000000482E7BAB53>41
D<0000C00001E00003E00003E00003C00007C00007C0000780000F80000F80001F00001F
00001E00003E00003E00007C00007C0000780000F80000F80001F00001F00001E00003E0
0003E00003C00007C00007C0000F80000F80000F00001F00001F00003E00003E00003C00
007C00007C0000780000F80000F80000F80000F800007800007C00007C00003C00003E00
003E00001F00001F00000F00000F80000F800007C00007C00003C00003E00003E00001E0
0001F00001F00000F80000F800007800007C00007C00003E00003E00001E00001F00001F
00000F80000F800007800007C00007C00003C00003E00003E00001E00000C0135278BD20
>104 D<600000F00000F80000F800007800007C00007C00003C00003E00003E00001F00
001F00000F00000F80000F800007C00007C00003C00003E00003E00001F00001F00000F0
0000F80000F800007800007C00007C00003E00003E00001E00001F00001F00000F80000F
800007800007C00007C00003C00003E00003E00003E00003E00003C00007C00007C00007
80000F80000F80001F00001F00001E00003E00003E00007C00007C0000780000F80000F8
0000F00001F00001F00003E00003E00003C00007C00007C0000F80000F80000F00001F00
001F00003E00003E00003C00007C00007C0000780000F80000F80000F000006000001352
7CBD20>I E /Fl 3 111 df<70F8F8F87005057A8413>58 D<03FFFFC00003FFFFF80000
3C007E00003C001F00003C000F80003C000F800078000F800078000F800078000F800078
001F0000F0003E0000F000780000F003E00000FFFE000001E007000001E003C00001E001
C00001E001E00003C001E00003C001E00003C001E00003C001E000078003E000078003E0
60078003E060078003E0C0FFF801F0C0FFF800F1800000003E00231D7B9B2B>82
D<0F03F00033861C0021D81E0061F01E00C3E01E00C3C01E0003C01E0003C01E0007803C
0007803C0007803C00078078200F0078600F00F0600F00F0C00F00F0C01E0071800C003E
001B127D9125>110 D E /Fm 139[12 16 14 1[21 21 21 1[12
2[12 1[21 1[18 21 18 1[18 12[25 23 28 2[30 30 37 25 1[16
14 2[23 25 1[28 1[30 20[10 2[14 14 40[{}29 41.666668
/Times-Roman rf /Fn 3 52 df<00600001E0000FE000FFE000F1E00001E00001E00001
E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001
E00001E00001E00001E00001E00001E00001E0007FFF807FFF80111C7B9B1C>49
D<03FC000FFF801C0FC03003E06001F0E000F0E000F8F00078F000786000780000F80000
F00001F00001E00003C0000700000E00001C0000300000E0000180180300180600180800
383FFFF07FFFF0FFFFF0FFFFF0151C7D9B1C>I<03FC000FFF001C07C03001E07001F078
01F07800F03001F00001F00001E00003C0000780001E0003FC000007800003C00001E000
00F00000F80000F86000F8F000F8F000F8E000F06001F07003E03C07C00FFF0003FC0015
1D7D9B1C>I E /Fo 81[32 51[26 29 29 1[29 29 16 23 19 1[29
29 29 45 16 1[16 16 29 29 19 26 29 26 29 26 7[42 2[42
42 36 32 39 42 32 42 42 52 2[23 19 1[42 32 36 42 39 1[42
1[26 5[29 29 29 29 29 29 29 29 29 3[19 15 2[19 19 40[{}57
58.333336 /Times-Roman rf /Fp 134[29 29 2[32 19 23 26
1[32 29 32 48 16 2[16 32 29 1[26 32 26 1[29 14[42 45
36 45 5[23 3[39 42 2[42 1[29 63[{}27 58.333336 /Times-Bold
rf /Fq 138[33 18 26 26 1[33 1[33 48 3[18 1[33 1[29 3[33
97[{}11 66.666664 /Times-Italic rf /Fr 7 56 df<00E00001E00007E000FFE000
F9E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E000
01E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E00001E000
01E00001E00003F000FFFFC0FFFFC012217AA01E>49 D<01FC0007FF801C0FC03003E060
01F06000F8F800F8FC00FCFC00FCFC007C78007C3000FC0000FC0000F80000F80001F000
03E00003C0000780000F00001E0000380000700000E00001C00C03800C0600180C001818
00183FFFF87FFFF8FFFFF0FFFFF016217CA01E>I<00FF0003FFC00F03E01C00F01C00F8
3E00FC3E007C3E007C1E00FC0C00FC0000F80000F80001F00003E0000FC001FF0001FF00
0003E00000F000007800007C00003E00003F30003F78003FFC003FFC003FFC003EF8007E
60007C3800F81E03F00FFFC001FF0018227DA01E>I<0000E00001E00001E00003E00007
E00007E0000DE0001DE00039E00031E00061E000E1E000C1E00181E00381E00701E00601
E00C01E01C01E01801E03001E07001E0E001E0FFFFFFFFFFFF0001E00001E00001E00001
E00001E00001E00003F0003FFF003FFF18227DA11E>I<1000301E01F01FFFE01FFFC01F
FF801FFE001BF00018000018000018000018000018000018FE001BFF801F03C01C01E018
00F01800F800007800007800007C00007C30007C78007CF8007CF8007CF80078F000F860
00F07001E03801E01E078007FF0001F80016227CA01E>I<000FC0007FF001F03803C018
07803C0F007C1E007C1C00383C00003C00007C0000780000787FC0F8FFE0F980F0FA0038
FE003CFC001EFC001EF8001FF8001FF8001FF8001F78001F78001F78001F3C001E3C001E
1C003C1E00380F00700781E001FFC0007F0018227DA01E>I<3000003C00003FFFFF3FFF
FF7FFFFE7FFFFC60001C600038600070C000E0C000C00001C0000380000700000600000E
00001C00001C0000380000380000780000780000780000F00000F00000F00000F00001F0
0001F00001F00001F00001F00001F00001F00000E00018237CA11E>I
E /Fs 1 4 df<7FFFFFFFFFFFF8FFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFCF0
00000000003CF000000000003CF000000000003CF000000000003CF000000000003CF000
000000003CF000000000003CF000000000003CF000000000003CF000000000003CF00000
0000003CF000000000003CF000000000003CF000000000003CF000000000003CF0000000
00003CF000000000003CF000000000003CF000000000003CF000000000003CF000000000
003CF000000000003CF000000000003CF000000000003CF000000000003CF00000000000
3CF000000000003CF000000000003CF000000000003CF000000000003CF000000000003C
F000000000003CF000000000003CF000000000003CF000000000003CF000000000003CF0
00000000003CF000000000003CF000000000003CF000000000003CF000000000003CF000
000000003CF000000000003CF000000000003CF000000000003CF000000000003CF00000
0000003CF000000000003CFFFFFFFFFFFFFCFFFFFFFFFFFFFCFFFFFFFFFFFFFC7FFFFFFF
FFFFF836387BB741>3 D E /Ft 18 112 df<387CFEFEFEFEFEFE7C7C7C7C7C7C7C7C7C
7C3838383838383838383810000000000038FEFEFEFEFE3807297BA813>33
D<0006000C00180030006000E001C00380038007000F000E001E001E001C003C003C003C
0078007800780078007800F800F000F000F000F000F000F000F000F000F000F000F000F8
00780078007800780078003C003C003C001C001E001E000E000F0007000380038001C000
E0006000300018000C00060F3B7AAB1A>40 D<C0006000300018000C000E000700038003
8001C001E000E000F000F00070007800780078003C003C003C003C003C003E001E001E00
1E001E001E001E001E001E001E001E001E003E003C003C003C003C003C00780078007800
7000F000F000E001E001C00380038007000E000C00180030006000C0000F3B7DAB1A>I<
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E000000FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E00000000000E00000000000E00000000000E00000000000E00000000000E000000
00000E0000002B2B7DA333>43 D<00380000780001F8001FF800FEF800E0F80000F80000
F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000
F80000F80000F80000F80001FC00FFFFF8FFFFF815267BA521>49
D<00FF000003FFE0000E03F0001800F80030007C0060003E0078001F00FC001F00FE001F
80FE001F80FE000F80FE000F807C000F8000001F8000001F0000001F0000003F0000003E
0000007C00000078000000F0000001E0000003C00000078000000F0000001C0000003800
000070018000E0018001C0018003800300060003000C0003001FFFFF003FFFFF007FFFFE
00FFFFFE00FFFFFE0019267DA521>I<00FF000003FFE0000F01F8001C007C0030003E00
3C003E007E003F007E001F007E001F007E003F003C003F0000003E0000003E0000007C00
0000F8000001F0000007E00001FF800001FF00000001E0000000F00000007C0000003E00
00003F0000001F0000001F8000001F8038001F807C001F80FE001F80FE001F80FE001F00
FC003F0078003E0070007C003800F8001F01F00007FFC00000FF000019277DA521>I<00
00380000003800000078000000F8000001F8000001F8000003F8000007F8000006F80000
0CF800001CF8000018F8000030F8000070F8000060F80000C0F80001C0F8000180F80003
00F8000700F8000E00F8000C00F8001C00F8003800F8003000F8006000F800E000F800FF
FFFFE0FFFFFFE00000F8000000F8000000F8000000F8000000F8000000F8000000F80000
01FC00003FFFE0003FFFE01B277EA621>I<18000C001F007C001FFFF8001FFFF0001FFF
E0001FFF800019FC00001800000018000000180000001800000018000000180000001800
0000187F000019FFE0001F81F0001E0078001C003C0018003E0000003E0000001F000000
1F0000001F8000001F8030001F807C001F80FC001F80FC001F80FC001F80FC001F00F000
1F0060003E0070003E0030007C001C00F8000F03E00003FFC00000FE000019277DA521>
I<000FE000003FF80000F81C0001E0060003801F0007003F000F003F001E003F001E003F
003C001E003C0000007C0000007800000078040000783FC000F8FFF000F9807800FB003C
00FA001E00FC001E00FC000F00FC000F00F8000F80F8000F80F8000F80F8000F8078000F
8078000F8078000F8078000F803C000F003C000F001C001E001E001E000E003C00070078
0003C0F00001FFC000007F000019277DA521>I<300000003C0000003FFFFFE03FFFFFE0
3FFFFFC07FFFFF807FFFFF807000070060000E0060000C00C0001C00C0003800C0007000
0000E0000000C0000001C000000380000003800000070000000F0000000E0000001E0000
001E0000001E0000003E0000003C0000003C0000007C0000007C0000007C0000007C0000
00FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000780000
1B287DA621>I<387CFEFEFE7C380000000000000000000000387CFEFEFE7C3807197B98
13>58 D<387CFEFEFE7C380000000000000000000000387CFCFEFE7E3E0606060C0C0C18
1830702007247B9813>I<7FFFFFFFFFC0FFFFFFFFFFE0FFFFFFFFFFE000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000FFFFFFFFFFE0FFFFFFFFFFE07F
FFFFFFFFC02B117D9633>61 D<01FF000FFFE01E01F038007860007CF8003EFC003EFC00
3EFC003E78003E30007C00007C0000F80001F00003C0000780000F00000E00001C000018
000038000030000030000030000030000030000030000030000020000000000000000000
0000000000000000700001FC0001FC0001FC0001FC0001FC0000700017297DA81F>63
D<007E03E001FF8FF00781F8F00F00F0F01E0078001C0038003C003C003C003C003C003C
003C003C003C003C003C003C001C0038001E0078000F00F0000781E00009FF8000087E00
0018000000180000001C0000001E0000000FFFF0000FFFFC0007FFFF000FFFFF801C001F
C0380007C0780003E0F00001E0F00001E0F00001E0F00001E0780003C07C0007C03E000F
800FC07E0003FFF800007FC0001C277E9921>103 D<0F80FF80FF801F800F800F800F80
0F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F80
0F800F800F800F800F800F800F800F800F800F800F800F801FC0FFF8FFF80D287EA713>
108 D<003F800000FFE00003E0F80007803C000F001E001E000F003C0007803C00078078
0003C0780003C0780003C0F80003E0F80003E0F80003E0F80003E0F80003E0F80003E0F8
0003E0780003C0780003C07C0007C03C0007801E000F001F001F000F803E0003E0F80001
FFF000003F80001B1C7E9A21>111 D E /Fu 11 121 df<387CFEFEFE7C3807077A8614>
58 D<387CFEFFFF7F3B0303030606060C1838702008127A8614>I<E000000000F8000000
00FE000000003F800000000FE000000003F800000000FE000000003F800000000FE00000
0003F800000000FE000000003F800000000FE000000003F800000000FE000000003F8000
00000FE000000003F800000000FE000000003E00000000FE00000003F80000000FE00000
003F80000000FE00000003F80000000FE00000003F80000000FE00000003F80000000FE0
0000003F80000000FE00000003F80000000FE00000003F80000000FE00000000F8000000
00E00000000027277AA134>62 D<00000001800000000003800000000007800000000007
C0000000000FC0000000001FC0000000001FC00000000037C00000000037C00000000067
C000000000C7C000000000C7E00000000183E00000000383E00000000303E00000000603
E00000000E03E00000000C03E00000001803F00000001801F00000003001F00000006001
F00000006001F0000000C001F0000001C001F00000018001F0000003FFFFF8000003FFFF
F80000060000F800000C0000F800000C0000F80000180000F80000380000F80000300000
FC00006000007C0000E000007C0000C000007C0001C000007C0003C000007C000FC00000
FE00FFF8000FFFE0FFF8000FFFE02B2A7DA932>65 D<003FFFFFFFF8003FFFFFFFF80001
F80003F80001F00000F80001F00000780003F00000300003F00000300003E00000300003
E00000300007E00000300007E00000300007C00180300007C0018030000FC0038000000F
C0030000000F80030000000F80070000001F801F0000001FFFFE0000001FFFFE0000001F
001E0000003F000E0000003F000C0000003E000C0000003E000C0000007E001C01C0007E
00180180007C00000180007C0000038000FC0000070000FC0000070000F800000E0000F8
00000E0001F800001C0001F800003C0001F00000780001F00001F80003F0000FF000FFFF
FFFFF000FFFFFFFFE0002D287CA731>69 D<003FFFFFFFE0003FFFFFFFE00001F80007E0
0001F00003E00001F00001E00003F00000C00003F00000C00003E00000C00003E00000C0
0007E00000C00007E00000C00007C00000C00007C00300C0000FC0070000000FC0060000
000F80060000000F800E0000001F800E0000001F803C0000001FFFFC0000001FFFFC0000
003F003C0000003F00180000003E00180000003E00180000007E00380000007E00300000
007C00300000007C0000000000FC0000000000FC0000000000F80000000000F800000000
01F80000000001F80000000001F00000000001F00000000003F000000000FFFFE0000000
FFFFE00000002B287CA72A>I<000001FF000000001FFFE00000007E01F8000001F0007E
000007C0001F00000F80000F80001E000007C0007C000007C000F8000003E001F0000003
E001F0000001F003E0000001F007C0000001F00FC0000001F00F80000001F81F80000001
F81F00000001F83F00000001F83F00000001F07E00000003F07E00000003F07E00000003
F07E00000003F07E00000007E0FC00000007E0FC0000000FC0FC0000000FC0FC0000001F
80FC0000001F807C0000003F007E0000003E007E0000007E003E000000FC003E000001F8
001F000003F0001F800007C0000F80000F800007C0003F000003F000FC000000FC03F000
00003FFFC000000007FC0000002D2A7DA832>79 D<003FFFFFC000003FFFFFF8000001F8
00FE000001F0001F000001F0000F800003F0000FC00003F00007C00003E00007C00003E0
0007E00007E00007E00007E0000FC00007C0000FC00007C0000FC0000FC0001F80000FC0
001F00000F80003E00000F80007C00001F8001F000001F800FE000001FFFFF0000001FFF
FE0000003F001F0000003F0007C000003E0007C000003E0003E000007E0003E000007E00
03E000007C0003E000007C0003E00000FC0007E00000FC0007E00000F80007E00000F800
07E00001F80007E01001F80007E03001F00007E03001F00007E07003F00007E0E0FFFF80
03F1C0FFFF8001FF80000000007E002C297CA732>82 D<00001FE0080000FFFC180003E0
1E380007000770000E0003F000180001F000300000F000700000E000E00000E000E00000
E000E00000E001E00000C001E00000C001E000000001F000000000F800000000FE000000
007FE00000007FFE0000003FFFE000000FFFF0000001FFF80000001FFC00000001FE0000
00003E000000001F000000000F000000000F000000000F00180000070018000007003800
000E003000000E003800000C003800001C0078000038007C000070007E0000E000770003
C000E3E00F0000C0FFFE0000801FF00000252A7CA829>I<000E00001F00001F00001E00
000C0000000000000000000000000000000000000000000000000003E00007F0000C7800
183800303800303800607800607800C07800C0F00000F00001E00001E00001E00003C000
03C0000780000781800781800F01800F03000F03000F06000F0C000F1C0007F00001E000
11287DA617>105 D<00F807C001FE1FF0070738380E07B0381C03E0781803C0F83003C0
F83003C07060078000600780000007800000078000000F0000000F0000000F0000000F00
00001E0000001E0030001E0030301E0060783E0060F83E00C0F87E00C0F06E038061CF07
007F83FC001E01F8001D1B7D9926>120 D E /Fv 11 121 df<1C007F00FF80FF80FF80
FF80FF807F001C000909798817>58 D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C0
00C000C000C001C00180018003800300070006000E001C003800700060000A19798817>
I<00000000006000000000000070000000000000F0000000000001F0000000000001F000
0000000003F0000000000003F0000000000007F000000000000FF000000000000FF00000
0000001FF800000000001FF8000000000033F8000000000073F8000000000063F8000000
0000C3F80000000000C3F8000000000183F8000000000183F8000000000303F800000000
0603F8000000000603FC000000000C03FC000000000C01FC000000001801FC0000000030
01FC000000003001FC000000006001FC000000006001FC00000000C001FC00000001C001
FC000000018001FC000000030001FE000000030001FE000000060000FE0000000E0000FE
0000000C0000FE000000180000FE0000001FFFFFFE0000003FFFFFFE0000003FFFFFFE00
0000600000FE000000C00000FE000000C00000FF000001800000FF0000018000007F0000
030000007F0000060000007F0000060000007F00000C0000007F00000C0000007F000018
0000007F0000380000007F0000700000007F0000F00000007F8001F80000007F8007F800
0000FF80FFFF80003FFFFFFFFF80007FFFFFFFFF80007FFFFF383C7DBB3E>65
D<0003FFFFFFFFFFF00007FFFFFFFFFFF00007FFFFFFFFFFF0000007F800003FF0000007
F0000007F0000007F0000003E000000FF0000001E000000FF0000000E000000FE0000000
E000000FE0000000E000001FE0000000E000001FE0000000E000001FC0000000E000001F
C0000000C000003FC0000000C000003FC0000000C000003F80003000C000003F80003000
C000007F80007000C000007F800070000000007F000060000000007F0000E000000000FF
0000E000000000FF0001E000000000FE0003C000000000FE000FC000000001FFFFFFC000
000001FFFFFFC000000001FFFFFF8000000001FC000F8000000003FC00078000000003FC
00078000000003F800030000000003F800030000000007F800070000000007F800070003
000007F000060003000007F00006000700000FF00006000600000FF00000000600000FE0
0000000E00000FE00000000C00001FE00000001C00001FE00000001800001FC000000038
00001FC00000003800003FC00000007000003FC0000000F000003F80000001E000003F80
000001E000007F80000007E000007F8000000FC000007F0000003FC00000FF000003FF80
00FFFFFFFFFFFF8000FFFFFFFFFFFF8000FFFFFFFFFFFF00003C397DB83D>69
D<0003FFFFFFFFFFE00007FFFFFFFFFFE00007FFFFFFFFFFE0000007F800003FE0000007
F000000FE0000007F0000003C000000FF0000003C000000FF0000001C000000FE0000001
C000000FE0000001C000001FE0000001C000001FE0000001C000001FC0000001C000001F
C00000018000003FC00000018000003FC00000018000003F800000018000003F80006001
8000007F8000E0018000007F8000E0000000007F0000C0000000007F0000C000000000FF
0001C000000000FF0001C000000000FE00038000000000FE00078000000001FE001F8000
000001FFFFFF8000000001FFFFFF0000000001FFFFFF0000000003FC001F0000000003FC
000F0000000003F8000E0000000003F8000E0000000007F8000E0000000007F8000E0000
000007F0000C0000000007F0000C000000000FF0001C000000000FF0001C000000000FE0
0000000000000FE00000000000001FE00000000000001FE00000000000001FC000000000
00001FC00000000000003FC00000000000003FC00000000000003F800000000000003F80
0000000000007F800000000000007F800000000000007F00000000000000FF8000000000
00FFFFFFC000000000FFFFFFC000000000FFFFFFC0000000003B397DB835>I<0003FFF8
00001FFFF80007FFFC00003FFFF80007FFFC00003FFFF8000007FC000001FF00000007FE
0000007C00000006FE000000780000000EFF000000700000000E7F000000700000000C7F
800000600000000C7F800000600000001C3F800000E00000001C3FC00000C0000000181F
C00000C0000000181FE00000C0000000381FE00001C0000000380FF0000180000000300F
F00001800000003007F00001800000007007F80003800000007003F80003000000006003
FC0003000000006003FC000300000000E001FC000700000000E001FE000600000000C000
FE000600000000C000FF000600000001C0007F000E00000001C0007F800C000000018000
7F800C0000000180003F800C0000000380003FC01C0000000380001FC018000000030000
1FE0180000000300000FE0180000000700000FF0380000000700000FF030000000060000
07F03000000006000007F8300000000E000003F8700000000E000003FC600000000C0000
03FC600000000C000001FE600000001C000001FEE00000001C000000FEC0000000180000
00FFC0000000180000007FC0000000380000007FC0000000380000007F80000000300000
003F80000000300000003F80000000700000001F80000000700000001F00000000F00000
000F00000007FC0000000F000000FFFFE000000F000000FFFFE0000006000000FFFFE000
000600000045397DB843>78 D<00000001FF00000000001FFFF000000000FE01FC000000
03F0007E00000007C0001F8000001F80000FC000003E000007E00000FC000003F00001F8
000003F00003F0000001F80007E0000001F8000FC0000000FC001F80000000FC003F0000
0000FE007F000000007E00FE000000007E00FC000000007F01FC000000007F03F8000000
007F03F8000000007F07F0000000007F07F0000000007F0FF0000000007F0FE000000000
7F1FE000000000FF1FE000000000FF3FC000000000FF3FC000000000FF3FC000000000FF
7F8000000001FE7F8000000001FE7F8000000001FE7F8000000001FEFF8000000003FCFF
0000000003FCFF0000000003FCFF0000000007F8FF0000000007F8FF000000000FF0FF00
0000000FF0FF000000000FE0FF000000001FE0FF000000001FC0FF000000003F807F0000
00007F807F000000007F007F00000000FE007F00000001FC003F80000001F8003F800000
03F8001F80000007F0001FC000000FE0000FC000001F800007E000003F000007F000007E
000003F00001F8000001FC0003F00000007E000FC00000003F807F0000000007FFF80000
000000FF80000000383D7CBA3F>I<0003FFFFFFF800000007FFFFFFFF80000007FFFFFF
FFE000000007F8001FF800000007F00003FC00000007F00000FE0000000FF000007F0000
000FF000007F0000000FE000003F8000000FE000003F8000001FE000003FC000001FE000
003FC000001FC000003FC000001FC000003FC000003FC000003FC000003FC000007F8000
003F8000007F8000003F8000007F8000007F800000FF0000007F800000FE0000007F0000
01FC0000007F000003F8000000FF000007F0000000FF00000FE0000000FE00001F800000
00FE00007F00000001FE0007F800000001FFFFFFE000000001FFFFFF0000000001FC000F
C000000003FC0003F000000003FC0001F800000003F80000FC00000003F80000FE000000
07F80000FE00000007F800007E00000007F000007E00000007F000007F0000000FF00000
FF0000000FF00000FE0000000FE00000FE0000000FE00000FE0000001FE00001FE000000
1FE00001FE0000001FC00001FE0000001FC00001FE0000003FC00001FE0000003FC00003
FE0000003F800003FC0060003F800003FC0060007F800003FC00E0007F800003FC00C000
7F000003FC01C000FF800001FC0180FFFFFF0001FC0380FFFFFF0000FE0700FFFFFF0000
7E0E0000000000001FFC00000000000007F0003B3B7DB83F>82 D<0000001FE003800000
00FFFC0300000003FFFE070000000FE01F8F0000003F0007DF0000007E0001FE000000F8
0000FE000001F00000FE000003E000007E000003E000007C000007C000003C00000F8000
003C00000F8000003C00001F8000003800001F0000003800001F0000003800001F000000
3800003F0000003000003F0000003000003F8000003000003F8000000000003FC0000000
00003FE000000000001FF000000000001FFE00000000001FFFE0000000000FFFFE000000
0007FFFFC000000003FFFFF000000001FFFFF800000000FFFFFC000000001FFFFE000000
0003FFFF00000000003FFF000000000003FF800000000000FF8000000000007F80000000
00003F8000000000001F8000000000001F8000000000001F80000C0000001F80000C0000
000F80000C0000000F80001C0000001F80001C0000001F00001C0000001F00001C000000
1F00003C0000003E00003C0000003E00003C0000007C00003E000000F800007E000000F8
00007F000001F000007F800003E000007FC0000FC00000F9F0001F800000F0FE00FE0000
00E03FFFF8000000E00FFFE0000000C001FF00000000313D7CBA33>I<0000E00001F800
03F80003F80003F80003F00001C000000000000000000000000000000000000000000000
000000000000000000000000000000F80003FE00070F000E0F801C0F80180F80380F8030
0F80701F80601F80603F80E03F00C03F00C07F00007E00007E0000FE0000FC0001FC0001
FC0001F80003F80003F00003F00007F01807E01807E0380FE0300FC0300FC0700F80600F
80E00F80C00F81C00F838007870003FE0000F80015397EB71D>105
D<0007E001F000001FF807FE0000783E0E0F0000E01F1C0F0001C01F383F8003800FF03F
8003000FE03F8007000FE03F000E000FC03F000C000FC01C000C001FC000001C001F8000
0018001F80000018001F80000000003F80000000003F80000000003F00000000003F0000
0000007F00000000007F00000000007E00000000007E0000000000FE0000000000FE0000
000000FC000C000000FC000C000001FC001C000001FC0018001C01F80018007E01F80038
007E03F8007000FE03F8006000FE07F800E000FE0E7C01C000781C7C03800078383E0F00
003FF00FFC000007C003F0000029267EA42F>120 D E /Fw 139[28
32 37 1[46 42 46 69 23 2[23 46 42 1[37 46 37 46 42 12[55
46 2[51 65 8[51 1[60 2[60 18[21 46[{}24 83.333336 /Times-Bold
rf /Fx 133[44 50 50 1[50 55 33 39 44 55 55 50 55 83 28
2[28 55 50 33 44 55 44 1[50 12[66 3[61 78 72 4[39 4[72
1[66 12[50 50 50 50 50 2[25 46[{}35 100.000000 /Times-Bold
rf /Fy 135[40 2[40 40 40 2[40 2[40 3[40 2[40 40 40 40
1[40 50[40 46[{}13 66.666664 /Courier rf /Fz 69[29 8[33
1[37 37 3[29 47[29 33 33 48 33 33 18 26 22 33 33 33 33
52 18 33 1[18 33 33 22 29 33 29 33 29 8[48 63 48 48 41
37 44 48 37 48 48 59 41 1[26 22 1[48 37 41 48 44 1[48
5[18 1[33 33 33 33 33 33 33 33 33 33 1[17 22 17 2[22
22 40[{}67 66.666664 /Times-Roman rf /FA 2 122 df<0060000070000060000060
00406020E06070F861F07C63E00F6F0003FC0000600003FC000F6F007C63E0F861F0E060
7040602000600000600000700000600014157B9620>3 D<00600000F00000F00000F000
00F00000F00000F0000060000060000060000060000060000060007861E0FFFFF0FFFFF0
7861E000600000600000600000600000F00000F00000F00000F00000F00000F00000F000
00F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F000
006000006000006000006000006000006000006000142F7CA31E>121
D E /FB 81[66 53[60 86 1[66 40 47 53 1[66 60 66 100 33
66 1[33 66 60 40 53 66 53 66 60 10[86 1[80 1[86 1[73
6[47 3[80 1[86 1[86 6[40 3[60 60 60 60 60 60 3[40 45[{}38
119.999947 /Times-Bold rf /FC 78[50 55[50 50 1[50 50
28 39 33 1[50 50 50 78 3[28 50 1[33 44 50 44 50 44 11[72
61 55 14[72 66 66 72 92 7[50 50 4[50 50 2[25 1[25 44[{}34
100.000000 /Times-Roman rf /FD 4 122 df<00007000000000F800000000F8000000
00F800000000F800000000F800000000F800000000F800000000F8000000007000007800
7000F07C007001F0FF007007F87F80700FF03FE0703FE00FF0707F8003F870FE0000FE73
F800003F77E000000FFF80000003FE00000000F800000003FE0000000FFF8000003F77E0
0000FE73F80003F870FE000FF0707F803FE0703FE07F80700FF0FF007007F87C007001F0
78007000F000007000000000F800000000F800000000F800000000F800000000F8000000
00F800000000F800000000F800000000700000252B7AAD32>3 D<0000000FE0000000FF
E0000003FC0000000FE00000003FC00000007F80000000FF00000000FE00000001FC0000
0001FC00000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000003F800000003F800000003F800000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000007F000000007F00000000FE00000001FE00000
003FC00000007F80000000FE00000007F8000000FFE0000000FFE000000007F800000000
FE000000007F800000003FC00000001FE00000000FE000000007F000000007F000000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000003F800000003F800000003F800000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000001FC00000001FC00000000FE00000000FF000000007F80000000
3FC00000000FE000000003FC00000000FFE00000000FE0236479CA32>102
D<FE00000000FFE000000007F800000000FE000000007F800000003FC00000001FE00000
000FE000000007F000000007F000000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800000003F8
00000003F800000003F800000003F800000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000003F800000003F800000001FC00000001FC0000
0000FE00000000FF000000007F800000003FC00000000FE000000003FC00000000FFE000
0000FFE0000003FC0000000FE00000003FC00000007F80000000FF00000000FE00000001
FC00000001FC00000003F800000003F800000003F800000003F800000003F800000003F8
00000003F800000003F800000003F800000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F800000007F000000007F00000000FE00000001F
E00000003FC00000007F80000000FE00000007F8000000FFE0000000FE00000000236479
CA32>I<0001C000000007F000000007F000000007F000000007F000000007F000000007
F000000007F000000007F000000007F000000007F000000003E000000003E000000003E0
00000003E000000003E000000003E000000003E000000001C000000001C000000001C000
000001C000000001C000000001C000003E01C03E00FFE1C3FF80FFFFFFFF80FFFFFFFF80
FFFFFFFF80FFE1C3FF803E01C03E000001C000000001C000000001C000000001C0000000
03E000000003E000000003E000000003E000000003E000000007F000000007F000000007
F000000007F000000007F000000007F000000007F000000007F000000007F000000007F0
00000007F000000007F000000007F000000007F000000007F000000007F000000007F000
000007F000000007F000000007F000000007F000000007F000000007F000000007F00000
0007F000000007F000000003E000000003E000000003E000000003E000000003E0000000
03E000000003E000000003E000000003E000000003E000000003E000000003E000000003
E000000003E000000003E000000001C000000001C000000001C000000001C000000001C0
00000001C000000001C000000001C000000001C000000001C00000215B7BC52C>121
D E /FE 81[80 51[64 72 1[104 1[80 48 56 64 1[80 72 80
120 40 80 1[40 2[48 64 1[64 1[72 13[80 104 112 88 112
8[88 4[104 6[48 58[{}27 144.000000 /Times-Bold rf /FF
81[42 51[32 37 37 55 37 42 23 32 32 42 42 42 42 60 23
37 23 23 42 42 23 37 42 37 42 42 9[69 51 60 46 42 51
60 51 60 1[69 3[28 1[60 51 51 60 55 51 51 6[28 42 42
42 42 2[42 42 42 2[21 28 21 44[{}56 83.333336 /Times-Italic
rf /FG 47[83 13[28 7[37 8[42 1[46 46 3[37 47[37 42 42
60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42 42 28
37 42 37 42 37 3[28 1[28 2[60 78 60 60 51 46 55 60 46
60 60 74 51 60 32 28 60 60 46 51 60 55 55 60 1[37 3[23
23 42 42 42 42 42 42 42 42 42 42 23 21 28 21 47 1[28
28 28 1[69 37[{}81 83.333336 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop -112 -352 3537 4 v -112 -227 4 125 v -84 -270
a FG(In)20 b FF(Pr)m(oceedings)e(1)-6 b(1th)20 b(International)e
(Confer)m(ence)h(on)h(Data)f(Engineering)p FG(,)f(pages)i(201\261210,)d
(T)-6 b(aipei,)20 b(March)g(1995)p 3421 -227 V -112 -224
3537 4 v 685 286 a FE(Prairie:)46 b(A)35 b(Rule)g(Speci\256cation)e
(Framework)1267 469 y(for)i(Query)f(Optimizers)2600 417
y FD(\003)-17 b(y)1160 710 y FC(Dinesh)24 b(Das)650 b(Don)25
b(Batory)1262 826 y(Department)g(of)g(Computer)f(Sciences)1274
942 y(The)h(University)f(of)g(T)-7 b(exas)25 b(at)g(Austin)1417
1058 y(Austin,)f(T)-7 b(exas)24 b(78712\2611)l(188)1358
1175 y FD(f)p FC(ddas,batory)p FD(g)p FC(@cs.utexas.edu)-112
1500 y FB(Abstract)-112 1692 y FF(Fr)m(om)h(our)h(experience,)g(curr)m
(ent)g(rule-based)f(query)g(optimizers)-112 1791 y(do)c(not)h(pr)m
(ovide)g(a)g(very)h(intuitive)f(and)f(well-de\256ned)g(framework)-112
1891 y(to)30 b(de\256ne)g(rules)h(and)e(actions.)57 b(T)-8
b(o)32 b(r)m(emedy)e(this)h(situation,)h(we)-112 1991
y(pr)m(opose)23 b(an)g(extensible)h(and)g(structur)m(ed)g(algebraic)f
(framework)-112 2090 y(called)f(Prairie)h(for)h(specifying)e(rules.)35
b(Prairie)24 b(facilitates)f(rule-)-112 2190 y(writing)h(by)f(enabling)
f(a)i(user)g(to)g(write)h(rules)f(and)f(actions)g(mor)m(e)-116
2289 y(quickly)-5 b(,)16 b(corr)m(ectly)g(and)g(in)h(an)f
(easy-to-understand)d(and)i(easy-to-)-112 2389 y(debug)j(manner)-9
b(.)-29 2492 y(Query)24 b(optimizers)h(consist)g(of)g(thr)m(ee)g(major)
f(parts:)36 b(a)25 b(sear)m(ch)-116 2592 y(space,)17
b(a)h(cost)f(model)g(and)f(a)i(sear)m(ch)f(strategy)-5
b(.)26 b(The)18 b(appr)m(oach)d(we)-113 2691 y(take)k(is)i(only)e(to)h
(develop)e(the)i(algebra)f(which)g(de\256nes)g(the)h(sear)m(ch)-112
2791 y(space)29 b(and)g(the)h(cost)g(model)f(and)g(use)h(the)g(V)-9
b(olcano)28 b(optimizer)n(-)-112 2891 y(generator)c(as)i(our)f(sear)m
(ch)h(engine.)41 b(Using)26 b(Prairie)g(as)g(a)f(fr)m(ont-)-112
2990 y(end,)j(we)h(translate)e(Prairie)h(rules)g(to)g(V)-9
b(olcano)26 b(to)h(validate)g(our)-112 3090 y(claim)20
b(that)g(Prairie)g(makes)g(it)h(easier)g(to)f(write)i(rules.)-33
3193 y(W)-8 b(e)18 b(describe)e(our)h(algebra)f(and)g(pr)m(esent)h
(experimental)f(r)m(esults)-118 3293 y(which)f(show)h(that)f(using)g(a)
h(high-level)e(framework)i(like)f(Prairie)h(to)-117 3392
y(design)e(lar)m(ge-scale)h(optimizers)i(does)e(not)h(sacri\256ce)f
(ef\256ciency)-5 b(.)-112 3691 y FB(1)119 b(Intr)n(oduction)-119
3883 y FG(Query)13 b(optimization)f([8])i(is)h(a)g(fundamental)d(part)i
(of)g(database)g(sys-)-112 3982 y(tems.)26 b(It)20 b(is)h(the)f
(process)g(of)f(generating)f(an)i(ef)o(\256cient)f(access)i(plan)-112
4082 y(for)i(a)i(database)f(query)-5 b(.)37 b(Informally)-5
b(,)22 b(an)i(access)h(plan)f(is)h(an)f(exe-)-112 4181
y(cution)g(strategy)h(for)g(a)h(query;)g(it)g(is)h(the)e(sequence)g(of)
g(low-level)-112 4281 y(database)e(retrieval)h(operations)f(that,)i
(when)f(executed,)g(produce)-112 4381 y(the)f(database)g(records)f
(that)i(satisfy)f(the)h(query)-5 b(.)34 b(There)23 b(are)g(three)-112
4480 y(basic)h(aspects)h(that)f(de\256ne)g(and)g(in\257uence)f(query)g
(optimization:)-112 4580 y(the)d(search)f(space,)h(the)h(cost)f(model,)
f(and)h(the)g(search)g(strategy)-5 b(.)-30 4683 y(The)20
b FF(sear)m(ch)f(space)h FG(is)g(the)g(set)h(of)e(logically)g
(equivalent)g(access)-112 4783 y(plans)27 b(that)g(can)h(be)f(used)g
(to)h(evaluate)f(a)g(query)-5 b(.)47 b(All)28 b(plans)g(in)f(a)p
-112 4867 788 4 v -29 4921 a FA(\003)7 4944 y Fz(This)18
b(research)h(was)f(supported)i(in)e(part)h(by)f(grants)h(from)e(The)h
(University)i(of)-112 5023 y(T)-5 b(exas)23 b(Applied)h(Research)h
(Laboratories,)h(Schlumber)o(ger)m(,)g(and)d(Digital)h(Equip-)-112
5102 y(ment)17 b(Corporation.)-26 5160 y FA(y)7 5184
y Fz(An)d(expanded)j(version)f(of)f(this)g(paper)h(is)e(available)k(as)
d(T)-5 b(echnical)17 b(Report)f(TR)-112 5263 y(94\26116)h(by)g
(anonymous)h(ftp)f(from)g Fy(ftp.cs.utexas.edu)p Fz(.)2044
1500 y FG(query')-5 b(s)20 b(search)g(space)h(return)e(the)i(same)g
(result;)g(however)m(,)e(some)2042 1600 y(plans)g(are)f(more)g(ef)o
(\256cient)g(than)h(others.)25 b(The)19 b FF(cost)g(model)f
FG(assigns)2043 1699 y(a)i(cost)g(to)g(each)f(plan)g(in)h(the)f(search)
h(space.)26 b(The)19 b(cost)h(of)g(a)g(plan)f(is)2041
1799 y(an)f(estimate)g(of)g(the)g(resources)f(used)g(when)h(the)g(plan)
f(is)i(executed;)2040 1899 y(the)e(lower)g(the)g(cost,)h(the)f(better)g
(the)g(plan.)25 b(The)17 b FF(sear)m(ch)g(strategy)g
FG(is)2044 1998 y(a)23 b(speci\256cation)f(of)h(which)f(plans)h(in)g
(the)g(search)f(space)h(are)g(to)g(be)2044 2098 y(examined.)2127
2197 y(T)m(raditionally)-5 b(,)18 b(query)h(optimizers)h(have)g(been)g
(built)g(as)i(mono-)2044 2297 y(lithic)i(subsystems)f(of)h(a)g(DBMS.)g
(This)g(simply)f(re\257ects)h(the)g(fact)2040 2397 y(that)18
b(traditional)e(database)h(systems)h(are)f(themselves)g(monolithic:)
2043 2496 y(the)i(algorithms)f(used)g(for)h(storing)f(and)h(retrieving)
e(data)i(are)h(hard-)2044 2596 y(wired)25 b(and)f(are)i(rather)e(dif)o
(\256cult)g(to)i(change.)41 b(The)25 b(need)f(to)i(have)2041
2696 y(extensible)18 b(database)f(systems,)i(and)f(in)g(turn)f
(extensible)h(optimiz-)2044 2795 y(ers,)27 b(has)f(long)f(been)h
(recognized)d(in)j(systems)h(like)f(Genesis)g([1],)2039
2895 y(EXODUS)17 b([9],)g(Starburst)e([10],)h(and)g(Postgres)h([12].)24
b(Rule-based)2043 2994 y(query)19 b(optimizers)g(are)h(among)e(the)i
(major)f(conceptual)g(advances)2044 3094 y(that)28 b(have)g(been)g
(proposed)f(to)i(deal)f(with)h(query)e(optimizer)g(ex-)2044
3194 y(tensibility)d([6,)13 b(7,)g(9,)g(10].)39 b(The)24
b(extensibility)f(translates)i(into)f(the)2044 3293 y(ability)e(to)g
(incorporate)e(new)i(operators,)f(algorithms,)h(cost)g(mod-)2044
3393 y(els,)27 b(or)e(search)g(strategies)g(without)f(changing)g(the)h
(optimization)2044 3493 y(algorithm.)2127 3592 y(In)c(this)h(paper)m(,)
e(we)i(describe)e(an)i(algebraic)e(framework)f(called)2042
3692 y FF(Prairie)h FG(for)e(specifying)g(rules)h(in)g(a)g(rule-based)f
(query)f(optimizer)-5 b(.)2044 3791 y(Prairie)27 b(is)h(similar)f(to)g
(other)f(rule)h(speci\256cation)f(languages)g(like)2044
3891 y(Starburst)d([10])f(and)h(V)-11 b(olcano)22 b([7],)i(and)f
(indeed,)g(we)h(have)e(based)2044 3991 y(our)i(work)g(on)h(V)-11
b(olcano)24 b(to)h(capture)e(most)i(of)g(the)g(advantages)e(of)2040
4090 y(rule-based)16 b(optimizers.)25 b(However)m(,)16
b(Prairie)h(attempts)g(to)g(provide)2040 4190 y(some)g(key)g(features)f
(that,)i(we)g(have)e(found,)g(simplify)h(the)g(ef)o(fort)e(in)2044
4290 y(writing)k(rules:)2106 4466 y(1.)41 b(A)26 b(framework)e(in)i
(which)g(users)g(can)g(de\256ne)g(a)g(query)f(opti-)2210
4565 y(mizer)c(concisely)f(in)h(terms)g(of)g(a)h(well-de\256ned)d(set)j
(of)f(oper)n(-)2210 4665 y(ators)g(and)g(algorithms.)29
b FF(All)22 b FG(operators)e(and)h(algorithms)f(are)2210
4764 y(considered)f(\256rst-class)i(objects,)g(i.e.,)f
FF(any)g FG(of)h(them)f(can)g(oc-)2210 4864 y(cur)15
b(in)g(any)g(rule,)h(and)f FF(only)g FG(these)h(operators)d(and)i
(algorithms)2210 4964 y(can)25 b(appear)f(in)h(rules.)42
b(This)26 b(scheme)e(eliminates)i(the)f(need)2210 5063
y(for)17 b(special)h(classes)i(of)d(operators)g(and)h(algorithms,)f
(such)g(as)2210 5163 y(enforcers)i(in)i(V)-11 b(olcano)19
b(and)h(glue)g(in)h(Starburst,)f(that)h(signif-)2210
5263 y(icantly)f(complicate)f(rule)g(speci\256cation.)p
eop
%%Page: 2 2
2 1 bop -50 21 a FG(2.)41 b(A)17 b(framework)d(in)j(which)f(users)h
(can)f(de\256ne)g(a)h(list)h(of)f(proper)n(-)54 120 y(ties)g(to)f
(characterize)f(the)h(expressions)f(generated)f(in)i(the)h(op-)54
220 y(timization)g(process.)26 b(Again,)18 b(the)h(goal)e(here)h(is)i
(to)e(allow)h(the)54 319 y(user)h(to)h(treat)g FF(all)g
FG(properties)e(as)j(having)d(equal)h(status.)30 b(This)54
419 y(is)22 b(dif)o(ferent)d(from)h(V)-11 b(olcano)20
b(where)g(the)i(user)e(must)i(classify)54 519 y(properties)30
b(as)i(logical,)h(physical,)h(or)d(operator/algorithm)54
618 y(ar)o(guments.)-50 790 y(3.)41 b(A)h(framework)d(in)j(which)f
(users)g(can)h(specify)f(mapping)54 889 y(functions)30
b(between)h(properties)f(concomitantly)f(with)j(the)54
989 y(corresponding)23 b(rules.)47 b(This)28 b(contrasts)e(with)i
(existing)e(ap-)54 1088 y(proaches)32 b(in)i(which)g(mappings)e
(between)h(properties)g(are)54 1188 y(fragmented)14 b(into)i(multiple)g
(functions)f(and)h(at)h(logically)e(dif-)54 1288 y(ferent)27
b(places)h(than)g(the)g(corresponding)d(rules.)51 b(Research)54
1387 y(into)24 b(rule-based)f(optimizers)h(has)h(revealed)e(that)i
(property-)54 1487 y(mapping)16 b(functions)h(are)h(a)h(major)e(source)
h(of)f(user)i(ef)o(fort,)d(so)54 1587 y(this)k(is)h(an)g(important)d
(goal.)-50 1758 y(4.)41 b(The)16 b(format)h(\(Prairie\))f(in)i(which)e
(users)i(can)f(cleanly)f(specify)54 1857 y(rules)e(is)i(not)e
(necessarily)h(the)f(same)h(format)f(needed)g(for)g(gen-)54
1957 y(erating)25 b(ef)o(\256cient)g(optimizers.)43 b(Thus,)27
b(there)e(is)i(a)f(need)f(for)54 2057 y(a)c(pre-processor)e(\(written)h
(by)h(us\))g(that)g(translates)h(between)54 2156 y(these)e(competing)e
(representations.)-29 2344 y(Prairie)26 b(strives)h(for)e(uniformity)g
(in)h(dealing)g(with)g(issues)i(that)-114 2444 y(have)18
b(been)g(a)i(source)e(of)g(most)h(user)g(ef)o(fort)e(and)i(potential)f
(user)g(er)n(-)-117 2543 y(rors.)26 b(In)16 b(the)h(following)e
(sections,)i(we)g(present)f(the)h(Prairie)f(frame-)-112
2643 y(work.)26 b(W)-7 b(e)22 b(explain)d(how)h(our)f(P2V)i
(pre-processor)d(maps)i(Prairie)-112 2742 y(rule)i(speci\256cations)h
(into)g(V)-11 b(olcano)23 b(rule)g(speci\256cations)g(that)g(can)-118
2842 y(be)16 b(processed)f(ef)o(\256ciently)-5 b(.)24
b(Experimental)14 b(results)i(to)g(support)e(this)-120
2942 y(claim)g(are)g(given)f(in)h(Section)g(4,)h(where)e(we)i(compare)d
(implementa-)-117 3041 y(tions)17 b(of)g(the)f(T)-6 b(exas)17
b(Instruments)e(Open)h(OODB)i(query)d(optimizer)-112
3141 y(using)24 b(both)h(Prairie)g(and)g(V)-11 b(olcano.)41
b(W)-7 b(e)26 b(conclude)e(with)h(a)h(sum-)-112 3241
y(mary)19 b(and)h(related)f(research.)-117 3527 y FB(2)120
b(Prairie:)37 b(A)26 b(language)f(for)g(rule)h(speci\256-)67
3677 y(cation)-112 3864 y FG(The)c(basic)h(concepts)f(and)h
(de\256nitions)f(that)h(underlie)f(the)h(Prairie)-118
3964 y(model)14 b(are)i(presented)e(in)i(this)g(section.)25
b(The)15 b(goal)g(is)h(to)g(lay)f(a)h(foun-)-117 4064
y(dation)g(for)h(reasoning)e(about)h(query)f(optimization)g
(algebraically;)-112 4163 y(this)21 b(is)i(necessary)d(for)h(our)f
(subsequent)g(discussion)h(about)f(trans-)-112 4263 y(lating)f(Prairie)
h(speci\256cations)g(to)h(those)f(of)f(V)-11 b(olcano.)-112
4507 y Fx(2.1)99 b(Notation)24 b(and)i(assumptions)-114
4665 y Fw(Stor)o(ed)19 b(Files)h(and)f(Str)o(eams.)82
b FG(A)20 b(\256le)f(is)i FF(stor)m(ed)g FG(if)e(its)h(tuples)f(re-)
-112 4764 y(side)h(on)g(disk.)27 b(In)20 b(the)h(case)g(of)f
(relational)f(databases,)h(stored)g(\256les)-116 4864
y(are)c(sometimes)h(called)g FF(base)f(r)m(elations)p
FG(;)i(we)f(will)h(denote)e(them)g(by)-118 4964 y Fv(R)i
FG(or)d Fv(R)111 4976 y Fu(i)139 4964 y FG(.)26 b(In)16
b(object-oriented)d(schemas,)k(stored)e(\256les)i(are)f
FF(classes)p FG(;)-112 5063 y(we)21 b(will)i(denote)d(them)h(by)g
FF(C)i FG(or)e FF(C)918 5075 y Fu(i)946 5063 y FG(.)31
b(Henceforth,)20 b(whenever)f(we)-115 5163 y(refer)f(to)g(a)h(stored)f
(\256le,)h(we)g(mean)e(a)i(relation)f(or)g(a)g(class;)i(when)e(the)-118
5263 y(distinction)c(is)i(unimportant,)d(we)j(will)g(use)f
Fv(F)28 b FG(or)15 b Fv(F)1365 5275 y Fu(i)1393 5263
y FG(.)26 b(A)16 b FF(str)m(eam)f FG(is)h(a)2042 21 y(sequence)i(of)h
(tuples)g(and)f(is)i(the)f(result)g(of)g(a)g(computation)e(on)h(one)
2037 120 y(or)d(more)f(streams)h(or)f(stored)h(\256les;)i(tuples)e(of)g
(streams)g(are)f(returned)2044 220 y(one)20 b(at)i(a)f(time,)g
(typically)f(on)g(demand.)28 b(Streams)21 b(can)g(be)f
FF(named)p FG(,)2044 319 y(denoted)e(by)i Fv(S)2482 331
y Fu(i)2510 319 y FG(,)g(or)g FF(unnamed)p FG(.)2044
536 y Fw(Database)f(Operations.)82 b FG(An)20 b FF(operation)f
FG(is)i(a)g(computation)d(on)2044 635 y(one)j(or)h(more)f(streams)i(or)
f(stored)f(\256les.)34 b(There)21 b(are)h(two)g(types)g(of)2043
735 y(database)c(operations)g(in)h(Prairie:)27 b(abstract)19
b(\(or)g(implementation-)2043 835 y(unspeci\256ed\))g(operators)f(and)h
(concrete)g(algorithms.)26 b(Each)19 b(is)i(de-)2044
934 y(tailed)f(below)-5 b(.)2210 1103 y Fw(Operators.)39
b FG(Abstract)28 b(\(or)f(conceptual\))e FF(operators)i
FG(spec-)2392 1203 y(ify)c(computations)e(on)i(streams)g(or)g(stored)g
(\256les;)j(they)2392 1302 y(are)38 b(denoted)d(by)i(all)h(capital)f
(letters)h(\(e.g.,)i(JOIN\).)2392 1402 y(Operators)25
b(have)h(two)g(types)g(of)f(parameters:)38 b(essen-)2392
1502 y(tial)k(and)f(additional.)88 b FF(Essential)41
b(parameters)g FG(are)2392 1601 y(the)c(stream)g(or)f(\256le)h(inputs)f
(to)h(an)g(operator;)43 b(these)2392 1701 y(are)d(the)f(primary)f
(inputs)h(to)g(be)h(processed)e(by)h(an)2392 1800 y(operator)-5
b(.)31 b FF(Additional)20 b(parameters)i FG(are)g(\252\256ne-grain\272)
2392 1900 y(quali\256cations)k(of)g(an)g(operator;)h(their)f(purpose)f
(is)i(to)2392 2000 y(describe)19 b(an)g(operator)f(in)i(more)e(detail)i
(than)f(essential)2392 2099 y(parameters.)2210 2223 y
Fw(Algorithms.)40 b FF(Algorithms)75 b FG(are)h(concrete)e(implemen-)
2392 2323 y(tations)46 b(of)f(conceptual)e(operators;)56
b(they)45 b(will)h(be)2392 2422 y(represented)40 b(in)h(lower)g(case)g
(with)h(the)f(\256rst)h(letter)2392 2522 y(capitalized)50
b(\(e.g.,)56 b(Nested)p 3265 2522 25 4 v 29 w(loops\).)115
b(Algorithms)2392 2621 y(have)34 b(at)g(least)h(the)f(same)g(essential)
g(and)f(additional)2392 2721 y(parameters)24 b(as)h(the)f(conceptual)e
(operators)h(that)i(they)2392 2821 y(implement.)2770
2791 y Ft(1)2897 2821 y FG(Furthermore,)45 b(there)c(can)g(be,)47
b(and)2392 2920 y(usually)35 b(are,)j(several)c(algorithms)g(for)g(a)h
(particular)2392 3020 y(operator)-5 b(.)2044 3189 y(T)f(able)26
b(1)h(lists)h(some)e(operators)f(and)h(algorithms)f(implementing)2044
3288 y(them)20 b(together)e(with)j(their)f(additional)f(parameters.)
2044 3505 y Fw(Operator)i(T)-6 b(r)o(ees.)82 b FG(An)22
b FF(operator)g(tr)m(ee)h FG(is)g(a)g(rooted)e(tree)h(whose)2044
3604 y(non-leaf,)27 b(or)g FF(interior)p FG(,)i(nodes)e(are)h(database)
e(operations)g(\(oper)n(-)2044 3704 y(ators)g(or)g(algorithms\))f(and)g
(whose)h(leaf)h(nodes)e(are)i(stored)e(\256les.)2044
3804 y(The)e(children)g(of)g(an)h(interior)e(node)h(in)h(an)g(operator)
e(tree)h(are)h(the)2044 3903 y(essential)i(parameters)e(\(i.e.,)i(the)g
(stream)f(or)g(\256le)h(parameters\))e(of)2044 4003 y(the)h(node.)42
b(Additional)24 b(parameters)h(are)g(implicitly)g(attached)g(to)2039
4102 y(each)16 b(node.)25 b(Algebraically)-5 b(,)15 b(operator)g(trees)
i(are)f(compositions)f(of)2039 4202 y(database)g(operations;)h(thus,)g
(we)h(will)f(also)h(call)f(operator)e(trees)i FF(ex-)2044
4302 y(pr)m(essions)p FG(;)k(both)g(terms)g(will)h(be)f(used)g
(interchangeably)-5 b(.)2046 4487 y(E)t Fz(X)t(A)t(M)t(P)t(L)t(E)24
b FG(1)t(.)150 b(A)23 b(simple)g(expression)f(and)g(its)i(operator)d
(tree)2044 4587 y(representation)h(are)h(shown)h(in)g(Figure)f(1\(a\).)
38 b(Relations)24 b Fv(R)3831 4599 y Ft(1)3893 4587 y
FG(and)2044 4686 y Fv(R)2107 4698 y Ft(2)2171 4686 y
FG(are)j(\256rst)h(RET)m(rieved,)f(then)f(JOINed,)i(and)e(\256nally)h
(SOR)-5 b(T)f(ed)2044 4786 y(resulting)13 b(in)h(a)h(stream)f(sorted)g
(on)g(a)g(speci\256c)h(attribute.)24 b(The)14 b(\256gure)2044
4886 y(shows)g(only)f(the)h(essential)h(parameters)e(of)h(the)g
(various)f(operators,)2044 4985 y(not)20 b(the)g(additional)f
(parameters.)915 b Fs(\003)p 2044 5107 788 4 v 2129 5160
a Fr(1)2163 5184 y Fz(Algorithms)20 b(may)e(have)h Fq(tuning)g
(parameters)h Fz(which)f(are)f(not)h(parameters)h(of)2044
5263 y(the)e(operators)g(they)g(implement.)p eop
%%Page: 3 3
3 2 bop -112 71 2323 13 v -112 138 4 67 v -59 118 a Fp(Operator)p
330 138 V 211 w(Description)p 912 138 V 294 w(Additional)17
b(Parameters)p 1582 138 V 102 w(Algorithm)p 2207 138
V -112 150 2323 13 v -112 217 4 67 v -59 232 a Fo(JOIN\()p
Fu(S)127 240 y Fn(1)159 232 y Fo(,)d Fu(S)229 240 y Fn(2)261
232 y Fo(\))p 330 217 V 104 w(Join)g(streams)g Fu(S)728
240 y Fn(1)760 232 y Fo(,)g Fu(S)830 240 y Fn(2)p 912
217 V 965 197 a Fo(tuple)p 1084 197 18 4 v 22 w(order)p
1582 217 4 67 v 410 w(Nested)p 1800 197 18 4 v 20 w(loops\()p
Fu(S)2003 205 y Fn(1)2036 197 y Fo(,)g Fu(S)2106 205
y Fn(2)2138 197 y Fo(\))p 2207 217 4 67 v 1585 220 626
4 v -112 283 4 67 v 330 283 V 912 283 V 965 263 a(join)p
1058 263 18 4 v 22 w(predicate)p 1582 283 4 67 v 345
w(Mer)o(ge)p 1789 263 18 4 v 20 w(join\()p Fu(S)1956
271 y Fn(1)1989 263 y Fo(,)g Fu(S)2059 271 y Fn(2)2092
263 y Fo(\))p 2207 283 4 67 v -112 286 2323 4 v -112
363 4 77 v -59 407 a(RET\()p Fu(F)9 b Fo(\))p 330 363
V 384 412 a(Retrieve)14 b(\256le)h Fu(F)p 912 363 V 965
339 a Fo(tuple)p 1084 339 18 4 v 22 w(order)p 1582 363
4 77 v 1635 353 a(File)p 1728 353 18 4 v 21 w(scan\()p
Fu(F)9 b Fo(\))p 2207 363 4 77 v -112 429 4 67 v 330
429 V 912 429 V 965 410 a(selection)p 1175 410 18 4 v
21 w(predicate)p 1582 429 4 67 v 1585 397 622 4 v 2207
429 4 67 v -112 497 4 68 v 330 497 V 912 497 V 965 477
a(projected)p 1184 477 18 4 v 22 w(attributes)p 1582
497 4 68 v 1635 469 a(Index)p 1770 469 18 4 v 21 w(scan\()p
Fu(F)g Fo(\))p 2207 497 4 68 v -112 500 2323 4 v -112
567 4 67 v -59 582 a(SOR)m(T\()p Fu(S)147 590 y Fn(1)178
582 y Fo(\))p 330 567 V 384 583 a(Sort)15 b(stream)f
Fu(S)705 591 y Fn(1)p 912 567 V 965 580 a Fo(tuple)p
1084 580 18 4 v 22 w(order)p 1582 567 4 67 v 1635 547
a(Mer)o(ge)p 1789 547 18 4 v 20 w(sort\()p Fu(S)1953
555 y Fn(1)1986 547 y Fo(\))p 2207 567 4 67 v 1585 570
626 4 v -112 633 4 67 v 330 633 V 912 633 V 1582 633
V 1635 613 a(Null\()p Fu(S)1798 621 y Fn(1)1831 613 y
Fo(\))p 2207 633 V -112 646 2323 13 v -112 793 a FG(T)-6
b(able)17 b(1:)27 b(Operators)17 b(and)h(algorithms)e(in)j(a)f
(centralized)f(query)g(optimizer)g(and)-112 893 y(their)i(additional)g
(parameters)p 2477 33 1525 13 v 2477 99 4 67 v 2530 80
a Fp(Pr)o(operty)p 3033 99 V 335 w(Description)p 3998
99 V 2477 112 1525 13 v 2477 178 4 67 v 2530 158 a Fo(join)p
2623 158 18 4 v 22 w(predicate)p 3033 178 4 67 v 232
w(join)c(predicate)f(for)h(JOIN)g(operator)p 3998 178
V 2477 182 1525 4 v 2477 248 4 67 v 2530 228 a(selection)p
2740 228 18 4 v 21 w(predicate)p 3033 248 4 67 v 116
w(selection)f(predicate)g(for)i(RET)d(operator)p 3998
248 V 2477 251 1525 4 v 2477 318 4 67 v 2530 331 a(tuple)p
2649 331 18 4 v 21 w(order)p 3033 318 4 67 v 3087 298
a(tuple)h(order)i(of)e(resulting)h(stream,)p 3998 318
V 2477 384 V 3033 384 V 3087 364 a(DONT)p 3252 364 18
4 v 20 w(CARE)e(if)i(none)p 3998 384 4 67 v 2477 388
1525 4 v 2477 454 4 67 v 2530 434 a(num)p 2636 434 18
4 v 21 w(records)p 3033 454 4 67 v 262 w(number)g(of)g(tuples)f(of)h
(resulting)g(stream)p 3998 454 V 2477 457 1525 4 v 2477
524 4 67 v 2530 504 a(tuple)p 2649 504 18 4 v 21 w(size)p
3033 524 4 67 v 329 w(size)f(of)g(individual)i(tuple)e(in)h(stream)p
3998 524 V 2477 527 1525 4 v 2477 593 4 67 v 2530 574
a(projected)p 2749 574 18 4 v 21 w(attributes)p 3033
593 4 67 v 104 w(projected)f(attributes)h(for)h(RET)d(operator)p
3998 593 V 2477 597 1525 4 v 2477 663 4 67 v 2530 643
a(attributes)p 3033 663 V 341 w(list)h(of)h(attributes)p
3998 663 V 2477 666 1525 4 v 2477 733 4 67 v 2530 713
a(cost)p 3033 733 V 463 w(estimated)f(cost)g(of)h(algorithm)p
3998 733 V 2477 745 1525 13 v 2477 893 a FG(T)-6 b(able)16
b(2:)26 b(Properties)15 b(of)h(nodes)g(in)g(an)h(operator)d(tree)p
-105 1246 1938 4 v -105 2116 4 870 v 61 1362 a Fm(SOR)n(T)c(\(JOIN)g
(\(RET)h(\()p Fl(R)449 1374 y Fn(1)481 1362 y Fm(\),)f(RET)h(\()p
Fl(R)661 1374 y Fn(2)693 1362 y Fm(\)\)\))346 1463 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodesort 16 { .5 3.39499
0.05246 false .5 12.4799 InitRnode  } NewNode end end

346 1463 a Fm(SOR)n(T)353 1557 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodejoin 16 { .5 3.39499
0.05246 false .5 10.8299 InitRnode  } NewNode end end
 353 1557 a Fm(JOIN)303
1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodesort
/TheNodejoin InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 303 1732 a 264 1652 a
 tx@Dict begin tx@NodeDict begin {  } /TheNoderetr1 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 264 1652 a Fm(RET)453 1652
y
 tx@Dict begin tx@NodeDict begin {  } /TheNoderetr2 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 453 1652 a Fm(RET)303 1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoin
/TheNoderetr1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 303 1732 a 303 1732 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoin
/TheNoderetr2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end

303 1732 a 265 1740 a
 tx@Dict begin tx@NodeDict begin {  } /TheNoder1 16 { .5 3.41667 1.5
false .5 9.05264 InitRnode  } NewNode end end
 265 1740 a Fl(R)308 1752 y Fn(1)455
1740 y
 tx@Dict begin tx@NodeDict begin {  } /TheNoder2 16 { .5 3.41667 1.5
false .5 9.05264 InitRnode  } NewNode end end
 455 1740 a Fl(R)498 1752 y Fn(2)303 1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderetr1
/TheNoder1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 303
1732 a 303 1732 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderetr2
/TheNoder2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 303 1732 a 27 1915 a Fz(\(a\))37 b(An)f(expression)i
(and)f(its)27 1994 y(corresponding)19 b(operator)g(tree)p
872 2091 4 820 v 1237 1458 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodemergesort 16 { .5 3.34
1.07994 false .5 22.25977 InitRnode  } NewNode end end
 1237 1458 a Fm(Mer)o(ge)p
1346 1458 13 4 v 16 w(sort)1219 1553 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodenestedloops 16 { .5 3.39499
1.07994 false .5 26.5197 InitRnode  } NewNode end end
 1219 1553 a Fm(Nested)p
1336 1553 13 4 v 16 w(loops)1235 1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodemergesort
/TheNodenestedloops InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1235 1732 a 1158
1652 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodefilescanr1 16 { .5 3.39499
0.05246 false .5 18.4647 InitRnode  } NewNode end end
 1158 1652 a Fm(File)p 1225 1652 13 4 v 15 w(scan)1347
1652 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodefilescanr2 16 { .5 3.39499
0.05246 false .5 18.4647 InitRnode  } NewNode end end
 1347 1652 a Fm(File)p 1414 1652 13 4 v 15 w(scan)1235
1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodenestedloops
/TheNodefilescanr1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1235 1732 a 1235 1732 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodenestedloops
/TheNodefilescanr2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1235 1732 a 1197 1740
a
 tx@Dict begin tx@NodeDict begin {  } /TheNoder1 16 { .5 3.41667 1.5
false .5 9.05264 InitRnode  } NewNode end end
 1197 1740 a Fl(R)1240 1752 y Fn(1)1386 1740 y
 tx@Dict begin tx@NodeDict begin {  } /TheNoder2 16 { .5 3.41667 1.5
false .5 9.05264 InitRnode  } NewNode end end
 1386
1740 a Fl(R)1429 1752 y Fn(2)1235 1732 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodefilescanr1
/TheNoder1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1235 1732 a
1235 1732 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodefilescanr2
/TheNoder2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1235 1732 a 959 1915 a Fz(\(b\))h(Possible)i(access)g(plan)
g(for)959 1994 y(operator)d(tree)f(in)f(\(a\))p 1829
2116 4 870 v -105 2119 1938 4 v 1831 2136 19 877 v -89
2136 1938 19 v -25 2319 a FG(Figure)j(1:)27 b(Example)19
b(of)h(an)g(operator)e(tree)i(and)g(access)h(plan)-117
2521 y Fw(Descriptors.)83 b FG(A)17 b FF(pr)m(operty)f
FG(of)h(a)g(node)f(is)i(a)f(\(user)n(-de\256ned\))e(vari-)-112
2620 y(able)31 b(that)h(contains)f(information)e(used)i(by)h(an)f
(optimizer)-5 b(.)61 b(An)-112 2720 y FF(annotation)25
b FG(is)k(a)f Fk(h)p FF(pr)m(operty)-5 b(,)20 b(value)o
Fk(i)29 b FG(pair)e(that)h(is)h(assigned)e(to)h(a)-112
2819 y(node.)39 b(A)25 b FF(descriptor)g FG(is)h(a)f(list)h(of)e
(annotations)f(that)i(describes)f(a)-112 2919 y(node)j(of)g(an)h
(operator)f(tree;)32 b(every)27 b(node)g(has)h(its)h(own)f(descrip-)
-112 3019 y(tor)-5 b(.)54 b(As)30 b(an)f(example,)h(T)-6
b(able)29 b(2)h(lists)g(some)f(typical)g(properties)-112
3118 y(that)21 b(might)f(be)h(used)f(in)h(a)h(descriptor)-5
b(.)28 b(Note)21 b(that)g(descriptors)e(for)-112 3218
y(stream)24 b(and)h(stored)f(\256les)i(may)e(have)h(dif)o(ferent)e
(properties.)39 b(The)-114 3318 y(following)17 b(notations)h(will)h(be)
g(useful)f(in)h(our)f(subsequent)g(discus-)-119 3417
y(sions.)26 b(If)14 b Fv(S)220 3429 y Fu(i)263 3417 y
FG(is)i(a)g(stream,)f(then)g Fj(D)877 3429 y Fi(i)918
3417 y FG(is)h(its)g(descriptor)-5 b(.)24 b(Annotations)-112
3517 y(of)c Fv(S)29 3529 y Fu(i)78 3517 y FG(are)h(accessed)g(by)f(a)i
(structure)e(member)f(relationship,)h(e.g.,)-113 3616
y Fj(D)-40 3628 y Fi(i)-14 3616 y Fv(:)p FG(num)p 163
3616 25 4 v 28 w(records)o(.)27 b(Also,)20 b(let)h Fv(E)k
FG(be)20 b(an)g(expression)f(and)g(let)h Fj(D)h FG(be)-112
3716 y(its)g(descriptor)-5 b(.)26 b(W)-7 b(e)21 b(will)g(write)f(this)h
(as)g Fv(E)28 b Fh(:)23 b Fj(D)p FG(.)-110 3904 y(E)t
Fz(X)t(A)t(M)t(P)t(L)t(E)h FG(2)t(.)147 b(The)19 b(expression,)-112
4055 y Fo(SOR)m(T)o Ft(\()p Fo(JOIN)o Ft(\()p Fo(RET)o
Ft(\()p Fu(R)396 4063 y Fn(1)428 4055 y Ft(\):)p Fi(D)530
4063 y Fg(3)566 4055 y Fu(;)p Fo(RET)o Ft(\()p Fu(R)772
4063 y Fn(2)804 4055 y Ft(\):)p Fi(D)906 4063 y Fg(4)942
4055 y Ft(\):)p Fi(D)1044 4063 y Fg(5)1079 4055 y Ft(\):)p
Fi(D)1181 4063 y Fg(6)-112 4206 y FG(corresponds)k(to)j(the)f(operator)
f(tree)i(in)g(Figure)f(1\(a\),)h(and)f(shows)-112 4305
y(the)20 b(descriptors)f(of)h(the)g(various)f(nodes.)704
b Fs(\003)-30 4466 y FG(A)19 b(notational)f(simpli\256cation)h(can)g
(be)g(made)g(here.)26 b(Additional)-117 4565 y(parameters)14
b(of)i(operators)f(can)h(be)g(treated)f(the)h(same)h(way)f(as)h(other)
-112 4665 y(properties)i(of)h(a)h(node;)f(essential)h(parameters,)e
(however)m(,)f(are)j FF(ex-)-115 4764 y(pr)m(essions)p
FG(.)27 b(Thus,)18 b(the)g(term)g(descriptor)f(in)h(the)g(remainder)f
(of)h(this)-112 4864 y(paper)24 b(will)i(refer)f(to)h(a)g(set)h(of)e
(properties,)g(including)f(additional)-112 4964 y(parameters,)18
b(as)j(shown)f(in)g(T)-6 b(able)20 b(2.)-35 5063 y(Currently)-5
b(,)15 b(descriptor)f(properties)h(are)g(de\256ned)g(entirely)g(by)g
(the)-112 5163 y(user;)34 b(however)m(,)c(we)g(envision)f(providing)e
(a)j(hierarchy)e(of)i(pre-)-112 5263 y(de\256ned)19 b(descriptor)f
(types)i(to)h(aid)f(this)h(process.)2042 1243 y Fw(Access)e(Plans.)83
b FG(An)18 b FF(access)h(plan)f FG(is)h(an)g(operator)d(tree)j(in)g
(which)2044 1343 y(all)i(interior)e(nodes)g(are)h(algorithms.)2046
1630 y(E)t Fz(X)t(A)t(M)t(P)t(L)t(E)k FG(3)t(.)142 b(An)15
b(access)h(plan)f(for)f(the)h(operator)f(tree)h(in)g(Fig-)2044
1729 y(ure)20 b(1\(a\))f(is)i(shown)f(in)g(Figure)f(1\(b\).)826
b Fs(\003)2044 2047 y Fx(2.2)99 b(Prairie)25 b(optimization)f(paradigm)
2044 2230 y FG(Prairie)k(admits)f(two)h(rather)g(dif)o(ferent)d(means)j
(of)g(optimization:)2044 2329 y(top-down)19 b(and)j(bottom-up.)29
b(A)23 b(top-down)d(query)g(optimizer)h(op-)2041 2429
y(timizes)d(the)g(parents)g(of)f(a)i(node)d(prior)h(to)h(optimizing)f
(the)h(node)e(it-)2038 2529 y(self.)25 b(A)16 b(bottom-up)d(optimizer)h
(optimizes)g(the)i(children)e(of)g(a)i(node)2044 2628
y(prior)22 b(to)i(optimizing)d(the)j(node.)35 b(The)23
b(earliest)h(optimizers)e(\(Sys-)2044 2728 y(tem)e(R)h([1)m(1])e(and)h
(R)2617 2698 y Ff(\003)2676 2728 y FG([3]\))f(employed)f(the)j
(bottom-up)c(approach.)2126 2842 y(Our)i(research)f(concentrates)g(on)h
(a)h(top-down)e(optimization)f(of)2044 2942 y(operator)24
b(trees.)46 b(W)-7 b(e)28 b(have)d(chosen)h(this)h(approach)d(because)i
(we)2044 3042 y(intend)d(to)h(translate)g(Prairie)g(rules)g(into)f(the)
h(format)f(required)f(by)2044 3141 y(the)28 b(V)-11 b(olcano)28
b(query)f(optimizer)g(generator)f([7])i(which)g(is)h(based)2044
3241 y(on)h(a)h(top-down)d(strategy)-5 b(.)56 b(Given)30
b(an)g(appropriate)e(search)i(en-)2044 3340 y(gine,)24
b(Prairie)f(can)g(potentially)g(also)h(be)f(used)h(with)f(a)i
(bottom-up)2043 3440 y(optimization)18 b(strategy;)i(however)m(,)d(we)k
(will)f(not)g(discuss)g(this)g(ap-)2044 3540 y(proach)e(in)j(this)f
(paper)-5 b(.)2125 3654 y(In)18 b(query)g(optimization,)f(there)h(are)g
(certain)g(annotations)g(\(such)2044 3754 y(as)29 b(additional)f
(parameters\))f(that)i(are)g(known)e(before)g(any)i(opti-)2037
3853 y(mization)14 b(is)i(begun.)23 b(These)15 b(annotations)e(can)i
(be)f(computed)f(at)j(the)2043 3953 y(time)j(that)g(the)g(operator)f
(tree)h(is)h(initialized,)f(and)g(will)h(not)f(change)2040
4052 y(with)f(application)d(of)i(rules.)26 b(Our)17 b(following)f
(discussions)h(assume)2044 4152 y(operator)h(trees)j(are)f
(initialized.)2127 4266 y(There)41 b(are)h(two)h(types)f(of)g
(algebraic)f(transformations)f(\(or)2044 4366 y FF(r)m(ewrite)34
b(rules)p FG(\))e(in)h(Prairie:)52 b(T)-8 b(-rules)32
b(\(\252transformation)e(rules\272\))2044 4466 y(and)22
b(I-rules)f(\(\252implementation)f(rules\272\).)33 b(Each)22
b(rule)g(transforms)2044 4565 y(an)j(expression)g(into)g(another)f
(based)i(on)f(additional)f(conditions;)2044 4665 y(the)h
(transformation)d(also)j(results)g(in)g(a)g(mapping)e(of)h(descriptors)
2037 4764 y(between)14 b(expressions.)24 b(W)-7 b(e)16
b(de\256ne)e(T)-8 b(-rules)14 b(and)g(I-rules)g(precisely)2042
4864 y(in)20 b(the)f(following)e(sections)i(and)g(illustrate)g(them)f
(with)i(examples.)2044 4964 y(Our)33 b(examples)g(are)h(chosen)f(from)f
(rules)i(that)g(would)f(be)g(used)2044 5063 y(in)e(a)h(centralized)e
(relational)g(query)g(optimizer;)36 b(the)31 b(operators,)2044
5163 y(algorithms,)25 b(and)f(properties)g(are)h(subsets)h(of)f(those)g
(in)h(T)-6 b(ables)25 b(1)2044 5263 y(and)19 b(2.)p eop
%%Page: 4 4
4 3 bop -110 24 1947 4 v -110 1929 4 1905 v 31 101 a
Fu(E)s Ft(\()p Fu(x)147 109 y Fn(1)178 101 y Fu(;)11
b(:)h(:)f(:)g(;)g(x)372 109 y Fl(n)412 101 y Ft(\))19
b(:)g Fi(D)552 109 y Fg(1)606 101 y Ft(=)-11 b Ff(\))19
b Fu(E)783 72 y Fe(0)805 101 y Ft(\()p Fu(x)869 109 y
Fn(1)901 101 y Fu(;)12 b(:)f(:)g(:)g(;)g(x)1095 109 y
Fl(n)1135 101 y Ft(\))19 b(:)g Fi(D)1275 109 y Fg(2)1656
101 y Fo(\(1\))31 167 y Ff(ff)244 234 y Fo(pre-test)c(statements)31
300 y Ff(gg)31 367 y Fo(test)31 433 y Ff(ff)244 500 y
Fo(post-test)g(statements)31 566 y Ff(gg)493 709 y Fz(\(a\))j(General)g
(form)f(of)g(a)g(T)-6 b(-rule)p -61 807 1849 4 v 31 884
a Fo(JOIN)o Ft(\()p Fo(JOIN)p Ft(\()p Fu(S)375 892 y
Fn(1)407 884 y Fu(;)11 b(S)479 892 y Fn(2)512 884 y Ft(\))18
b(:)h Fi(D)651 892 y Fg(4)687 884 y Fu(;)11 b(S)759 892
y Fn(3)791 884 y Ft(\))19 b(:)g Fi(D)931 892 y Fg(5)1656
884 y Fo(\(2\))89 983 y Ft(=)-11 b Ff(\))18 b Fo(JOIN)p
Ft(\()p Fu(S)406 991 y Fn(1)438 983 y Fu(;)11 b Fo(JOIN)p
Ft(\()p Fu(S)662 991 y Fn(2)694 983 y Fu(;)g(S)766 991
y Fn(3)799 983 y Ft(\))18 b(:)h Fi(D)938 991 y Fg(6)974
983 y Ft(\))g(:)g Fi(D)1114 991 y Fg(7)31 1066 y Ff(ff)244
1133 y Fi(D)301 1141 y Fg(6)337 1133 y Fu(:)p Fo(attributes)g
Ft(=)g Fo(union)c Ft(\()p Fi(D)892 1141 y Fg(2)928 1133
y Fu(:)p Fo(attributes)p Fu(;)c Fi(D)1252 1141 y Fg(3)1288
1133 y Fu(:)p Fo(attributes)p Ft(\))j(;)31 1199 y Ff(gg)31
1265 y Fo(is)p 73 1265 18 4 v 20 w(associative)g Ft(\()p
Fi(D)443 1273 y Fg(6)479 1265 y Fu(:)p Fo(join)p 592
1265 V 21 w(predicate)p Fu(;)d Fi(D)911 1273 y Fg(6)947
1265 y Fu(:)p Fo(attributes)p Fu(;)g Fi(D)1271 1273 y
Fg(5)1306 1265 y Fu(:)p Fo(join)p 1419 1265 V 22 w(predicate)p
Ft(\))31 1332 y Ff(ff)244 1398 y Fi(D)301 1406 y Fg(7)356
1398 y Ft(=)19 b Fi(D)483 1406 y Fg(5)533 1398 y Ft(;)244
1465 y Fi(D)301 1473 y Fg(7)337 1465 y Fu(:)p Fo(join)p
450 1465 V 21 w(predicate)g Ft(=)g Fi(D)827 1473 y Fg(4)863
1465 y Fu(:)p Fo(join)p 976 1465 V 21 w(predicate)14
b Ft(;)244 1531 y Fi(D)301 1539 y Fg(6)337 1531 y Fu(:)p
Fo(tuple)p 476 1531 V 21 w(size)k Ft(=)h Fi(D)730 1539
y Fg(2)766 1531 y Fu(:)p Fo(tuple)p 905 1531 V 21 w(size)14
b Ft(+)h Fi(D)1151 1539 y Fg(3)1187 1531 y Fu(:)p Fo(tuple)p
1326 1531 V 21 w(size)f Ft(;)244 1598 y Fi(D)301 1606
y Fg(6)337 1598 y Fu(:)p Fo(num)p 463 1598 V 21 w(records)19
b Ft(=)g Fo(cardinality)c Ft(\()p Fi(D)1087 1606 y Fg(2)1123
1598 y Fu(;)c Fi(D)1211 1606 y Fg(3)1247 1598 y Ft(\))j(;)31
1664 y Ff(gg)587 1807 y Fz(\(b\))j(Join)g(associativity)p
1834 1929 4 1905 v -110 1932 1947 4 v 1835 1949 19 1912
v -93 1949 1947 19 v 607 2131 a FG(Figure)j(2:)27 b(T)-8
b(-rule)-112 2372 y Fx(2.3)99 b(T)-7 b(ransformation)25
b(rules)-112 2549 y FG(T)m(ransformation)k(rules,)35
b(or)d(T)-8 b(-rules)32 b(for)g(short,)i(de\256ne)e(equiva-)-112
2649 y(lences)e(among)g(pairs)h(of)f(expressions;)36
b(they)30 b(de\256ne)g(mappings)-112 2748 y(from)g(one)i(operator)e
(tree)h(to)h(another)-5 b(.)61 b(Let)32 b Fv(E)37 b FG(and)32
b Fv(E)1584 2718 y Ff(0)1639 2748 y FG(be)g(ex-)-112
2848 y(pressions)19 b(that)i(involve)e(only)h(abstract)g(operators.)26
b(Equation)18 b(\(1\))-112 2948 y(\(shown)k(in)i(Figure)e(2\(a\)\))h
(shows)g(the)h(general)e(form)h(of)g(a)h(T)-8 b(-rule.)-112
3047 y(The)19 b(actions)h(of)g(a)h(T)-8 b(-rule)20 b(de\256ne)f(the)i
(equivalences)d(between)i(the)-114 3147 y(descriptors)f(of)g(nodes)f
(of)h(the)h(original)e(operator)f(tree)i Fv(E)25 b FG(with)20
b(the)-112 3247 y(nodes)27 b(of)g(the)h(output)f(tree)g
Fv(E)796 3216 y Ff(0)820 3247 y FG(;)32 b(these)c(actions)g(consist)g
(of)f(a)h(se-)-112 3346 y(ries)f(of)f(\(C)i(or)f(C++\))g(assignment)918
3316 y Ft(2)981 3346 y FG(statements.)47 b(The)27 b(left-hand)-112
3446 y(sides)21 b(of)f(these)h(statements)g(refer)f(to)h(descriptors)e
(of)i(expressions)-112 3545 y(on)g(the)h(right-hand)e(side)j(of)f(the)g
(T)-8 b(-rule;)22 b(the)h(right-hand)c(sides)k(of)-119
3645 y(the)14 b(statements)h(can)f(refer)g(to)h(any)f(descriptor)f(in)h
(the)h(T)-8 b(-rule.)24 b(Func-)-112 3745 y(tion)j(\(called)h
FF(helper)g FG(functions\))e(calls)j(can)f(also)g(appear)f(on)h(the)
-118 3844 y(right)15 b(side)h(of)f(the)h(assignment)e(statements.)26
b(Thus,)15 b(descriptors)g(on)-114 3944 y(the)k FF(left-hand)f(side)i
FG(of)e(a)i(T)-8 b(-rule)19 b(are)g FF(never)g FG(changed)e(in)j(the)f
(rule')-5 b(s)-114 4044 y(actions.)26 b(A)19 b FF(test)h
FG(is)f(needed)f(to)g(determine)g(if)g(the)h(transformations)-112
4143 y(of)g(the)i(T)-8 b(-rule)19 b(are)h(in)h(fact)f(applicable.)-34
4254 y(Purely)c(as)i(an)e(optimization,)g(it)h(is)h(usually)e(the)g
(case)h(that)g(not)f(all)-118 4354 y(statements)g(in)g(a)g(T)-8
b(-rule')j(s)16 b(actions)f(need)g(to)h(be)g(executed)e(prior)h(to)h(a)
-114 4454 y(T)-8 b(-rule')j(s)18 b(test.)28 b(For)18
b(this)i(reason,)e(the)h(actions)f(of)h(a)g(T)-8 b(-rule)18
b(are)h(split)-112 4553 y(into)i(two)g(groups;)g(those)h(that)f(need)g
(to)h(be)f(executed)g(prior)f(to)i(the)-119 4653 y(T)-8
b(-rule')j(s)14 b(test,)i(and)e(those)h(that)f(can)h(be)f(executed)g
(after)g(a)h(successful)-113 4753 y(test.)27 b(These)19
b(groups)f(of)h(statements)h(comprise,)e(respectively)-5
b(,)18 b(the)p -112 4870 788 4 v -28 4924 a Fr(2)7 4947
y Fz(The)13 b(actions)i(can)e(be)g(non-assignment)j(statements)e
(\(like)h(function)g(calls\),)f(but)-112 5026 y(in)23
b(this)h(case,)i(the)e(P2V)f(pre-processor)j(\(described)f(in)f
(Section)h(3\))f(needs)g(some)-112 5105 y(hints)15 b(about)i(the)f
(properties)h(that)f(are)g(changed)h(by)f(the)g(statement)h(in)e(order)
h(to)g(cor)o(-)-112 5184 y(rectly)g(categorize)j(each)d(property)l(.)22
b(For)15 b(simplicity)l(,)i(in)e(this)h(paper)m(,)g(we)f(assume)g(all)
-112 5263 y(actions)j(consist)g(of)f(assignment)i(statements.)p
2046 24 1947 4 v 2046 1688 4 1664 v 2187 92 a Fu(E)s
Ft(\()p Fu(x)2303 100 y Fn(1)2335 92 y Fu(;)11 b(:)g(:)g(:)g(;)g(x)2528
100 y Fl(n)2568 92 y Ft(\))19 b(:)g Fi(D)2708 100 y Fg(1)2763
92 y Ft(=)-11 b Ff(\))18 b Fu(A)p Ft(\()p Fu(x)3001 100
y Fn(1)3033 92 y Fu(;)11 b(:)g(:)g(:)g(;)h(x)3227 100
y Fl(n)3267 92 y Ft(\))19 b(:)f Fi(D)3406 100 y Fg(2)3812
92 y Fo(\(3\))2187 159 y(test)2187 225 y Ff(ff)2401 292
y Fo(pre-opt)d(statements)2187 358 y Ff(gg)2187 424 y(ff)2401
491 y Fo(post-opt)g(statements)2187 557 y Ff(gg)2639
700 y Fz(\(a\))i(General)i(form)e(of)g(an)g(I-rule)p
2095 798 1849 4 v 2187 875 a Fo(SOR)m(T)o Ft(\()p Fu(S)2399
883 y Fn(1)2431 875 y Ft(\))i(:)f Fi(D)2570 883 y Fg(2)2625
875 y Ft(=)-11 b Ff(\))19 b Fo(Mer)o(ge)p 2904 875 18
4 v 21 w(sort)p Ft(\()p Fu(S)3076 883 y Fn(1)3108 875
y Ft(\))g(:)f Fi(D)3247 883 y Fg(3)3812 875 y Fo(\(4\))2187
958 y Ft(\()p Fi(D)2270 966 y Fg(2)2306 958 y Fu(:)p
Fo(tuple)p 2445 958 V 20 w(order)e Ft(!)9 b(=)18 b Fo(DONT)p
2862 958 V 21 w(CARE)o Ft(\))2187 1024 y Ff(ff)2401 1091
y Fi(D)2458 1099 y Fg(3)2512 1091 y Ft(=)h Fi(D)2639
1099 y Fg(2)2690 1091 y Ft(;)2187 1157 y Ff(gg)2187 1224
y(ff)2401 1290 y Fi(D)2458 1298 y Fg(3)2493 1290 y Fu(:)p
Fo(cost)g Ft(=)g Fi(D)2753 1298 y Fg(1)2788 1290 y Fu(:)p
Fo(cost)2699 1356 y Ft(+\()p Fi(D)2833 1364 y Fg(3)2868
1356 y Fu(:)p Fo(num)p 2994 1356 V 21 w(records)p Ft(\))c
Ff(\003)h Ft(log\()p Fi(D)3442 1364 y Fg(3)3478 1356
y Fu(:)p Fo(num)p 3604 1356 V 21 w(records)p Ft(\))f(;)2187
1423 y Ff(gg)2630 1565 y Fz(\(b\))i(Mer)o(ge-sort)i(sort)e(algorithm)p
3990 1688 4 1664 v 2046 1691 1947 4 v 3992 1708 19 1671
v 2063 1708 1947 19 v 2771 1890 a FG(Figure)j(3:)27 b(I-rule)2044
2113 y FF(pr)m(e-test)21 b FG(and)f FF(post-test)g FG(statements)h(of)f
(the)g(T)-8 b(-rule.)3565 2083 y Ft(3)2046 2330 y FG(E)t
Fz(X)t(A)t(M)t(P)t(L)t(E)24 b FG(4)t(.)142 b(The)14 b(associativity)h
(of)g(JOINs)h(is)g(expressed)d(by)2044 2430 y(T)-8 b(-rule)19
b(\(2\))h(in)g(Figure)g(2\(b\).)1082 b Fs(\003)2044 2683
y Fx(2.4)99 b(Implementation)26 b(rules)2044 2844 y FG(Implementation)k
(rules,)35 b(or)e(I-rules)f(for)g(short,)j(de\256ne)e(equiva-)2044
2944 y(lences)e(between)g(expressions)g(and)g(their)g(implementing)f
(algo-)2044 3043 y(rithms.)i(Let)23 b Fv(E)k FG(be)c(an)f(expression)f
(and)g Fv(A)i FG(be)f(an)g(algorithm)f(that)2044 3143
y(implements)26 b Fv(E)5 b FG(.)51 b(The)27 b(general)g(form)f(of)i(an)
f(I-rule)g(is)i(given)d(by)2044 3242 y(Equation)18 b(\(3\))i(\(shown)f
(in)h(Figure)g(3\(a\)\).)2127 3345 y(The)g(actions)h(associated)g(with)
g(an)g(I-rule)f(are)h(de\256ned)e(in)j(three)2044 3445
y(parts.)35 b(The)23 b(\256rst)h(part,)f(or)g FF(test)p
FG(,)i(is)f(a)f(boolean)f(expression)f(whose)2044 3544
y(value)e(determines)g(whether)h(or)f(not)h(the)h(rule)e(can)h(be)g
(applied.)2123 3647 y(The)d(second)g(part,)g(or)g FF(pr)m(e-opt)f
(statements)p FG(,)i(is)h(a)e(set)h(of)g(descrip-)2044
3746 y(tor)23 b(assignment)g(statements)g(that)h(are)f(executed)f(only)
h(if)h(the)f(test)2044 3846 y(is)i(true)f(and)f FF(befor)m(e)h
FG(any)g(of)g(the)g(inputs)g Fv(x)3296 3858 y Fu(i)3349
3846 y FG(of)g Fv(E)30 b FG(are)24 b(optimized.)2044
3946 y(Additional)e(parameters)g(of)i(nodes)f(are)g(usually)g(assigned)
g(in)h(the)2039 4045 y(pre-opt)15 b(section.)25 b(This)16
b(is)h(necessary)f(before)f(any)h(of)f(the)i(nodes)e(on)2044
4145 y(the)20 b(right)g(side)g(can)g(be)g(optimized.)2127
4248 y(The)g(third)h(part,)g(or)f FF(post-opt)g(statements)p
FG(,)h(is)h(a)g(set)f(of)g(descrip-)2044 4347 y(tor)i(assignment)f
(statements)i(that)f(are)g(executed)f FF(after)i FG(all)g
Fv(x)3859 4359 y Fu(i)3911 4347 y FG(are)2044 4447 y(optimized.)k
(Normally)-5 b(,)19 b(the)i(post-opt)f(statements)h(compute)f(cost)2040
4546 y(properties)c(that)h(can)g(only)g(be)g(determined)e(once)h(the)i
(inputs)e(to)i(the)2044 4646 y(algorithm)i(are)i(completely)f
(optimized)g(and)g(their)h(costs)h(known.)2044 4746 y(This)33
b FF(does)g(not)p FG(,)j(however)m(,)e(imply)f(a)g(bottom-up)e
(optimization)2044 4845 y(strategy)-5 b(.)41 b(It)26
b(simply)e(means)h(that)h(although)d(I-rules)i(are)g(applied)2044
4945 y(to)20 b(parents)g(before)g(their)g(children)f(are)i(optimized,)e
(the)h FF(cost)i FG(\(and)p 2044 5028 788 4 v 2129 5081
a Fr(3)2163 5105 y Fz(W)-5 b(e)19 b(suspect)i(it)e(is)h(possible)g(to)g
(use)g(data-\257ow)g(analysis)h(to)f(partition)i(the)e(as-)2044
5184 y(signment)i(statements)h(automatically)l(,)i(but)c(for)g(now)l(,)
g(we)g(let)h(the)g(rule-writer)h(do)2044 5263 y(the)18
b(partitioning.)p eop
%%Page: 5 5
5 4 bop -115 21 a FG(other)18 b(properties)f(in)h(the)h(post-opt)e
(section\))g(of)h(the)h(parent)e(cannot)-112 120 y(be)j(computed)e
(until)i(the)g(children)f(have)g(been)h(optimized.)-110
326 y(E)t Fz(X)t(A)t(M)t(P)t(L)t(E)k FG(5)t(.)146 b(Equation)19
b(\(4\))g(\(in)h(Figure)f(3\(b\)\))g(shows)h(the)g(I-)-112
425 y(rule)f(that)i(implements)e(the)h(SOR)-5 b(T)21
b(operator)d(by)i(Mer)o(ge)p 1564 425 25 4 v 28 w(sort.)59
b Fs(\003)-112 668 y Fx(2.5)99 b(Null)24 b(algorithm)-112
826 y FG(Recall)g(that,)i(in)e(Section)g(1,)h(we)g(mentioned)d(that)i
(Prairie)g(allows)-112 925 y(users)g(to)g(treat)g(all)g(operators)f
(and)g(algorithms)g(as)i(\256rst-class)g(ob-)-112 1025
y(jects,)g(i.e.,)g(all)f(operators)e(and)i(algorithms)f(are)g
(explicit,)i(in)f(con-)-112 1125 y(trast)i(to)g(enforcers)e(in)h(V)-11
b(olcano)25 b(or)h(glue)f(in)h(Starburst.)42 b(This)26
b(re-)-119 1224 y(quires)15 b(that)g(Prairie)g(provide)f(a)h(mechanism)
f(where)g(users)i(can)f(also)-112 1324 y(\252delete\272)21
b(one)g(or)h(more)f(of)h(the)g(explicit)g(operators)e(from)h(expres-)
-112 1423 y(sions.)33 b(This)23 b(is)g(done)f(by)g(having)f(a)i
(special)f(class)i(of)e(I-rules)g(that)-115 1523 y(have)c(the)g(form)f
(given)g(by)h(Equation)e(\(5\))i(in)g(Figure)g(4\(a\).)25
b(The)18 b(left)-120 1623 y(side)c(of)f(the)h(rule)f(is)i(a)f(single)g
(abstract)f(operator)f Fv(O)17 b FG(with)d(one)f(stream)-112
1722 y(input)25 b Fv(S)136 1734 y Ft(1)173 1722 y FG(.)46
b(The)26 b(right)g(side)g(of)g(the)h(rule)f(is)h(an)f(algorithm)f
(called)-112 1822 y(\252Null\272)f(with)h(the)g(same)g(stream)g(input)f
(but)h(with)g(a)g(dif)o(ferent)e(de-)-112 1922 y(scriptor)-5
b(.)42 b(As)26 b(the)g(name)e(suggests,)j(the)e(Null)h(algorithm)e(is)i
(sup-)-112 2021 y(posed)21 b(to)i(pass)g(its)g(input)f(unchanged)e(to)i
(algorithms)f(above)h(it)h(in)-112 2121 y(an)h(operator)f(tree.)41
b(This)25 b(is)h(accomplished)c(in)j(the)g(I-rule)f(as)h(fol-)-112
2220 y(lows.)-29 2321 y(The)c(test)i(for)e(this)i(I-rule)e(is)i(always)
f(TRUE,)g(i.e.,)g(any)g(node)f(in)-112 2421 y(an)g(operator)f(tree)i
(with)g Fv(O)k FG(as)c(its)h(operator)d(can)i(be)g(implemented)-113
2520 y(by)e(the)g(Null)g(algorithm.)25 b(The)20 b(actions)f(associated)
h(with)g(this)g(rule)-115 2620 y(have)d(a)h(speci\256c)g(pattern.)25
b(The)18 b(pre-opt)e(section)h(consists)i(of)e(three)-112
2720 y(statements.)36 b(The)23 b(\256rst)h(statement)f(copies)g(the)h
(descriptor)e(of)h(the)-116 2819 y(operator)16 b Fv(O)21
b FG(to)d(the)g(algorithm)e(Null.)26 b(The)17 b(second)g(statement)h
(sets)-112 2919 y(the)25 b(descriptor)e(of)i(the)g(stream)g
Fv(S)892 2931 y Ft(1)955 2919 y FG(on)g(the)g(right)f(side)i(to)f(the)g
(de-)-117 3018 y(scriptor)15 b(of)h(the)g(stream)g Fv(S)646
3030 y Ft(1)700 3018 y FG(on)f(the)h(left)h(side.)26
b(Why)16 b(is)h(it)f(necessary)-119 3118 y(to)e(do)g(this?)26
b(The)14 b(key)g(lies)h(in)f(the)h(third)f(statement.)24
b(This)15 b(statement)-117 3218 y(copies)h(the)g(property)f
(\252property\272)e(of)k(the)f(operator)f Fv(O)k FG(node)c(on)h(the)
-116 3317 y(left)i(side)g(to)g(the)f(\252property\272)e(of)j(the)f
(input)g(stream)h Fv(S)1427 3329 y Ft(1)1482 3317 y FG(on)f(the)h
(right)-112 3417 y(side.)32 b(Since)22 b(left-hand)e(side)j
(descriptors)e(cannot)g(be)g(changed)g(in)-115 3517 y(an)c(I-rule,)g(a)
h(new)g(descriptor)e Fj(D)840 3529 y Fi(3)900 3517 y
FG(is)j(necessary)e(for)g Fv(S)1481 3529 y Ft(1)1537
3517 y FG(to)g(convey)-112 3616 y(the)j(property)e(propagation)f
(information.)-29 3717 y(The)48 b(post-opt)f(section)h(in)h(the)g
(I-rule)e(has)i(only)f(a)h(cost-)-112 3817 y(assignment)44
b(statement;)57 b(this)46 b(simply)e(sets)j(the)e(cost)g(of)g(the)-112
3916 y(Null)20 b(node)f(to)h(the)h(cost)f(of)g(its)h(optimized)e(input)
g(stream.)-31 4017 y(The)f(Null)g(algorithm,)g(therefore,)e(serves)j
(to)g(ef)o(fectively)d(trans-)-112 4116 y(form)j(a)h(single)g(operator)
f(to)h(a)h(no-op.)-110 4322 y(E)t Fz(X)t(A)t(M)t(P)t(L)t(E)j
FG(6)t(.)146 b(Equation)19 b(\(6\))g(\(in)h(Figure)f(4\(b\)\))g(shows)h
(the)g(I-)-112 4422 y(rule)15 b(that)g(rewrites)g(the)h(SOR)-5
b(T)16 b(operator)d(to)j(use)f(a)h(Null)g(algorithm.)-112
4521 y Fs(\003)-112 4876 y FB(3)119 b(The)30 b(P2V)g(pr)n(e-pr)n
(ocessor)-112 5063 y FG(In)38 b(Section)g(1,)43 b(we)c(enumerated)e
(the)h(four)g(primary)f(goals)h(of)-112 5163 y(Prairie,)22
b(viz.,)g(uniformity)e(in)i(operator)e(and)i(algorithms;)f(unifor)n(-)
-112 5263 y(mity)i(in)h(properties;)h(uniformity)c(in)j
(property-transformations;)p 2046 24 1947 4 v 2046 1887
4 1864 v 2187 92 a Fu(O)r Ft(\()p Fu(S)2306 100 y Fn(1)2338
92 y Ft(\))19 b(:)g Fi(D)2478 100 y Fg(2)2532 92 y Ft(=)-11
b Ff(\))19 b Fo(Null)q Ft(\()p Fu(S)2828 100 y Fn(1)2879
92 y Ft(:)f Fi(D)2973 100 y Fg(3)3009 92 y Ft(\))h(:)g
Fi(D)3149 100 y Fg(4)3812 92 y Fo(\(5\))2187 159 y(TRUE)2187
225 y Ff(ff)2401 292 y Fi(D)2458 300 y Fg(4)2512 292
y Ft(=)g Fi(D)2639 300 y Fg(2)2690 292 y Ft(;)2401 358
y Fi(D)2458 366 y Fg(3)2512 358 y Ft(=)g Fi(D)2639 366
y Fg(1)2690 358 y Ft(;)2401 424 y Fi(D)2458 432 y Fg(3)2493
424 y Fu(:)p Fo(property)h Ft(=)f Fi(D)2856 432 y Fg(2)2892
424 y Fu(:)p Fo(property)c Ft(;)2187 491 y Ff(gg)2187
557 y(ff)2401 624 y Fi(D)2458 632 y Fg(4)2493 624 y Fu(:)p
Fo(cost)k Ft(=)g Fi(D)2753 632 y Fg(3)2788 624 y Fu(:)p
Fo(cost)14 b Ft(;)2187 690 y Ff(gg)2559 833 y Fz(\(a\))j(General)i
(form)e(of)g(a)g(\252Null\272)h(I-rule)p 2095 931 1849
4 v 2187 1008 a Fo(SOR)m(T)o Ft(\()p Fu(S)2399 1016 y
Fn(1)2431 1008 y Ft(\))h(:)f Fi(D)2570 1016 y Fg(2)2683
1008 y Ft(=)-11 b Ff(\))19 b Fo(Null)p Ft(\()p Fu(S)2978
1016 y Fn(1)3029 1008 y Ft(:)g Fi(D)3124 1016 y Fg(3)3160
1008 y Ft(\))g(:)g Fi(D)3300 1016 y Fg(4)3812 1008 y
Fo(\(6\))2187 1091 y(TRUE)2187 1157 y Ff(ff)2401 1224
y Fi(D)2458 1232 y Fg(4)2512 1224 y Ft(=)g Fi(D)2639
1232 y Fg(2)2690 1224 y Ft(;)2401 1290 y Fi(D)2458 1298
y Fg(3)2512 1290 y Ft(=)g Fi(D)2639 1298 y Fg(1)2690
1290 y Ft(;)2401 1356 y Fi(D)2458 1364 y Fg(3)2493 1356
y Fu(:)p Fo(tuple)p 2632 1356 18 4 v 21 w(order)h Ft(=)f
Fi(D)2919 1364 y Fg(2)2955 1356 y Fu(:)p Fo(tuple)p 3094
1356 V 20 w(order)d Ft(;)2187 1423 y Ff(gg)2187 1489
y(ff)2401 1556 y Fi(D)2458 1564 y Fg(4)2493 1556 y Fu(:)p
Fo(cost)j Ft(=)g Fi(D)2753 1564 y Fg(3)2788 1556 y Fu(:)p
Fo(cost)14 b Ft(;)2187 1622 y Ff(gg)2718 1765 y Fz(\(b\))j(Null)h(sort)
f(algorithm)p 3990 1887 4 1864 v 2046 1890 1947 4 v 3992
1907 19 1870 v 2063 1907 1947 19 v 2366 2090 a FG(Figure)j(4:)27
b(The)20 b(\252Null\272)g(algorithm)f(concept)2044 2301
y(and)37 b(ef)o(\256cient)f(generation)g(of)h(Prairie)g(optimizers.)78
b(The)37 b(\256rst)2041 2401 y(three)18 b(goals)f(are)h(driven)f(by)g
(the)h(need)g(for)f(conceptual)f(simplicity;)2044 2500
y(however)m(,)33 b(they)f(alone)f(do)h(not)g(necessarily)g(generate)f
(ef)o(\256cient)2044 2600 y(optimizers.)61 b(The)31 b(P2V)h
(pre-processor)e(ensures)h(that)h(ef)o(\256cient)2044
2700 y(optimizers)e(can)h(be)f(realized)h(from)f(Prairie)h
(speci\256cations,)h(by)2044 2799 y(translating)c(them)i(to)f(the)h(V)
-11 b(olcano)29 b(framework)e(and)i(then)g(gen-)2044
2899 y(erating)22 b(an)h(optimizer)f(by)h(compiling)f(with)h(the)g(V)
-11 b(olcano)22 b(search)2041 2999 y(engine.)j(This)18
b(Prairie)g(optimizer)n(-generator)c(paradigm)i(is)j(shown)2044
3098 y(schematically)j(in)h(Figure)f(5.)35 b(The)23 b(pre-processor)d
(itself)k(is)f(4500)2044 3198 y(lines)f(of)g Fd(flex)g
FG(and)g Fd(bison)f FG(code.)33 b(In)21 b(this)i(section,)f(we)h
(brie\257y)2038 3297 y(describe)14 b(the)i(pre-processor)c(steps)k(and)
f(explain)f(why)h(the)g(Prairie-)2044 3397 y(to-V)-11
b(olcano)27 b(transformation)e(is)30 b(non-trivial.)49
b(A)29 b(more)f(detailed)2044 3497 y(description)18 b(of)i(the)h
(pre-processor)c(is)k(given)e(in)i([5].)2125 3596 y(The)d
(speci\256cation)g(of)g(an)g(optimizer)f(in)i(V)-11 b(olcano)18
b(consists)h(of)f(a)2043 3696 y(set)j(of)e(transformation)e(rules)j
(\(called)f(\252trans)p 3386 3696 25 4 v 29 w(rules\272\))g(and)g
(imple-)2037 3796 y(mentation)14 b(rules)h(\(called)f(\252impl)p
2998 3796 V 29 w(rules\272\),)h(a)g(set)h(of)f(properties,)f(and)2038
3895 y(some)h(support)e(functions.)24 b(The)15 b(join)g(associativity)g
(trans)p 3737 3895 V 29 w(rule)g(\(cf.)2044 3995 y(Figure)k(2\(b\)\))g
(in)h(V)-11 b(olcano)20 b(is)h(as)g(follows)3261 3965
y Ft(4)3297 3995 y FG(:)2210 4155 y Ft(\()p Fo(JOIN)f(?op)p
2469 4155 18 4 v 21 w(ar)o(g5)h Ft(\(\()p Fo(JOIN)g(?op)p
2896 4155 V 21 w(ar)o(g4)g Ft(\(?1)g(?2\)\))g(?3\)\))2293
4280 y Ff(\000)-23 b Fu(>)p Ft(\()p Fo(JOIN)20 b(?op)p
2633 4280 V 21 w(ar)o(g7)h Ft(\(?1)g(\()p Fo(JOIN)g(?op)p
3145 4280 V 21 w(ar)o(g6)g Ft(\(?2)g(?3\)\)\)\))2044
4440 y FG(The)32 b(important)f(point)g(to)i(note)f(is)h(the)g(use)f(of)
h FF(operator)e(ar)m(gu-)2044 4540 y(ments)21 b FG(\(denoted)e(by)h
(\252op)p 2801 4540 25 4 v 29 w(ar)o(g\272)g(in)g(rules\);)h(these)g
(ar)o(guments)e(con-)2044 4640 y(tain)i(properties)f(used)h(in)h(the)f
(rule')-5 b(s)22 b(actions,)f(but)g(unlike)f(Prairie,)2044
4739 y(they)31 b(do)g(not)h(contain)e FF(all)i FG(the)g(properties)e
(of)i(an)f(operator)f(tree)2043 4839 y(node.)c(There)18
b(are)i(other)f(property)e(classes,)k(like)e(algorithm)g(ar)o(gu-)2044
4939 y(ment,)26 b(logical)e(property)-5 b(,)24 b(system)i(property)-5
b(,)23 b(physical)i(property)-5 b(,)2044 5038 y(and)25
b(cost.)44 b(Thus,)27 b(while)f(Prairie)g(uses)g(a)g(uniform)e
(descriptor)h(to)p 2044 5107 788 4 v 2129 5160 a Fr(4)2163
5184 y Fz(There)15 b(are)f(conditions)j(and)d(actions)i(associated)g
(with)f(V)-9 b(olcano)16 b(rules)e(that)h(are)2044 5263
y(not)i(shown)g(here.)p eop
%%Page: 6 6
6 5 bop -98 24 1923 4 v -98 1420 4 1397 v 371 1324 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  [ 17.07164 128.0373
119.50148 128.0373 119.50148 25.60745 17.07164 25.60745  /Lineto /lineto
load def false Polygon  gsave 2.6 SLW 0. setgray 0 setlinecap stroke
 grestore gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  [ 34.14328 153.64476
102.42984 153.64476 102.42984 136.57312 34.14328 136.57312  /Lineto
/lineto load def false Polygon  gsave 1. setgray fill  grestore gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 754 139 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.07344
neg 47.33029 7.75298 .5 Frame  gsave 1. setgray fill  grestore end


@endspecial Fo(Prairie)15 b(Rule)f(Set)371 1324 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 68.28656 119.50148 68.28656 136.57312
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  [ 34.14328 119.50148
102.42984 119.50148 102.42984 102.42984 34.14328 102.42984  /Lineto
/lineto load def false Polygon  gsave 2.6 SLW 0. setgray 0 setlinecap
stroke  grestore gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial
719 416 a(P2V)h(Pre-processor)371 1324 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 68.28656 85.3582 68.28656 102.42984
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  [ 34.14328 85.3582 102.42984
85.3582 102.42984 68.28656 34.14328 68.28656  /Lineto /lineto load
def false Polygon  gsave 0.5 setgray fill  grestore gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore end
 
@endspecial
736 706 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.07344
neg 51.4815 7.75298 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial(V)-7
b(olcano)14 b(Rule)h(Set)371 1324 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 68.28656 51.21492 68.28656 68.28656
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 2.6 SLW 0. setgray  [ 34.14328 51.21492
102.42984 51.21492 102.42984 34.14328 34.14328 34.14328  /Lineto /lineto
load def false Polygon  gsave 2.6 SLW 0. setgray 0 setlinecap stroke
 grestore gsave 1.0 SLW 1. setgray stroke grestore end
 
@endspecial 843
950 a(V)-7 b(olcano)694 1017 y(Optimizer)o(-Generator)371
1324 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 68.28656 17.07164 68.28656 34.14328
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  [ 34.14328 17.07164
102.42984 17.07164 102.42984 0.0 34.14328 0.0  /Lineto /lineto load
def false Polygon  gsave 0.5 setgray fill  grestore gsave 0.8 SLW 0.
setgray 0 setlinecap stroke  grestore end
 
@endspecial 740 1267 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 4.51193
neg 50.62743 7.75298 .5 Frame  gsave 1. setgray fill  grestore end


@endspecial(Query)15 b(Optimizer)-948 b(Operator)15
b(T)n(ree)371 1324 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 34.14328 8.53581 17.07164 8.53581
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  /ArrowA { moveto } def
/ArrowB { /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow false 0.4
1.4 2.0 3. Arrow  EndArrow  } def [ 119.50148 8.53581 102.42984 8.53581
 /Lineto /lineto load def false Line  gsave 2.0 2 mul CLW add SLW 1.
setgray stroke grestore gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore gsave ArrowBc ArrowB pop pop pop pop grestore end
 
@endspecial 1363 1273 a(Access)e(Plan)p
1822 1420 V -98 1423 1923 4 v 1823 1440 19 1403 v -81
1440 1923 19 v -112 1623 a FG(Figure)58 b(5:)105 b(The)59
b(Prairie)g(optimizer)n(-generator)d(paradigm.)-112 1722
y(Double-boxed)j(modules)k(represent)f(software)h(generators,)-112
1822 y(shaded)35 b(boxes)g(represent)g(generated)f(programs.)72
b(The)36 b(outer)n(-)-112 1922 y(most)f(double-boxed)d(portion)h
(denotes)i(the)h(Prairie)f(optimizer)-112 2021 y(generator)-5
b(.)-117 2223 y(encode)16 b(properties,)g(V)-11 b(olcano)16
b(partitions)g(the)h(properties)e(into)h(dif-)-119 2323
y(ferent)d(classes.)26 b(The)15 b(P2V)f(pre-processor)e(partitions)i(a)
h(Prairie)f(de-)-112 2422 y(scriptor)22 b(into)g(the)h(dif)o(ferent)e
(property)f(classes)k(required)d(by)i(V)-11 b(ol-)-112
2522 y(cano.)26 b(This)21 b(is)g(a)g(non-trivial)d(task,)j(since)f(it)h
(requires)e(parsing)h(the)-112 2621 y(Prairie)g(rules)g(and)f(their)h
(actions.)-29 2721 y(Impl)p 134 2721 25 4 v 28 w(rules)29
b(in)g(V)-11 b(olcano)28 b(defer)f(most)i(of)g(the)f(actions)h(associ-)
-114 2821 y(ated)18 b(with)h(the)g(rules)f(to)h(support)e(functions.)25
b(Each)18 b(algorithm)f(has)-119 2920 y(four)c(support)g(functions)g
(associated)h(with)h(it.)26 b(A)15 b(Prairie)f(speci\256ca-)-113
3020 y(tion,)19 b(on)g(the)h(other)f(hand,)f(contains)h(all)h(the)g
(actions)f(in)h(the)g(corre-)-120 3120 y(sponding)13
b(rule.)24 b(The)14 b(P2V)g(pre-processor)e(parses)i(a)h(Prairie)f
(I-rule,)-112 3219 y(and)28 b(automatically)f(generates)g(all)j(the)e
(V)-11 b(olcano)28 b(support)f(func-)-112 3319 y(tions)f(from)g(the)h
(rule.)46 b(This)27 b(is)h(also)f(a)g(complex)e(process,)j(since)-116
3418 y(it)17 b(depends)f(partly)g(on)h(the)g(partitioning)e(of)i
(properties)f(mentioned)-114 3518 y(in)j(the)g(last)h(paragraph,)c(and)
j(also)g(because)f(it)i(requires)e(relocating)-112 3618
y(pieces)25 b(of)g(code)f(from)g(Prairie)h(rules)h(to)f(V)-11
b(olcano)24 b(support)g(func-)-112 3717 y(tions.)-29
3817 y(The)36 b(third)h(salient)g(feature)f(of)h(a)g(V)-11
b(olcano)37 b(speci\256cation)f(is)-112 3917 y(the)27
b(presence)g(of)h(implicit,)h(or)e(hidden,)h(algorithms,)h(called)e
FF(en-)-112 4016 y(for)m(cers)p FG(.)59 b(In)30 b(Prairie,)j(all)f
(algorithms)d(are)i(explicit.)58 b(Consider)m(,)-112
4116 y(for)22 b(example,)h(the)g(Mer)o(ge)p 682 4116
V 28 w(sort)h(algorithm)e(in)h(Figure)g(3\(b\).)35 b(In)23
b(a)-112 4215 y(V)-11 b(olcano)20 b(speci\256cation,)g(this)h
(algorithm)f(would)g(be)h(classi\256ed)g(as)-112 4315
y(an)k(enforcer)m(,)f(since)h(it)h(enforces)e(the)i(sortedness)f
(property)-5 b(.)39 b(The)-112 4415 y(P2V)33 b(pre-processor)d
(determines)i(the)i(Prairie)f(algorithms)f(that)-112
4514 y(are)d(functionally)f(V)-11 b(olcano)29 b(enforcers,)i(and)e
(deletes)h(the)g(corre-)-115 4614 y(sponding)16 b(Prairie)h(rules)h(to)
g(generate)f(the)h(V)-11 b(olcano)17 b(speci\256cation.)-112
4714 y(This)40 b(requires)f(the)h(pre-processor)e(to)i(migrate)g(the)g
(\(deleted\))-112 4813 y(rule')-5 b(s)20 b(actions)g(to)g(V)-11
b(olcano)19 b(support)g(functions.)-29 4913 y(The)27
b(P2V)i(pre-processor)c(also)k(generates)e(a)i(set)g(of)f(compact)-112
5012 y(V)-11 b(olcano)24 b(rules)h(by)g(mer)o(ging)e(Prairie)i(rules)g
(whenever)e(possible.)-112 5112 y(Consider)m(,)18 b(for)i(example,)f
(the)h(following)f(set)i(of)f(rules)g(in)g(Prairie:)-103
5263 y Fo(JOIN)p Ft(\()p Fu(S)90 5271 y Fn(1)122 5263
y Fu(;S)183 5271 y Fn(2)215 5263 y Ft(\):)p Fi(D)317
5271 y Fg(3)436 5263 y Fh(=)-14 b Fk(\))83 b Fo(JOPR)o
Ft(\()p Fo(SOR)m(T)o Ft(\()p Fu(S)1026 5271 y Fn(1)1058
5263 y Ft(\):)p Fi(D)1160 5271 y Fg(4)1196 5263 y Fu(;)p
Fo(SOR)m(T)o Ft(\()p Fu(S)1428 5271 y Fn(2)1460 5263
y Ft(\):)p Fi(D)1562 5271 y Fg(5)1597 5263 y Ft(\):)p
Fi(D)1699 5271 y Fg(6)2127 21 y Fo(SOR)m(T)o Ft(\()p
Fu(S)2339 29 y Fn(1)2371 21 y Ft(\):)p Fi(D)2473 29 y
Fg(2)2592 21 y Fh(=)-14 b Fk(\))83 b Fo(Null)p Ft(\()p
Fu(S)2979 29 y Fn(1)3011 21 y Ft(:)p Fi(D)3087 29 y Fg(3)3123
21 y Ft(\):)p Fi(D)3225 29 y Fg(4)2044 145 y Fo(JOPR)o
Ft(\()p Fu(S)2246 153 y Fn(1)2279 145 y Fu(;S)2340 153
y Fn(2)2371 145 y Ft(\):)p Fi(D)2473 153 y Fg(3)2592
145 y Fh(=)-14 b Fk(\))83 b Fo(Nested)p 2974 145 18 4
v 20 w(loops)p Ft(\()p Fu(S)3184 153 y Fn(1)3216 145
y Ft(:)p Fi(D)3292 153 y Fg(4)3328 145 y Fu(;S)3389 153
y Fn(2)3421 145 y Ft(\):)p Fi(D)3523 153 y Fg(5)2044
310 y FG(The)24 b(\256rst)g(rule)g(is)h(a)g(T)-8 b(-rule,)24
b(and)g(the)g(next)f(two)i(are)f(I-rules.)37 b(The)2044
410 y(P2V)25 b(pre-processor)e(combines)h(the)h(above)g(set)h(of)f
(Prairie)g(rules)2044 509 y(into)20 b(a)g(single)g(I-rule,)2044
674 y Fo(JOIN)p Ft(\()p Fu(S)2237 682 y Fn(1)2269 674
y Fu(;S)2330 682 y Fn(2)2362 674 y Ft(\):)p Fi(D)2464
682 y Fg(3)2582 674 y Fh(=)-14 b Fk(\))83 b Fo(Nested)p
2964 674 V 20 w(loops)p Ft(\()p Fu(S)3174 682 y Fn(1)3206
674 y Ft(:)p Fi(D)3282 682 y Fg(4)3318 674 y Fu(;S)3379
682 y Fn(2)3411 674 y Ft(\):)p Fi(D)3513 682 y Fg(5)2044
839 y FG(and)19 b(then)h(translates)g(it)h(into)f(a)h(single)f(V)-11
b(olcano)19 b(impl)p 3625 839 25 4 v 29 w(rule.)2044
1119 y FB(4)119 b(Experimental)30 b(r)n(esults)2044 1304
y FG(This)k(section)g(presents)f(experimental)f(results)i(which)g
(demon-)2044 1403 y(strate)e(the)g(value)g(of)g(Prairie)g(in)g
(specifying)f(rule)h(sets)h(of)f(rule-)2044 1503 y(based)g(optimizers.)
62 b(Our)32 b(experiments)e(consist)j(of)f(specifying)2043
1603 y(rule-based)18 b(optimizers)h(using)g(Prairie)g(and)g(generating)
f(optimiz-)2040 1702 y(ers)f(using)f(the)g(P2V)h(pre-processor)d(and)i
(the)h(optimizer)n(-generator)2044 1802 y(paradigm)h(of)i(Figure)g(5.)
2120 1901 y(In)14 b([4],)h(we)f(presented)g(an)g(implementation)e(of)i
(a)h(centralized)e(re-)2041 2001 y(lational)18 b(query)f(optimizer)g
(using)h(Prairie.)26 b(Using)18 b(the)g(P2V)h(trans-)2036
2101 y(lator)m(,)14 b(we)g(translated)f(this)h(to)g(V)-11
b(olcano)12 b(format)h(and)g(optimized)f(sev-)2044 2200
y(eral)23 b(queries)g(using)f(the)h(resultant)g(optimizer)-5
b(.)35 b(For)23 b(comparison,)2042 2300 y(we)18 b(hand-coded)e(the)i
(same)h(optimizer)e(directly)h(in)g(V)-11 b(olcano.)26
b(The)2039 2400 y(results)17 b(presented)f(there)g(showed)g(that,)h
(using)f(Prairie)h(\(compared)2044 2499 y(to)30 b(directly)f(using)g(V)
-11 b(olcano\))29 b(resulted)g(in)h(approximately)d(50\045)2044
2599 y(savings)f(in)g(lines)g(of)g(code)g(with)g(negligible)f(\(less)i
(than)e(5\045\))h(in-)2044 2698 y(crease)d(in)g(query)e(optimization)h
(time.)35 b(However)m(,)22 b(the)h(optimizer)2044 2798
y(was)i(quite)f(small)h(in)f(terms)h(of)f(the)g(number)f(of)h
(operators,)g(algo-)2044 2898 y(rithms)c(and)f(rules.)2127
2997 y(For)j(a)g(more)g(realistic)g(evaluation)f(of)h(Prairie,)g(we)h
(needed)d(an-)2044 3097 y(swers)h(to)f(the)g(following)f(questions:)
2106 3262 y(1.)41 b(Is)20 b(Prairie)h(adequate)d(for)i(lar)o(ge-scale)f
(rule)h(sets?)2106 3427 y(2.)41 b(How)j(is)i(programmer)c(productivity)
g(enhanced)h(by)h(the)2210 3527 y(high-level)18 b(abstractions)i(of)f
(Prairie?)2106 3692 y(3.)41 b(Can)14 b(Prairie)h(rule)f(sets)h(be)g
(translated)e(automatically)g(into)h(ef-)2210 3792 y(\256cient)20
b(implementations?)2124 3957 y(W)-7 b(e)19 b(addressed)e(the)g(\256rst)
i(question)e(by)g(using)g(the)h(T)-6 b(exas)18 b(Instru-)2044
4057 y(ments)i(Open)g(OODB)i(query)d(optimizer)g(rule)i(set,)g(which)f
(has)h(the)2036 4156 y(lar)o(gest)13 b(publicly)g(available)g(rule)h
(set.)25 b(W)-7 b(e)15 b(describe)e(this)i(optimizer)2042
4256 y(in)j(the)h(next)f(section,)g(and)g(then)g(give)g(our)f
(assessments)i(to)g(the)f(last)2044 4356 y(two)i(questions)f(in)i
(subsequent)d(sections.)2044 4592 y Fx(4.1)99 b(The)74
b(T)-9 b(exas)73 b(Instruments)h(Open)g(OODB)2268 4709
y(query)26 b(optimizer)2044 4864 y FG(The)45 b(T)-6 b(exas)46
b(Instruments)e(Open)h(Object-Oriented)f(Database)2042
4964 y(Management)17 b(System)i(is)h(an)f(open,)f(extensible,)g
(object-oriented)2044 5063 y(database)49 b(system)g(which)g(provides)f
(users)h(an)h(architectural)2044 5163 y(framework)27
b(that)i(is)i(con\256gurable)c(in)i(an)g(incremental)f(manner)-5
b(.)2044 5263 y(The)30 b(query)e(optimizer)h(in)i(the)f(Open)f(OODB)i
([2])f(is)h(generated)p eop
%%Page: 7 7
7 6 bop -112 21 a FG(using)36 b(V)-11 b(olcano.)76 b(It)38
b(is)g(written)e(as)i(a)g(set)f(of)g(trans)p 1513 21
25 4 v 29 w(rules)g(and)-112 120 y(impl)p 46 120 V 29
w(rules)42 b(that)h(de\256ne)f(the)g(algebra)g(of)g(an)h
(object-oriented)-112 220 y(database)35 b(system.)73
b(Currently)-5 b(,)38 b(there)d(are)g(17)g(transformation)-112
319 y(rules)50 b(and)g(9)h(implementation)e(rules)h(together)g(with)h
(about)-112 419 y Fh(13)p Fv(;)14 b Fh(000)21 b FG(lines)i(of)g(code)g
(for)f(support)g(functions;)i(this,)g(of)f(course,)-112
519 y(can)c(be)i(changed)d(by)i(an)g(Open)f(OODB)i(user)g(for)e
(speci\256c)h(needs.)-112 769 y Fx(4.2)99 b(Pr)n(ogrammer)25
b(pr)n(oductivity)-119 929 y FG(Programmer)13 b(productivity)f(can)j
(be)g(measured)e(in)i(dif)o(ferent)e(ways.)-112 1029
y(An)29 b(admittedly)f(simplistic)j(metric)e(is)h(the)g(number)e(of)h
(lines)h(of)-112 1128 y(code)24 b(that)i(must)g(be)f(written.)43
b(But)26 b(there)f(are)g(also)h(less)h(tangible)-116
1228 y(measures,)17 b(such)h(as)g(the)f(amount)f(of)h(conceptual)f(ef)o
(fort)g(needed)g(to)-112 1327 y(understand)k(a)k(particular)e
(programming)d(task.)36 b(Our)23 b(experience)-112 1427
y(with)d(the)h(Open)f(OODB)i(query)d(optimizer)g(suggests)i(that)g
(Prairie)-113 1527 y(excels)g(on)e(the)i(latter)m(,)e(while)i(of)o
(fering)c(modest)j(reductions)e(in)j(the)-112 1626 y(volume)d(of)i
(code)g(that)g(needs)g(to)g(be)g(written.)-34 1728 y(W)-7
b(e)17 b(converted)d(by)h(hand)g(the)i(Open)e(OODB)i(query)e(optimizer)
s(')-5 b(s)-116 1828 y(V)-11 b(olcano)16 b(speci\256cations)g(to)h
(Prairie.)26 b(This)17 b(was)h(a)f(non-trivial)e(task)-112
1928 y(because)27 b(of)h(the)g(relatively)f(lar)o(ge)g(size)i(of)f(the)
g(rule)f(set)i(and)f(the)-112 2027 y(complexity)f(of)j(the)g(support)e
(functions.)55 b(This)30 b(was)g(where)f(we)-112 2127
y(found)c(Prairie)j(helped)f(in)g(conceptually)f(simplifying)g(the)i
(rules)-120 2226 y(and)13 b(actions.)24 b(W)-7 b(e)15
b(then)e(used)h(our)f(P2V)h(pre-processor)d(to)j(reconsti-)-120
2326 y(tute)g(these)f(Prairie)h(speci\256cations)f(as)i(V)-11
b(olcano)13 b(speci\256cations.)24 b(As)-113 2426 y(described)18
b(in)h(Section)h(3,)f(this)h(process)f(involved)f(a)i(considerable)-112
2525 y(level)g(of)h(complexity)-5 b(,)19 b(partly)h(because)g(the)h
(Prairie)g(speci\256cation)-116 2625 y(had)16 b(22)h(T)-8
b(-rules)17 b(and)g(1)m(1)f(I-rules)h(compared)e(to)i(17)g(trans)p
1537 2625 V 29 w(rules)g(and)-112 2725 y(9)24 b(impl)p
112 2725 V 29 w(rules)g(in)g(the)g(V)-11 b(olcano)23
b(speci\256cation;)i(the)f(reconstituted)-112 2824 y(V)-11
b(olcano)28 b(speci\256cation)h(had)g(the)h(same)f(number)f(of)i(trans)
p 1671 2824 V 29 w(rules)-112 2924 y(and)19 b(impl)p
186 2924 V 29 w(rules)h(as)h(the)g(original)e(hand-coded)e
(speci\256cation.)-36 3026 y(Converting)12 b(the)i(Open)g(OODB)h
(optimizer)f(rule)g(set)h(into)f(Prairie)-112 3125 y(format)19
b(actually)h(simpli\256ed)g(its)h(speci\256cation)f(as)h(the)g
(complexi-)-112 3225 y(ties)i(of)g(the)g(V)-11 b(olcano)22
b(model)h(were)f(removed.)34 b(The)22 b(reduction)g(in)-119
3325 y(lines)16 b(of)e(code)h(was)g(modest)g(\320)g(there)g(was)g
(about)f(a)i(10\045)e(savings.)1826 3295 y Ft(5)-112
3424 y FG(However)m(,)24 b(as)h(mentioned)e(above,)h(savings)g(in)h
(lines)g(of)f(code)g(do)-112 3524 y(not)j(adequately)f(re\257ect)i
(increases)g(in)g(programmer)c(productiv-)-112 3624 y(ity)-5
b(.)37 b(W)-7 b(e)24 b(found)e(the)i(encapsulated)e(speci\256cations)h
(of)h(Prairie)f(\320)-117 3723 y(namely)-5 b(,)15 b(the)h(use)h(of)f(a)
h(single)f(descriptor)f(and)g(fewer)h(explicit)g(sup-)-112
3823 y(port)j(functions)g(\320)i(made)e(rule)h(programming)d
FF(much)i FG(easier)-5 b(.)-112 4073 y Fx(4.3)99 b(Performance)81
b(r)n(esults)f(using)f(the)i(Open)112 4189 y(OODB)24
b(optimizer)-32 4349 y FG(The)17 b(acid)h(test)h(of)f(Prairie)g(was)g
(whether)f(Prairie)h(speci\256cations)-117 4449 y(could)d(be)h
(translated)g(into)g(ef)o(\256cient)f(optimizer)g(implementations.)-112
4549 y(Our)24 b(experiments)f(using)h(the)h(Open)f(OODB)i(consisted)e
(of)g(opti-)-112 4648 y(mizing)j(8)g(dif)o(ferent)f(queries)h(using)h
(the)f(two)h(query)f(optimizers)-113 4748 y(generated,)19
b(respectively)-5 b(,)18 b(using)i(Prairie)g(and)f(using)h(V)-11
b(olcano)19 b(di-)-116 4847 y(rectly)e(\(in)g(the)g(remainder)f(of)h
(this)h(section,)f(we)h(will)g(use)g(\252Prairie\272)-116
4947 y(and)f(\252V)-11 b(olcano\272)17 b(to)g(denote)g(these)g(two)h
(approaches\).)24 b(There)16 b(were)p -112 5028 788 4
v -28 5081 a Fr(5)7 5105 y Fz(The)e(original)i(V)-9 b(olcano)17
b(speci\256cation)g(had)e Fc(13)p Fb(;)d Fc(400)i Fz(lines,)i(the)f
(Prairie)h(speci-)-112 5184 y(\256cation)d(had)g Fc(12)p
Fb(;)f Fc(100)h Fz(lines,)g(and)g(the)g(P2V)-6 b(-generated)15
b(V)-9 b(olcano)14 b(speci\256cation)h(had)-112 5263
y Fc(15)p Fb(;)c Fc(800)18 b Fz(lines.)2042 21 y FG(4)h(distinct)g
(expressions)e(that)i(were)g(used)f(to)h(generate)f(the)g(queries)2044
120 y(used)i(in)h(the)g(experiments;)f(these)h(are)g(shown)f(in)h
(Figure)f(6.)30 b(Each)2044 220 y(expression)19 b(represents)g(an)h
Fv(N)9 b FG(-way)20 b(join)f(query)g(for)h(varying)e
Fv(N)9 b FG(.)2127 329 y(The)26 b(\256rst)h(expression)f(E1)g(is)i(a)f
(simple)f(retrieval)g(and)g(join)g(of)2044 429 y(base)21
b(classes.)32 b(The)21 b(second,)f(E2,)h(is)i(also)e(a)h(join)f(of)g
(base)h(classes;)2039 528 y(however)m(,)16 b(after)g(each)g(class)i
(retrieval,)e(an)h(attribute)f(has)g(to)h(be)g(ma-)2043
628 y(terialized)h(\(i.e.,)h(brought)e(into)i(view\))g(before)f(the)i
(join.)26 b(The)19 b(third)2044 727 y(and)g(fourth)f(expressions)h
(\(E3)h(and)f(E4\))h(are)g(the)g(same)g(as)h(the)f(\256rst)2044
827 y(and)j(second)g(\(E1)g(and)g(E2\))g(respectively)-5
b(,)22 b(except)h(that)h(there)f(is)i(a)2044 927 y(selection)e(of)g
(attributes)g(\(the)g(select)h(operator)e(is)i(the)f(root)g(of)g(the)
2044 1026 y(expressions\).)2482 996 y Ft(6)2127 1135
y FG(The)e(algebra)f(that)h(was)h(used)f(in)g(the)h(Prairie)f(and)f(V)
-11 b(olcano)21 b(op-)2044 1235 y(timizers)h(for)f(our)h(experiments)e
(consisted)i(of)g(5)g(relational)f(oper)n(-)2044 1335
y(ators)27 b(SELECT)-6 b(,)27 b(PROJECT)-6 b(,)28 b(JOIN,)f(RET)g(and)g
(UNNEST)g(\(for)2042 1434 y(set-valued)18 b(attributes\))h(and)f(an)h
(object-oriented)d(operator)i(called)2038 1534 y(MA)-9
b(T)15 b(\(for)f(MA)-9 b(T)j(erialize;)16 b(it)g(is)g(fundamentally)c
(a)k(pointer)n(-chasing)2044 1633 y(operator)i(for)i(attributes)f(of)h
(a)h(class\).)27 b(There)20 b(were)g(8)g(algorithms.)2119
1743 y(There)12 b(are)i(many)e(parameters)h(that)g(can)h(be)f(varied)g
(when)g(bench-)2044 1842 y(marking)19 b(a)j(query)e(optimizer)-5
b(.)30 b(Since)21 b(our)g(objective)f(was)i(to)f(ver)n(-)2043
1942 y(ify)f(that)g(the)g(Prairie)g(approach)e(did)i(not)f(sacri\256ce)
h(ef)o(\256ciency)-5 b(,)18 b(our)2044 2041 y(criteria)26
b(for)f(the)i(queries)e(was)i(that)f(they)g(test)h(a)g(majority)e(of)h
(the)2036 2141 y(rules,)14 b(with)g(varying)d(properties)i(of)g(the)g
(base)h(classes.)25 b(T)-6 b(o)14 b(this)g(end,)2044
2241 y(we)21 b(tested)h(our)e(optimizer)g(\(and)g(the)h(V)-11
b(olcano)20 b(optimizer\))g(with)h(8)2044 2340 y(dif)o(ferent)g
(queries)h(\(shown)g(in)i(T)-6 b(able)23 b(3\).)35 b(The)23
b(eight)g(queries)f(Q1)2044 2440 y(through)d(Q8)j(are)g(derived)e(from)
h(the)h(4)g(expressions)e(in)i(Figure)f(6.)2039 2540
y(Each)16 b(expression)f(E1)i(through)d(E4)i(is)h(used)g(to)f(obtain)g
(two)g(queries)2044 2639 y(for)k(a)h(\256xed)f(number)f
Fv(N)29 b FG(of)21 b(JOINs)g(in)g(the)f(expression.)27
b(The)20 b(only)2039 2739 y(dif)o(ference)13 b(between)i(the)h(two)g
(queries)f(obtained)g(from)g(an)g(expres-)2043 2838 y(sion)k(is)i(that)
e(the)h(\256rst)g(one)f(does)g(not)h(contain)e(any)h(indices)g(on)g
(any)2044 2938 y(classes,)25 b(whereas)d(the)h(second)g(one)f(contains)
h(a)g(single)g(index)f(on)2044 3038 y(each)f(base)i(class)g(occurring)c
(in)j(the)g(expression.)31 b(In)22 b(expressions)2041
3137 y(where)17 b(a)h(SELECT)g(is)g(present)f(\(E3)h(and)f(E4\),)g(the)
h(selection)f(pred-)2044 3237 y(icate)k(is)g(a)g(conjunction)d(of)i
(equality)g(predicates)f FF(bc)3584 3249 y Fu(i)3636
3237 y Fh(==)k FF(const)3964 3249 y Fu(i)3992 3237 y
FG(,)2042 3337 y(where)17 b FF(bc)2342 3349 y Fu(i)2388
3337 y FG(is)j(an)e(attribute)g(of)g(class)h FF(C)3179
3349 y Fu(i)3207 3337 y FG(,)g(and)f FF(const)3561 3349
y Fu(i)3608 3337 y FG(is)h(a)g(constant)2044 3436 y(\(we)k(arbitrarily)
e(set)j(this)f(to)g Fv(i)p FG(,)g(because)g(its)g(value)g(doesn')o(t)e
(af)o(fect)2035 3536 y(the)14 b(correctness)e(or)h(performance)e(of)i
(the)g(optimizer\).)23 b(In)13 b(addition,)2041 3635
y(for)18 b(queries)g(with)g(a)h(SELECT)f(and)g(whose)g(base)g(classes)i
(have)e(in-)2040 3735 y(dices)f(\(Q6)f(and)h(Q8)f(in)h(T)-6
b(able)17 b(3\),)g(the)g(\(single\))f(index)g(of)g(each)h(base)2044
3835 y(class)22 b(was)g(chosen)e(to)h(be)g(the)g(attribute)g
(referenced)e(in)i(the)g(selec-)2044 3934 y(tion)27 b(predicate.)46
b(For)27 b(example,)h(class)g FF(C)3293 3946 y Fu(i)3348
3934 y FG(was)g(chosen)e(to)i(have)2042 4034 y(an)18
b(index)g(on)g(attribute)g FF(bc)2819 4046 y Fu(i)2847
4034 y FG(.)27 b(The)18 b(join)h(predicates)e(for)h(each)h(JOIN)2037
4134 y(were)14 b(chosen)f(at)i(random,)f(and)f(were)h(always)h
(equality)e(predicates.)2039 4233 y(The)j(choice)f(of)h(JOIN)h
(predicates)e(was)i(such)f(that)g(the)h(queries)e(cor)n(-)2044
4333 y(responded)j(to)j(linear)g(query)e(graphs.)27 b(In)21
b(the)f(future,)g(we)h(will)g(ex-)2044 4432 y(periment)e(with)h
(non-linear)e(\(e.g.,)h(star\))h(query)f(graphs.)2127
4542 y(T)-6 b(able)52 b(3)g(also)h(shows)f(the)h(number)d(of)i(trans)p
3654 4542 25 4 v 29 w(rules)h(and)p 2044 4633 788 4 v
2129 4687 a Fr(6)2163 4710 y Fz(The)17 b(most)g(complex)i(expression)g
(E4)e(consists)h(of)f(all)h(operators)h(in)f(the)g(alge-)2044
4789 y(bra,)24 b(except)h(PROJECT)d(and)h(UNNEST)-5 b(.)21
b(PROJECT)h(was)g(not)i(considered)h(be-)2044 4868 y(cause)16
b(it)g(appeared)i(in)d(only)h(one)g(impl)p 2948 4868
20 4 v 25 w(rule)g(and)g(no)f(trans)p 3411 4868 V 25
w(rules,)h(and)g(thus,)f(would)2044 4947 y(not)22 b(af)o(fect)h(the)f
(size)g(of)f(the)i(search)f(space)h(of)e(abstract)j(expressions.)37
b(UNNEST)2044 5026 y(was)20 b(not)h(considered)h(because)g(it)f
(appeared)i(in)d(exactly)j(one)e(trans)p 3657 5026 V
25 w(rule)g(and)g(one)2044 5105 y(impl)p 2169 5105 V
24 w(rule;)g(including)g(it)e(in)g(our)f(queries)i(would)g(have)f
(increased)i(the)e(number)g(of)2044 5184 y(parameters)f(that)g(could)f
(af)o(fect)h(our)f(run-times.)23 b(W)-5 b(e)16 b(preferred)i(to)f
(concentrate)j(on)2044 5263 y(simple)d(JOIN)g(expressions.)p
eop
%%Page: 8 8
8 7 bop -112 24 2130 4 v -112 1001 4 978 v -37 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl1 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end

-37 707 a Fa(C)-10 719 y Fn(1)-47 618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl1 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 -47 618 a Fm(RET)-7
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl1
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a 152 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl2 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 152 707 a Fa(C)179 719 y Fn(2)142
618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl2 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 142 618 a Fm(RET)-7 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a 42 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodejoingetcl1getcl2 16 {
.5 3.39499 0.05246 false .5 10.8299 InitRnode  } NewNode end end
 42
524 a Fm(JOIN)-7 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a -7 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a 182
415 a
 tx@Dict begin 45. Rot  end
 182 415 a 143 418 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodedots 16 { .5 0.61111
0.0 false .5 9.32877 InitRnode  } NewNode end end
 143 418 a Fl(:)10 b(:)g(:)182
415 y
 tx@Dict begin 45. neg Rot  end
 182 415 a -7 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 -7 699 a 331 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcln 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 331 429 a
Fm(RET)336 520 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodecln 16 { .5 3.32748 0.99998
false .5 8.23895 InitRnode  } NewNode end end
 336 520 a Fa(C)364 528 y Fl(n)-7 699
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a 231 335 a
 tx@Dict begin tx@NodeDict begin {  } /TheNoderoot 16 { .5 3.39499
0.05246 false .5 10.8299 InitRnode  } NewNode end end
 231 335 a Fm(JOIN)-7 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 -7 699
a -7 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 -7 699 a 100 881 a Fz(\(a\))17 b(E1)p 447
976 4 928 v 476 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl1 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 476 707 a Fa(C)504 719 y Fn(1)467
618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl1 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 467 618 a Fm(RET)506 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl1
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 506 699 a 665 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl2 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end

665 707 a Fa(C)693 719 y Fn(2)656 618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl2 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 656 618 a Fm(RET)506
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 506 699 a 463 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcl1 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 463 524 a Fm(MA)-5 b(T)506
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodegetcl1
/TheNodematgetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 506 699 a 652 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcl2 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 652 524 a Fm(MA)g(T)506 699
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodegetcl2
/TheNodematgetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 506 699 a 556 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodejoinmatgetcl1matgetcl2
16 { .5 3.39499 0.05246 false .5 10.8299 InitRnode  } NewNode end end
 556 429 a Fm(JOIN)506 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodematgetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 506
699 a 506 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodematgetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 506 699 a 695 321 a
 tx@Dict begin 45. Rot  end
 695 321 a 656 324
a
 tx@Dict begin tx@NodeDict begin {  } /TheNodedots 16 { .5 0.61111
0.0 false .5 9.32877 InitRnode  } NewNode end end
 656 324 a Fl(:)11 b(:)f(:)695 321 y
 tx@Dict begin 45. neg Rot  end
 695 321 a 506 699
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 506 699 a 845 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcln 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 845 429 a Fm(RET)850 520 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodecln 16 { .5 3.32748 0.99998
false .5 8.23895 InitRnode  } NewNode end end
 850
520 a Fa(C)878 528 y Fl(n)506 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 506 699 a 841 335
a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcln 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 841 335 a Fm(MA)-5 b(T)506 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodematgetcln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 506 699 a 745 240
a
 tx@Dict begin tx@NodeDict begin {  } /TheNoderoot 16 { .5 3.39499
0.05246 false .5 10.8299 InitRnode  } NewNode end end
 745 240 a Fm(JOIN)506 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 506 699 a 506 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodematgetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 506
699 a 611 881 a Fz(\(b\))17 b(E2)p 961 976 4 928 v 990
707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl1 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 990 707 a Fa(C)1018 719 y Fn(1)981 618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl1 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 981 618
a Fm(RET)1020 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl1
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020 699 a 1179 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl2 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 1179 707 a
Fa(C)1207 719 y Fn(2)1170 618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl2 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 1170 618 a Fm(RET)1020
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020 699 a 1070 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodejoingetcl1getcl2 16 {
.5 3.39499 0.05246 false .5 10.8299 InitRnode  } NewNode end end
 1070 524 a Fm(JOIN)1020 699
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020 699 a 1020 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020 699 a 1209 415 a
 tx@Dict begin 45. Rot  end
 1209 415
a 1170 418 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodedots 16 { .5 0.61111
0.0 false .5 9.32877 InitRnode  } NewNode end end
 1170 418 a Fl(:)11 b(:)f(:)1209 415 y
 tx@Dict begin 45. neg Rot  end
 1209
415 a 1020 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoingetcl1getcl2
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1020 699 a 1359 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcln 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 1359 429 a Fm(RET)1364
520 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodecln 16 { .5 3.32748 0.99998
false .5 8.23895 InitRnode  } NewNode end end
 1364 520 a Fa(C)1392 528 y Fl(n)1020 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020
699 a 1259 335 a
 tx@Dict begin tx@NodeDict begin {  } /TheNoderoot 16 { .5 3.39499
0.05246 false .5 10.8299 InitRnode  } NewNode end end
 1259 335 a Fm(JOIN)1020 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1020 699
a 1020 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1020 699 a 1227 240 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeselect 16 { .5 3.39499
0.05246 false .5 18.3349 InitRnode  } NewNode end end
 1227 240 a Fm(SELECT)1020
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodeselect
/TheNoderoot InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1020 699 a 1127 881 a Fz(\(c\))17 b(E3)p 1474 976
4 928 v 1504 707 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl1 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 1504 707 a Fa(C)1531 719 y Fn(1)1495
618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl1 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 1495 618 a Fm(RET)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl1
/TheNodegetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1534 699 a 1693 707
a
 tx@Dict begin tx@NodeDict begin {  } /TheNodecl2 16 { .5 3.32748 1.5
false .5 7.2378 InitRnode  } NewNode end end
 1693 707 a Fa(C)1720 719 y Fn(2)1684 618 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcl2 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 1684 618
a Fm(RET)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecl2
/TheNodegetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1534 699 a 1490 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcl1 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 1490 524 a
Fm(MA)-5 b(T)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodegetcl1
/TheNodematgetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1534 699 a 1679 524 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcl2 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 1679 524
a Fm(MA)g(T)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodegetcl2
/TheNodematgetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1534 699 a 1583 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodejoinmatgetcl1matgetcl2
16 { .5 3.39499 0.05246 false .5 10.8299 InitRnode  } NewNode end end
 1583 429
a Fm(JOIN)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodematgetcl1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1534 699 a 1534 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodematgetcl2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1534 699 a
1723 321 a
 tx@Dict begin 45. Rot  end
 1723 321 a 1684 324 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodedots 16 { .5 0.61111
0.0 false .5 9.32877 InitRnode  } NewNode end end
 1684 324 a Fl(:)10 b(:)h(:)1723
321 y
 tx@Dict begin 45. neg Rot  end
 1723 321 a 1534 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodejoinmatgetcl1matgetcl2
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1534 699 a 1873 429 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodegetcln 16 { .5 3.34 0.0
false .5 9.44495 InitRnode  } NewNode end end
 1873
429 a Fm(RET)1878 520 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodecln 16 { .5 3.32748 0.99998
false .5 8.23895 InitRnode  } NewNode end end
 1878 520 a Fa(C)1905 528 y Fl(n)1534
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodecln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1534 699 a 1868 335 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodematgetcln 16 { .5 3.39499
0.0 false .5 10.55492 InitRnode  } NewNode end end
 1868 335 a Fm(MA)-5 b(T)1534
699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodematgetcln
/TheNodegetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 1534 699 a 1772 240 a
 tx@Dict begin tx@NodeDict begin {  } /TheNoderoot 16 { .5 3.39499
0.05246 false .5 10.8299 InitRnode  } NewNode end end
 1772 240 a Fm(JOIN)1534 699
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodedots InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1534 699 a 1534 699 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNoderoot
/TheNodematgetcln InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 1534 699 a 1741 146 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeselect 16 { .5 3.39499
0.05246 false .5 18.3349 InitRnode  } NewNode end end
 1741 146
a Fm(SELECT)1534 699 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 1.0 1.0 /TheNodeselect
/TheNoderoot InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 1534 699 a 1639 881 a Fz(\(d\))17
b(E4)p 2014 1001 4 978 v -112 1004 2130 4 v 2015 1021
19 984 v -96 1021 2130 19 v -112 1204 a FG(Figure)g(6:)26
b(Expressions)17 b(used)h(in)g(generating)e(queries)i(for)f
(experiments)p 2359 357 1644 13 v 2359 423 4 67 v 2412
437 a Fp(Query)p 2620 423 V 2673 443 a(Indices?)p 2930
423 V 2983 437 a(Expr)o(ession)p 3306 423 V 3471 403
a(Rules)e(matched)p 3999 423 V 3309 427 694 4 v 2359
490 4 67 v 2620 490 V 2930 490 V 3306 490 V 3359 470
a Fo(trans)p 3475 470 18 4 v 21 w(rules)p 3656 490 4
67 v 103 w(impl)p 3818 470 18 4 v 22 w(rules)p 3999 490
4 67 v 2359 502 1644 13 v 2359 569 4 67 v 2456 549 a(Q1)p
2620 569 V 214 w(No)p 2930 569 V 3087 588 a(E1)p 3306
569 V 316 w(3)p 3656 569 V 318 w(3)p 3999 569 V 2359
572 575 4 v 2359 635 4 67 v 2456 615 a(Q2)p 2620 635
V 207 w(Y)-6 b(es)p 2930 635 V 3306 635 V 3656 635 V
3999 635 V 2359 638 1644 4 v 2359 705 4 67 v 2456 685
a(Q3)p 2620 705 V 214 w(No)p 2930 705 V 3087 725 a(E2)p
3306 705 V 3468 724 a(8)p 3656 705 V 3815 725 a(4)p 3999
705 V 2359 708 575 4 v 2359 771 4 67 v 2456 751 a(Q4)p
2620 771 V 207 w(Y)g(es)p 2930 771 V 3306 771 V 3656
771 V 3999 771 V 2359 775 1644 4 v 2359 841 4 67 v 2456
821 a(Q5)p 2620 841 V 214 w(No)p 2930 841 V 3087 860
a(E3)p 3306 841 V 316 w(9)p 3656 841 V 3815 861 a(5)p
3999 841 V 2359 844 575 4 v 2359 907 4 67 v 2456 887
a(Q6)p 2620 907 V 207 w(Y)g(es)p 2930 907 V 3306 907
V 3656 907 V 3999 907 V 2359 911 1644 4 v 2359 977 4
67 v 2456 957 a(Q7)p 2620 977 V 214 w(No)p 2930 977 V
3087 997 a(E4)p 3306 977 V 302 w(16)p 3656 977 V 3815
996 a(7)p 3999 977 V 2359 980 575 4 v 2359 1044 4 67
v 2456 1024 a(Q8)p 2620 1044 V 207 w(Y)g(es)p 2930 1044
V 3306 1044 V 3656 1044 V 3999 1044 V 2359 1056 1644
13 v 2566 1204 a FG(T)g(able)20 b(3:)27 b(Queries)20
b(used)g(in)h(experiments)-112 1554 y(impl)p 46 1554
25 4 v 29 w(rules)37 b(that)h(are)f(matched)g(by)g(each)g(expression.)
78 b(These)-112 1653 y(are)21 b(the)g(rules)g(whose)g(left)g(hand)f
(sides)i(match)f(a)g(sub-expression.)-112 1753 y(However)m(,)f(not)h
(all)h(the)g(rules)f(were)h(necessarily)f(applicable.)30
b(For)-112 1853 y(instance,)25 b(an)g(impl)p 469 1853
V 29 w(rule)f(with)i(an)e(index)g(scan)h(would)f(not)h(apply)-112
1952 y(to)20 b(Q3,)g(although)e(it)j(might)f(apply)f(to)h(Q4.)-29
2054 y(Queries)32 b(Q1)h(through)e(Q8)i(were)g(optimized)f(for)g
(increasing)-119 2153 y(number)12 b Fv(N)24 b FG(of)15
b(JOINs.)25 b(For)15 b(a)g(\256xed)f(number)e(of)j(JOINs)g(in)g(a)g
(query)-5 b(,)-112 2253 y(we)21 b(varied)f(the)g(cardinalities)h(of)f
(the)h(base)g(classes)h(5)f(times,)g(each)-112 2353 y(time)g
(generating)f(a)i(query)f(with)h(dif)o(ferent)d(class)k(properties,)d
(and)-112 2452 y(averaged)e(the)j(run-times)e(over)h(the)h(5)f(query)g
(instances)g(to)h(gener)n(-)-114 2552 y(ate)d(the)h(per)n(-query)d
(optimization)h(time.)27 b(Thus,)18 b(each)g(point)g(in)h(our)-112
2652 y(graphs)25 b(represents)g(the)h(average)f(of)h(5)g(queries.)44
b(The)26 b(run-times)-112 2751 y(were)f(measured)395
2721 y Ft(7)457 2751 y FG(using)h(the)g(GNU)g Fd(time)g
FG(command.)43 b(All)26 b(ex-)-112 2851 y(periments)f(were)h(performed)
e(on)i(a)h(lightly)f(loaded)f(DECstation)-112 2950 y(5000/200)17
b(running)h(Ultrix)i(4.2.)-37 3052 y(The)14 b(optimization)e(times)i
(for)g(each)f(query)g(for)g(both)g(approaches)-120 3152
y(\(Prairie)h(and)g(V)-11 b(olcano\))13 b(are)h(shown)g(in)g(Figures)g
(7\(a\))f(through)f(7\(h\).)-112 3251 y(The)25 b(number)f(of)i(joins)g
(in)g(each)g(set)g(of)g(graphs)f(was)h(varied)f(to)h(a)-112
3351 y(maximum)18 b(of)i(8,)g(or)g(until)g(virtual)f(memory)g(was)i
(exhausted.)-29 3452 y(The)i(\256rst)h(set)g(of)f(graphs)f(\(Figures)h
(7\(a\))g(and)f(7\(b\)\))g(shows)i(the)-112 3552 y(performance)j(of)k
(a)g(simple)g(relational-type)d(query)-5 b(.)57 b(The)30
b(opti-)-117 3652 y(mization)16 b(times)h(are)g(almost)g(identical)f
(between)g(Prairie)h(and)f(V)-11 b(ol-)-112 3751 y(cano,)21
b(and)h(the)g(notable)f(point)h(is)h(that)f(the)h(presence)e(of)h(an)g
(index)-120 3851 y(does)14 b(not)g(change)f(the)h(optimizer)s(')-5
b(s)13 b(behavior)m(,)g(i.e.,)i(the)f(two)g(graphs)-112
3951 y(are)20 b(identical.)28 b(This)21 b(arises)g(because)f(the)g
(optimizer)g(algebra)f(had)-118 4050 y(only)d(two)g(join)g(algorithms)e
(\(pointer)h(join)g(and)h(hash)g(join\),)g(neither)-112
4150 y(of)j(which)h(makes)g(use)g(of)g(any)g(indices.)-29
4251 y(The)25 b(second)g(set)i(of)f(graphs)f(\(Figures)g(7\(c\))h(and)f
(7\(d\)\))g(shows)-118 4351 y(the)16 b(results)g(of)f(optimizing)g(Q3)g
(and)h(Q4.)25 b(Here,)16 b(as)h(in)f(Figures)f(7\(a\))-114
4451 y(and)j(7\(b\),)g(the)h(presence)f(\(or)g(absence\))g(of)g
(indices)h(makes)g(no)f(dif-)-118 4550 y(ference.)24
b(Both)16 b(the)f(Prairie)h(and)f(V)-11 b(olcano)15 b(approaches)e
(have)i(com-)-117 4650 y(parable)g(run-times.)24 b(The)16
b(sharp)f(jump)g(in)i(the)f(graphs)f(from)g(7-way)-115
4750 y(to)j(8-way)f(joins)h(is)h(due)e(to)h(the)g(fact)g(that)g(since)g
(all)g(optimization)f(is)-113 4849 y(done)i(in)h(main)f(memory)-5
b(,)17 b(dynamic)i(memory)f(allocation)g(\(caused)-112
4949 y(by)j Fd(malloc)h FG(calls\))h(results)f(in)h(a)g(lot)f(of)g
(thrashing)f(at)i(this)g(point.)p -112 5028 788 4 v -28
5081 a Fr(7)7 5105 y Fz(Since)j(the)g(run-times)h(were)f(too)f(small)h
(to)g(be)f(measured)h(accurately)j(with)-112 5184 y Fy(time)p
Fz(,)19 b(each)i(query)g(instance)h(was)e(optimized)i(3000)f(times)f
(\(in)h(a)f(loop\))h(and)f(the)-112 5263 y(total)e(time)g(was)f
(divided)i(by)e(3000)g(to)g(get)h(the)g(per)o(-query)g(optimization)j
(time.)2042 1554 y FG(W)-7 b(e)20 b(speculate)e(that)h(in)g(systems)g
(with)g(more)f(virtual)g(memory)-5 b(,)17 b(the)2044
1653 y(graphs)i(will)i(be)f(smoother)-5 b(.)2122 1758
y(The)16 b(third)f(and)h(fourth)e(sets)j(of)f(graphs)f(in)h(Figures)g
(7\(e\))f(through)2043 1857 y(7\(h\))k(are)h(optimizations)f(of)g
(queries)h(with)g(a)g(selection)g(predicate.)2039 1957
y(In)c(these)g(cases,)h(the)g(presence)e(of)g(an)i(index)e(makes)g(a)i
(dif)o(ference)d(if)2044 2057 y(the)20 b(index)g(is)i(referenced)c(in)j
(the)g(selection)f(predicate)f(\(as)i(we)g(de-)2042 2156
y(signed\).)26 b(Also,)19 b(in)g(these)h(two)f(\256gures,)f(the)h
(performance)e(of)h(both)2040 2256 y(Prairie)g(and)e(V)-11
b(olcano)17 b(was)h(almost)f(identical,)g(except)g(that)h(Prairie)2044
2356 y(does)29 b(slightly)g(worse)g(due)g(to)h(the)f(lar)o(ger)f
(number)g(of)h Fd(malloc)2044 2455 y FG(calls)23 b(that)g(the)f(P2V)h
(translator)f(introduces.)32 b(Also,)24 b(note)e(that)h(we)2043
2555 y(could)c(only)g(go)g(up)h(to)g(3-way)f(joins)g(before)g(virtual)g
(memory)f(was)2044 2654 y(exhausted.)31 b(As)23 b(the)f(available)g
(memory)e(decreases,)i(there)g(is)h(in-)2039 2754 y(creased)16
b(thrashing)f(\(as)i(shown)f(by)g(the)g(sharp)g(changes)g(in)g(slope)g
(in)2044 2854 y(the)k(plots\))g(resulting)f(in)i(a)f(much)f(slower)h
(optimization)f(process.)2127 2958 y(In)j(all)h(four)f(sets)i(of)e
(plots,)h(we)g(can)f(see)i(that)e(Prairie)h(performs)2044
3058 y(with)f(almost)g(\(less)h(than)f Fh(5\045)g FG(variation\))e(the)
j(same)f(ef)o(\256ciency)e(as)2044 3158 y(V)-11 b(olcano.)29
b(In)21 b(extreme)f(cases,)i(when)e(memory)g(is)i(scarce,)f(Prairie)
2040 3257 y(runs)c(more)g(slowly)h(\(about)e Fh(15\045)p
FG(\))h(\(e.g.,)g(Figure)f(7\(f\)\),)h(but)g(we)h(be-)2044
3357 y(lieve)25 b(that)g(this)h(situation)f(already)f(represents)h(a)h
(serious)f(bottle-)2044 3456 y(neck)19 b(for)h(both)f(V)-11
b(olcano)19 b(and)h(Prairie.)2120 3561 y(The)14 b(results)i(presented)d
(in)i(this)g(section)f(show)h(that)g(Prairie)f(opti-)2039
3661 y(mizers)i(need)f(not)h(sacri\256ce)g(ef)o(\256ciency)e(for)i
(clarity)-5 b(,)15 b(even)h(for)f(lar)o(ge)2038 3760
y(rule)h(sets.)26 b(More)15 b(research)g(and)g(validation)f(is)j
(necessary)e(to)h(verify)2044 3860 y(that)k(Prairie)g(is)h(an)f(ef)o
(\256cient)g(tool)g(for)f(optimizer)g(speci\256cation.)2044
4166 y FB(5)119 b(Related)31 b(r)n(esear)n(ch)2041 4361
y FG(The)18 b(System)g(R)i(optimizer)d([1)m(1])g(was)h(the)h(most)f
(important)e(devel-)2044 4461 y(opment)j(in)j(query)d(optimization)h
(research.)28 b(It)22 b(was)g(a)f(cost-based)2044 4560
y(centralized)h(relational)g(query)g(optimizer)g(and)g(introduced)f(a)i
(va-)2044 4660 y(riety)i(of)h(key)f(concepts)g(like)h
(\252interesting\272)f(expressions,)h(cardi-)2043 4759
y(nality)20 b(estimation)f(using)h(selectivity)f(factors)h(and)f
(dynamic)g(pro-)2044 4859 y(gramming)28 b(with)j(pruning)e(of)h(search)
g(space.)59 b(These)30 b(concepts)2044 4959 y(continue)18
b(to)j(be)f(important)f(in)h(query)f(optimizer)g(research.)2127
5063 y(The)29 b(query)g(optimizer)g(in)h(R)3005 5033
y Ff(\003)3074 5063 y FG([3])f(works)h(in)g(essentially)g(the)2039
5163 y(same)17 b(way)f(as)h(that)g(of)f(System)g(R,)h(except)f(that)g
(R)3480 5133 y Ff(\003)3536 5163 y FG(is)h(a)g(distributed)2044
5263 y(database)32 b(system)g(which)g(introduces)f(some)h(subtle)g
(complica-)p eop
%%Page: 9 9
9 8 bop -104 24 1935 4 v -104 3720 4 3696 v 66 714 a
@beginspecial 50.187500 @llx 50.187500 @lly 501.875000
@urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q1.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
621 376 m
621 396 l
822 376 m
822 396 l
1023 376 m
1023 396 l
1225 376 m
1225 396 l
1426 376 m
1426 396 l
1627 376 m
1627 396 l
1828 376 m
1828 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
621 1785 m
621 1765 l
822 1785 m
822 1765 l
1023 1785 m
1023 1765 l
1225 1785 m
1225 1765 l
1426 1785 m
1426 1765 l
1627 1785 m
1627 1765 l
1828 1785 m
1828 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
621 276 m
gsave
621 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
822 276 m
gsave
822 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
1023 276 m
gsave
1023 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
1225 276 m
gsave
1225 276 translate
0 rotate
0 -40  m
(4) CS
(4) show
grestore
newpath
1426 276 m
gsave
1426 276 translate
0 rotate
0 -40  m
(5) CS
(5) show
grestore
newpath
1627 276 m
gsave
1627 276 translate
0 rotate
0 -40  m
(6) CS
(6) show
grestore
newpath
1828 276 m
gsave
1828 276 translate
0 rotate
0 -40  m
(7) CS
(7) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(8) CS
(8) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 611 m
430 611 l
420 846 m
430 846 l
420 1081 m
430 1081 l
420 1315 m
430 1315 l
420 1550 m
430 1550 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 611 m
2020 611 l
2030 846 m
2020 846 l
2030 1081 m
2020 1081 l
2030 1315 m
2020 1315 l
2030 1550 m
2020 1550 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 846 m
440 846 l
420 1315 m
440 1315 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 846 m
2010 846 l
2030 1315 m
2010 1315 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 846 m
gsave
348 846 translate
0 rotate
0 -40  m
(1000) RJ
(1000) show
grestore
newpath
348 1315 m
gsave
348 1315 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(3000) RJ
(3000) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
-2 1080 m
gsave
-2 1080 translate
90 rotate
0 0  m
(CPU time \(microseconds\)) CS
(CPU time \(microseconds\)) show
grestore
newpath
420 418 m
621 537 l
822 661 l
1023 789 l
1225 909 l
1426 1046 l
1627 1183 l
1828 1320 l
2030 1449 l
stroke
420 418 30 0 360 arc
gsave fill grestore
stroke
621 537 30 0 360 arc
gsave fill grestore
stroke
822 661 30 0 360 arc
gsave fill grestore
stroke
1023 789 30 0 360 arc
gsave fill grestore
stroke
1225 909 30 0 360 arc
gsave fill grestore
stroke
1426 1046 30 0 360 arc
gsave fill grestore
stroke
1627 1183 30 0 360 arc
gsave fill grestore
stroke
1828 1320 30 0 360 arc
gsave fill grestore
stroke
2030 1449 30 0 360 arc
gsave fill grestore
stroke
420 421 m
621 541 l
822 670 l
1023 801 l
1225 935 l
1426 1066 l
1627 1229 l
1828 1355 l
2030 1504 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 451 m
390 421 l
420 391 l
450 421 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 451 m
390 421 l
420 391 l
450 421 l
420 451 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
621 571 m
591 541 l
621 511 l
651 541 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
621 571 m
591 541 l
621 511 l
651 541 l
621 571 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
822 700 m
792 670 l
822 640 l
852 670 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
822 700 m
792 670 l
822 640 l
852 670 l
822 700 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1023 831 m
993 801 l
1023 771 l
1053 801 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1023 831 m
993 801 l
1023 771 l
1053 801 l
1023 831 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1225 965 m
1195 935 l
1225 905 l
1255 935 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1225 965 m
1195 935 l
1225 905 l
1255 935 l
1225 965 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1426 1096 m
1396 1066 l
1426 1036 l
1456 1066 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1426 1096 m
1396 1066 l
1426 1036 l
1456 1066 l
1426 1096 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1627 1259 m
1597 1229 l
1627 1199 l
1657 1229 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1627 1259 m
1597 1229 l
1627 1199 l
1657 1229 l
1627 1259 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1828 1385 m
1798 1355 l
1828 1325 l
1858 1355 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1828 1385 m
1798 1355 l
1828 1325 l
1858 1355 l
1828 1385 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1534 m
2000 1504 l
2030 1474 l
2060 1504 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1534 m
2000 1504 l
2030 1474 l
2060 1504 l
2030 1534 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 267 843 a Fz(\(a\))17 b(Query)h(1)974 714
y @beginspecial 50.187500 @llx 50.187500 @lly 501.875000
@urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q2.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
621 376 m
621 396 l
822 376 m
822 396 l
1023 376 m
1023 396 l
1225 376 m
1225 396 l
1426 376 m
1426 396 l
1627 376 m
1627 396 l
1828 376 m
1828 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
621 1785 m
621 1765 l
822 1785 m
822 1765 l
1023 1785 m
1023 1765 l
1225 1785 m
1225 1765 l
1426 1785 m
1426 1765 l
1627 1785 m
1627 1765 l
1828 1785 m
1828 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
621 276 m
gsave
621 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
822 276 m
gsave
822 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
1023 276 m
gsave
1023 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
1225 276 m
gsave
1225 276 translate
0 rotate
0 -40  m
(4) CS
(4) show
grestore
newpath
1426 276 m
gsave
1426 276 translate
0 rotate
0 -40  m
(5) CS
(5) show
grestore
newpath
1627 276 m
gsave
1627 276 translate
0 rotate
0 -40  m
(6) CS
(6) show
grestore
newpath
1828 276 m
gsave
1828 276 translate
0 rotate
0 -40  m
(7) CS
(7) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(8) CS
(8) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 611 m
430 611 l
420 846 m
430 846 l
420 1081 m
430 1081 l
420 1315 m
430 1315 l
420 1550 m
430 1550 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 611 m
2020 611 l
2030 846 m
2020 846 l
2030 1081 m
2020 1081 l
2030 1315 m
2020 1315 l
2030 1550 m
2020 1550 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 846 m
440 846 l
420 1315 m
440 1315 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 846 m
2010 846 l
2030 1315 m
2010 1315 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 846 m
gsave
348 846 translate
0 rotate
0 -40  m
(1000) RJ
(1000) show
grestore
newpath
348 1315 m
gsave
348 1315 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(3000) RJ
(3000) show
grestore
newpath
420 418 m
621 539 l
822 664 l
1023 783 l
1225 906 l
1426 1037 l
1627 1176 l
1828 1304 l
2030 1451 l
stroke
420 418 30 0 360 arc
gsave fill grestore
stroke
621 539 30 0 360 arc
gsave fill grestore
stroke
822 664 30 0 360 arc
gsave fill grestore
stroke
1023 783 30 0 360 arc
gsave fill grestore
stroke
1225 906 30 0 360 arc
gsave fill grestore
stroke
1426 1037 30 0 360 arc
gsave fill grestore
stroke
1627 1176 30 0 360 arc
gsave fill grestore
stroke
1828 1304 30 0 360 arc
gsave fill grestore
stroke
2030 1451 30 0 360 arc
gsave fill grestore
stroke
420 412 m
621 533 l
822 661 l
1023 796 l
1225 926 l
1426 1063 l
1627 1212 l
1828 1355 l
2030 1504 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 442 m
390 412 l
420 382 l
450 412 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 442 m
390 412 l
420 382 l
450 412 l
420 442 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
621 563 m
591 533 l
621 503 l
651 533 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
621 563 m
591 533 l
621 503 l
651 533 l
621 563 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
822 691 m
792 661 l
822 631 l
852 661 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
822 691 m
792 661 l
822 631 l
852 661 l
822 691 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1023 826 m
993 796 l
1023 766 l
1053 796 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1023 826 m
993 796 l
1023 766 l
1053 796 l
1023 826 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1225 956 m
1195 926 l
1225 896 l
1255 926 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1225 956 m
1195 926 l
1225 896 l
1255 926 l
1225 956 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1426 1093 m
1396 1063 l
1426 1033 l
1456 1063 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1426 1093 m
1396 1063 l
1426 1033 l
1456 1063 l
1426 1093 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1627 1242 m
1597 1212 l
1627 1182 l
1657 1212 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1627 1242 m
1597 1212 l
1627 1182 l
1657 1212 l
1627 1242 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1828 1385 m
1798 1355 l
1828 1325 l
1858 1355 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1828 1385 m
1798 1355 l
1828 1325 l
1858 1355 l
1828 1385 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1534 m
2000 1504 l
2030 1474 l
2060 1504 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1534 m
2000 1504 l
2030 1474 l
2060 1504 l
2030 1534 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 1173 843 a(\(b\))f(Query)h(2)p -34 943 1816
4 v 66 1633 a @beginspecial 50.187500 @llx 50.187500
@lly 501.875000 @urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q3.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
621 376 m
621 396 l
822 376 m
822 396 l
1023 376 m
1023 396 l
1225 376 m
1225 396 l
1426 376 m
1426 396 l
1627 376 m
1627 396 l
1828 376 m
1828 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
621 1785 m
621 1765 l
822 1785 m
822 1765 l
1023 1785 m
1023 1765 l
1225 1785 m
1225 1765 l
1426 1785 m
1426 1765 l
1627 1785 m
1627 1765 l
1828 1785 m
1828 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
621 276 m
gsave
621 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
822 276 m
gsave
822 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
1023 276 m
gsave
1023 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
1225 276 m
gsave
1225 276 translate
0 rotate
0 -40  m
(4) CS
(4) show
grestore
newpath
1426 276 m
gsave
1426 276 translate
0 rotate
0 -40  m
(5) CS
(5) show
grestore
newpath
1627 276 m
gsave
1627 276 translate
0 rotate
0 -40  m
(6) CS
(6) show
grestore
newpath
1828 276 m
gsave
1828 276 translate
0 rotate
0 -40  m
(7) CS
(7) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(8) CS
(8) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 517 m
430 517 l
420 658 m
430 658 l
420 799 m
430 799 l
420 940 m
430 940 l
420 1081 m
430 1081 l
420 1221 m
430 1221 l
420 1362 m
430 1362 l
420 1503 m
430 1503 l
420 1644 m
430 1644 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 517 m
2020 517 l
2030 658 m
2020 658 l
2030 799 m
2020 799 l
2030 940 m
2020 940 l
2030 1081 m
2020 1081 l
2030 1221 m
2020 1221 l
2030 1362 m
2020 1362 l
2030 1503 m
2020 1503 l
2030 1644 m
2020 1644 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 658 m
440 658 l
420 940 m
440 940 l
420 1221 m
440 1221 l
420 1503 m
440 1503 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 658 m
2010 658 l
2030 940 m
2010 940 l
2030 1221 m
2010 1221 l
2030 1503 m
2010 1503 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 658 m
gsave
348 658 translate
0 rotate
0 -40  m
(1000) RJ
(1000) show
grestore
newpath
348 940 m
gsave
348 940 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 1221 m
gsave
348 1221 translate
0 rotate
0 -40  m
(3000) RJ
(3000) show
grestore
newpath
348 1503 m
gsave
348 1503 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(5000) RJ
(5000) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
-2 1080 m
gsave
-2 1080 translate
90 rotate
0 0  m
(CPU time \(microseconds\)) CS
(CPU time \(microseconds\)) show
grestore
newpath
420 401 m
621 489 l
822 578 l
1023 672 l
1225 762 l
1426 865 l
1627 969 l
1828 1076 l
2030 1574 l
stroke
420 401 30 0 360 arc
gsave fill grestore
stroke
621 489 30 0 360 arc
gsave fill grestore
stroke
822 578 30 0 360 arc
gsave fill grestore
stroke
1023 672 30 0 360 arc
gsave fill grestore
stroke
1225 762 30 0 360 arc
gsave fill grestore
stroke
1426 865 30 0 360 arc
gsave fill grestore
stroke
1627 969 30 0 360 arc
gsave fill grestore
stroke
1828 1076 30 0 360 arc
gsave fill grestore
stroke
2030 1574 30 0 360 arc
gsave fill grestore
stroke
420 402 m
621 485 l
822 568 l
1023 644 l
1225 736 l
1426 821 l
1627 918 l
1828 1019 l
2030 1511 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 432 m
390 402 l
420 372 l
450 402 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 432 m
390 402 l
420 372 l
450 402 l
420 432 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
621 515 m
591 485 l
621 455 l
651 485 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
621 515 m
591 485 l
621 455 l
651 485 l
621 515 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
822 598 m
792 568 l
822 538 l
852 568 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
822 598 m
792 568 l
822 538 l
852 568 l
822 598 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1023 674 m
993 644 l
1023 614 l
1053 644 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1023 674 m
993 644 l
1023 614 l
1053 644 l
1023 674 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1225 766 m
1195 736 l
1225 706 l
1255 736 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1225 766 m
1195 736 l
1225 706 l
1255 736 l
1225 766 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1426 851 m
1396 821 l
1426 791 l
1456 821 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1426 851 m
1396 821 l
1426 791 l
1456 821 l
1426 851 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1627 948 m
1597 918 l
1627 888 l
1657 918 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1627 948 m
1597 918 l
1627 888 l
1657 918 l
1627 948 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1828 1049 m
1798 1019 l
1828 989 l
1858 1019 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1828 1049 m
1798 1019 l
1828 989 l
1858 1019 l
1828 1049 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1541 m
2000 1511 l
2030 1481 l
2060 1511 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1541 m
2000 1511 l
2030 1481 l
2060 1511 l
2030 1541 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 267 1761 a(\(c\))f(Query)h(3)974 1633 y
@beginspecial 50.187500 @llx 50.187500 @lly 501.875000
@urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q4.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
621 376 m
621 396 l
822 376 m
822 396 l
1023 376 m
1023 396 l
1225 376 m
1225 396 l
1426 376 m
1426 396 l
1627 376 m
1627 396 l
1828 376 m
1828 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
621 1785 m
621 1765 l
822 1785 m
822 1765 l
1023 1785 m
1023 1765 l
1225 1785 m
1225 1765 l
1426 1785 m
1426 1765 l
1627 1785 m
1627 1765 l
1828 1785 m
1828 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
621 276 m
gsave
621 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
822 276 m
gsave
822 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
1023 276 m
gsave
1023 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
1225 276 m
gsave
1225 276 translate
0 rotate
0 -40  m
(4) CS
(4) show
grestore
newpath
1426 276 m
gsave
1426 276 translate
0 rotate
0 -40  m
(5) CS
(5) show
grestore
newpath
1627 276 m
gsave
1627 276 translate
0 rotate
0 -40  m
(6) CS
(6) show
grestore
newpath
1828 276 m
gsave
1828 276 translate
0 rotate
0 -40  m
(7) CS
(7) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(8) CS
(8) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 517 m
430 517 l
420 658 m
430 658 l
420 799 m
430 799 l
420 940 m
430 940 l
420 1081 m
430 1081 l
420 1221 m
430 1221 l
420 1362 m
430 1362 l
420 1503 m
430 1503 l
420 1644 m
430 1644 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 517 m
2020 517 l
2030 658 m
2020 658 l
2030 799 m
2020 799 l
2030 940 m
2020 940 l
2030 1081 m
2020 1081 l
2030 1221 m
2020 1221 l
2030 1362 m
2020 1362 l
2030 1503 m
2020 1503 l
2030 1644 m
2020 1644 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 658 m
440 658 l
420 940 m
440 940 l
420 1221 m
440 1221 l
420 1503 m
440 1503 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 658 m
2010 658 l
2030 940 m
2010 940 l
2030 1221 m
2010 1221 l
2030 1503 m
2010 1503 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 658 m
gsave
348 658 translate
0 rotate
0 -40  m
(1000) RJ
(1000) show
grestore
newpath
348 940 m
gsave
348 940 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 1221 m
gsave
348 1221 translate
0 rotate
0 -40  m
(3000) RJ
(3000) show
grestore
newpath
348 1503 m
gsave
348 1503 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(5000) RJ
(5000) show
grestore
newpath
420 400 m
621 492 l
822 575 l
1023 669 l
1225 759 l
1426 866 l
1627 962 l
1828 1069 l
2030 1578 l
stroke
420 400 30 0 360 arc
gsave fill grestore
stroke
621 492 30 0 360 arc
gsave fill grestore
stroke
822 575 30 0 360 arc
gsave fill grestore
stroke
1023 669 30 0 360 arc
gsave fill grestore
stroke
1225 759 30 0 360 arc
gsave fill grestore
stroke
1426 866 30 0 360 arc
gsave fill grestore
stroke
1627 962 30 0 360 arc
gsave fill grestore
stroke
1828 1069 30 0 360 arc
gsave fill grestore
stroke
2030 1578 30 0 360 arc
gsave fill grestore
stroke
420 400 m
621 484 l
822 567 l
1023 645 l
1225 735 l
1426 823 l
1627 915 l
1828 1024 l
2030 1517 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 430 m
390 400 l
420 370 l
450 400 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 430 m
390 400 l
420 370 l
450 400 l
420 430 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
621 514 m
591 484 l
621 454 l
651 484 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
621 514 m
591 484 l
621 454 l
651 484 l
621 514 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
822 597 m
792 567 l
822 537 l
852 567 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
822 597 m
792 567 l
822 537 l
852 567 l
822 597 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1023 675 m
993 645 l
1023 615 l
1053 645 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1023 675 m
993 645 l
1023 615 l
1053 645 l
1023 675 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1225 765 m
1195 735 l
1225 705 l
1255 735 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1225 765 m
1195 735 l
1225 705 l
1255 735 l
1225 765 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1426 853 m
1396 823 l
1426 793 l
1456 823 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1426 853 m
1396 823 l
1426 793 l
1456 823 l
1426 853 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1627 945 m
1597 915 l
1627 885 l
1657 915 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1627 945 m
1597 915 l
1627 885 l
1657 915 l
1627 945 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1828 1054 m
1798 1024 l
1828 994 l
1858 1024 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1828 1054 m
1798 1024 l
1828 994 l
1858 1024 l
1828 1054 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1547 m
2000 1517 l
2030 1487 l
2060 1517 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1547 m
2000 1517 l
2030 1487 l
2060 1517 l
2030 1547 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 1173 1761 a(\(d\))f(Query)h(4)p -34 1861
V 66 2551 a @beginspecial 50.187500 @llx 50.187500 @lly
501.875000 @urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q5.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
956 376 m
956 396 l
1493 376 m
1493 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
956 1785 m
956 1765 l
1493 1785 m
1493 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
956 276 m
gsave
956 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
1493 276 m
gsave
1493 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 552 m
430 552 l
420 728 m
430 728 l
420 904 m
430 904 l
420 1081 m
430 1081 l
420 1257 m
430 1257 l
420 1433 m
430 1433 l
420 1609 m
430 1609 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 552 m
2020 552 l
2030 728 m
2020 728 l
2030 904 m
2020 904 l
2030 1081 m
2020 1081 l
2030 1257 m
2020 1257 l
2030 1433 m
2020 1433 l
2030 1609 m
2020 1609 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 728 m
440 728 l
420 1081 m
440 1081 l
420 1433 m
440 1433 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 728 m
2010 728 l
2030 1081 m
2010 1081 l
2030 1433 m
2010 1433 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 728 m
gsave
348 728 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 1081 m
gsave
348 1081 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1433 m
gsave
348 1433 translate
0 rotate
0 -40  m
(6000) RJ
(6000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(8000) RJ
(8000) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
-2 1080 m
gsave
-2 1080 translate
90 rotate
0 0  m
(CPU time \(microseconds\)) CS
(CPU time \(microseconds\)) show
grestore
newpath
420 424 m
956 511 l
1493 671 l
2030 1778 l
stroke
420 424 30 0 360 arc
gsave fill grestore
stroke
956 511 30 0 360 arc
gsave fill grestore
stroke
1493 671 30 0 360 arc
gsave fill grestore
stroke
2030 1778 30 0 360 arc
gsave fill grestore
stroke
420 426 m
956 522 l
1493 688 l
2030 1737 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 456 m
390 426 l
420 396 l
450 426 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 456 m
390 426 l
420 396 l
450 426 l
420 456 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
956 552 m
926 522 l
956 492 l
986 522 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
956 552 m
926 522 l
956 492 l
986 522 l
956 552 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1493 718 m
1463 688 l
1493 658 l
1523 688 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1493 718 m
1463 688 l
1493 658 l
1523 688 l
1493 718 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1767 m
2000 1737 l
2030 1707 l
2060 1737 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1767 m
2000 1737 l
2030 1707 l
2060 1737 l
2030 1767 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 267 2679 a(\(e\))f(Query)h(5)974 2551 y
@beginspecial 50.187500 @llx 50.187500 @lly 501.875000
@urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q6.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 386 l
956 376 m
956 386 l
1493 376 m
1493 386 l
2030 376 m
2030 386 l
420 1785 m
420 1775 l
956 1785 m
956 1775 l
1493 1785 m
1493 1775 l
2030 1785 m
2030 1775 l
stroke
420 376 m
420 396 l
956 376 m
956 396 l
1493 376 m
1493 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
956 1785 m
956 1765 l
1493 1785 m
1493 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
956 276 m
gsave
956 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
1493 276 m
gsave
1493 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 517 m
430 517 l
420 658 m
430 658 l
420 799 m
430 799 l
420 940 m
430 940 l
420 1081 m
430 1081 l
420 1221 m
430 1221 l
420 1362 m
430 1362 l
420 1503 m
430 1503 l
420 1644 m
430 1644 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 517 m
2020 517 l
2030 658 m
2020 658 l
2030 799 m
2020 799 l
2030 940 m
2020 940 l
2030 1081 m
2020 1081 l
2030 1221 m
2020 1221 l
2030 1362 m
2020 1362 l
2030 1503 m
2020 1503 l
2030 1644 m
2020 1644 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 658 m
440 658 l
420 940 m
440 940 l
420 1221 m
440 1221 l
420 1503 m
440 1503 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 658 m
2010 658 l
2030 940 m
2010 940 l
2030 1221 m
2010 1221 l
2030 1503 m
2010 1503 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 658 m
gsave
348 658 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 940 m
gsave
348 940 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1221 m
gsave
348 1221 translate
0 rotate
0 -40  m
(6000) RJ
(6000) show
grestore
newpath
348 1503 m
gsave
348 1503 translate
0 rotate
0 -40  m
(8000) RJ
(8000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(10000) RJ
(10000) show
grestore
newpath
420 415 m
956 490 l
1493 633 l
2030 1651 l
stroke
420 415 30 0 360 arc
gsave fill grestore
stroke
956 490 30 0 360 arc
gsave fill grestore
stroke
1493 633 30 0 360 arc
gsave fill grestore
stroke
2030 1651 30 0 360 arc
gsave fill grestore
stroke
420 416 m
956 493 l
1493 631 l
2030 1462 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 446 m
390 416 l
420 386 l
450 416 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 446 m
390 416 l
420 386 l
450 416 l
420 446 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
956 523 m
926 493 l
956 463 l
986 493 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
956 523 m
926 493 l
956 463 l
986 493 l
956 523 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1493 661 m
1463 631 l
1493 601 l
1523 631 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1493 661 m
1463 631 l
1493 601 l
1523 631 l
1493 661 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1492 m
2000 1462 l
2030 1432 l
2060 1462 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1492 m
2000 1462 l
2030 1432 l
2060 1462 l
2030 1492 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 1178 2679 a(\(f\))f(Query)h(6)p -34 2780
V 66 3469 a @beginspecial 50.187500 @llx 50.187500 @lly
501.875000 @urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q7.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
956 376 m
956 396 l
1493 376 m
1493 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
956 1785 m
956 1765 l
1493 1785 m
1493 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
956 276 m
gsave
956 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
1493 276 m
gsave
1493 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 517 m
430 517 l
420 658 m
430 658 l
420 799 m
430 799 l
420 940 m
430 940 l
420 1081 m
430 1081 l
420 1221 m
430 1221 l
420 1362 m
430 1362 l
420 1503 m
430 1503 l
420 1644 m
430 1644 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 517 m
2020 517 l
2030 658 m
2020 658 l
2030 799 m
2020 799 l
2030 940 m
2020 940 l
2030 1081 m
2020 1081 l
2030 1221 m
2020 1221 l
2030 1362 m
2020 1362 l
2030 1503 m
2020 1503 l
2030 1644 m
2020 1644 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 658 m
440 658 l
420 940 m
440 940 l
420 1221 m
440 1221 l
420 1503 m
440 1503 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 658 m
2010 658 l
2030 940 m
2010 940 l
2030 1221 m
2010 1221 l
2030 1503 m
2010 1503 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 658 m
gsave
348 658 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 940 m
gsave
348 940 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1221 m
gsave
348 1221 translate
0 rotate
0 -40  m
(6000) RJ
(6000) show
grestore
newpath
348 1503 m
gsave
348 1503 translate
0 rotate
0 -40  m
(8000) RJ
(8000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(10000) RJ
(10000) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
-83 1080 m
gsave
-83 1080 translate
90 rotate
0 0  m
(CPU time \(microseconds\)) CS
(CPU time \(microseconds\)) show
grestore
newpath
420 425 m
956 510 l
1493 670 l
2030 1637 l
stroke
420 425 30 0 360 arc
gsave fill grestore
stroke
956 510 30 0 360 arc
gsave fill grestore
stroke
1493 670 30 0 360 arc
gsave fill grestore
stroke
2030 1637 30 0 360 arc
gsave fill grestore
stroke
420 420 m
956 501 l
1493 648 l
2030 1470 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 450 m
390 420 l
420 390 l
450 420 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 450 m
390 420 l
420 390 l
450 420 l
420 450 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
956 531 m
926 501 l
956 471 l
986 501 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
956 531 m
926 501 l
956 471 l
986 501 l
956 531 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1493 678 m
1463 648 l
1493 618 l
1523 648 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1493 678 m
1463 648 l
1493 618 l
1523 648 l
1493 678 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1500 m
2000 1470 l
2030 1440 l
2060 1470 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1500 m
2000 1470 l
2030 1440 l
2060 1470 l
2030 1500 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 265 3597 a(\(g\))f(Query)h(7)974 3469 y
@beginspecial 50.187500 @llx 50.187500 @lly 501.875000
@urx 376.406250 @ury 850 @rwi @setspecial
%%BeginDocument: runtime_Q8.ps
/m {moveto} bind def
/l {lineto} bind def
/RJ {
 stringwidth neg exch neg exch
 rmoveto
} bind def
/CS {
 stringwidth
 2 div neg exch 2 div neg exch
 rmoveto
} bind def
0.25 0.25 scale
1 setlinecap
/Times-Italic findfont 
120 scalefont
 setfont
[] 0 setdash
420 376 m
420 1785 l
2030 1785 l
2030 376 l
420 376 l
stroke
[] 0 setdash
420 376 m
420 396 l
956 376 m
956 396 l
1493 376 m
1493 396 l
2030 376 m
2030 396 l
420 1785 m
420 1765 l
956 1785 m
956 1765 l
1493 1785 m
1493 1765 l
2030 1785 m
2030 1765 l
/Times-Italic findfont 
120 scalefont
 setfont
/Times-Roman findfont 
120 scalefont
 setfont
stroke
420 276 m
gsave
420 276 translate
0 rotate
0 -40  m
(0) CS
(0) show
grestore
newpath
956 276 m
gsave
956 276 translate
0 rotate
0 -40  m
(1) CS
(1) show
grestore
newpath
1493 276 m
gsave
1493 276 translate
0 rotate
0 -40  m
(2) CS
(2) show
grestore
newpath
2030 276 m
gsave
2030 276 translate
0 rotate
0 -40  m
(3) CS
(3) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
1225 76 m
gsave
1225 76 translate
0 rotate
0 0  m
(Number of joins) CS
(Number of joins) show
grestore
newpath
420 376 m
430 376 l
420 517 m
430 517 l
420 658 m
430 658 l
420 799 m
430 799 l
420 940 m
430 940 l
420 1081 m
430 1081 l
420 1221 m
430 1221 l
420 1362 m
430 1362 l
420 1503 m
430 1503 l
420 1644 m
430 1644 l
420 1785 m
430 1785 l
2030 376 m
2020 376 l
2030 517 m
2020 517 l
2030 658 m
2020 658 l
2030 799 m
2020 799 l
2030 940 m
2020 940 l
2030 1081 m
2020 1081 l
2030 1221 m
2020 1221 l
2030 1362 m
2020 1362 l
2030 1503 m
2020 1503 l
2030 1644 m
2020 1644 l
2030 1785 m
2020 1785 l
stroke
420 376 m
440 376 l
420 658 m
440 658 l
420 940 m
440 940 l
420 1221 m
440 1221 l
420 1503 m
440 1503 l
420 1785 m
440 1785 l
2030 376 m
2010 376 l
2030 658 m
2010 658 l
2030 940 m
2010 940 l
2030 1221 m
2010 1221 l
2030 1503 m
2010 1503 l
2030 1785 m
2010 1785 l
/Times-Roman findfont 
120 scalefont
 setfont
stroke
348 376 m
gsave
348 376 translate
0 rotate
0 -40  m
(0) RJ
(0) show
grestore
newpath
348 658 m
gsave
348 658 translate
0 rotate
0 -40  m
(2000) RJ
(2000) show
grestore
newpath
348 940 m
gsave
348 940 translate
0 rotate
0 -40  m
(4000) RJ
(4000) show
grestore
newpath
348 1221 m
gsave
348 1221 translate
0 rotate
0 -40  m
(6000) RJ
(6000) show
grestore
newpath
348 1503 m
gsave
348 1503 translate
0 rotate
0 -40  m
(8000) RJ
(8000) show
grestore
newpath
348 1785 m
gsave
348 1785 translate
0 rotate
0 -40  m
(10000) RJ
(10000) show
grestore
newpath
420 421 m
956 504 l
1493 650 l
2030 1549 l
stroke
420 421 30 0 360 arc
gsave fill grestore
stroke
956 504 30 0 360 arc
gsave fill grestore
stroke
1493 650 30 0 360 arc
gsave fill grestore
stroke
2030 1549 30 0 360 arc
gsave fill grestore
stroke
420 420 m
956 502 l
1493 647 l
2030 1475 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
420 450 m
390 420 l
420 390 l
450 420 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
420 450 m
390 420 l
420 390 l
450 420 l
420 450 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
956 532 m
926 502 l
956 472 l
986 502 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
956 532 m
926 502 l
956 472 l
986 502 l
956 532 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1493 677 m
1463 647 l
1493 617 l
1523 647 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1493 677 m
1463 647 l
1493 617 l
1523 647 l
1493 677 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
2030 1505 m
2000 1475 l
2030 1445 l
2060 1475 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
2030 1505 m
2000 1475 l
2030 1445 l
2060 1475 l
2030 1505 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
929 1359 m
929 1659 l
1771 1659 l
1771 1359 l
929 1359 l
stroke
/Times-Roman findfont 
120 scalefont
 setfont
995 1584 m
1259 1584 l
stroke
995 1584 30 0 360 arc
gsave fill grestore
stroke
1259 1584 30 0 360 arc
gsave fill grestore
stroke
1325 1584 m
gsave
1325 1584 translate
0 rotate
0 -40  m
(Prairie) show
grestore
newpath
/Times-Roman findfont 
120 scalefont
 setfont
995 1434 m
1259 1434 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
995 1464 m
965 1434 l
995 1404 l
1025 1434 l
995 1464 l
stroke
1.000000 1.000000 1.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
closepath
gsave eofill grestore
stroke
0.000000 0.000000 0.000000 setrgbcolor
1259 1464 m
1229 1434 l
1259 1404 l
1289 1434 l
1259 1464 l
stroke
1325 1434 m
gsave
1325 1434 translate
0 rotate
0 -40  m
(Volcano) show
grestore
newpath
showpage
%%EndDocument
 @endspecial 1173 3597 a(\(h\))f(Query)h(8)p 1827 3720
4 3696 v -104 3723 1935 4 v 1829 3740 19 3703 v -87 3740
1935 19 v -38 3922 a FG(Figure)i(7:)27 b(Query)19 b(optimization)g
(times)h(for)g(Q1)g(through)e(Q8)-112 4158 y(tions)i(in)g(its)h(query)e
(optimizer)-5 b(.)-29 4266 y(The)23 b(Starburst)h(query)e(optimizer)h
([10])g(uses)h(rules)g(for)g(all)g(de-)-112 4366 y(cisions)j(that)g
(need)f(to)i(be)f(taken)f(by)h(the)g(query)e(optimizer)-5
b(.)47 b(The)-116 4466 y(rules)18 b(are)f(functional)f(in)i(nature)e
(and)h(transform)f(a)i(given)f(operator)-112 4565 y(tree)j(into)g
(another)-5 b(.)26 b(The)20 b(rules)h(are)f(commonly)e(those)i(that)h
(re\257ect)-112 4665 y(relational)26 b(calculus)i(facts.)49
b(In)27 b(Starburst,)i(the)f(query)e(rewriting)-112 4764
y(phase)21 b(is)i(dif)o(ferent)d(from)i(the)g(optimization)e(phase.)33
b(The)21 b(rewrit-)-119 4864 y(ing)15 b(phase)f(transforms)f(the)i
(query)f(itself)h(into)g(equivalent)e(operator)-112 4964
y(trees)21 b(based)g(on)f(relational)g(calculus)h(rules.)30
b(The)20 b(plan)h(optimiza-)-114 5063 y(tion)d(phase)h(selects)g
(algorithms)f(for)g(each)g(operator)f(in)i(the)g(opera-)-114
5163 y(tor)f(tree)h(that)g(is)g(obtained)e(after)i(rewriting.)25
b(The)18 b(disadvantage)f(of)-112 5263 y(separating)k(the)h(query)f
(rewrite)h(and)g(the)h(optimization)e(phases)h(is)2041
21 y(that)c(pruning)e(of)h(the)h(search)g(space)g(is)h(not)e(possible)h
(during)e(query)2044 120 y(rewrite,)j(since)i(the)f(rewrite)g(phase)g
(is)h(non-cost-based.)2127 228 y(Freytag)h([6])h(describes)f(a)i
(rule-based)d(query)h(optimizer)g(simi-)2044 328 y(lar)f(to)g
(Starburst.)28 b(The)20 b(rules)h(are)g(based)f(on)g(LISP-like)h
(represen-)2040 427 y(tations)c(of)f(access)i(plans.)25
b(The)17 b(rules)f(themselves)h(are)g(recursively)2044
527 y(de\256ned)26 b(on)g(smaller)i(expressions)e(\(operator)e
(trees\).)48 b(Although)2044 627 y(several)22 b(expressions)g(can)h
(contain)e(a)j(common)d(sub-expression,)2044 726 y(Freytag)e(doesn')o
(t)f(consider)h(the)h(possibility)g(of)g(sharing.)25
b(Expres-)2044 826 y(sions)c(are)g(evaluated)f(each)h(time)h(they)e
(are)i(encountered.)27 b(This)21 b(is)2040 926 y(obviously)16
b(inef)o(\256cient.)25 b(In)17 b(addition,)f(as)j(in)e(Starburst,)g(he)
h(doesn')o(t)2044 1025 y(consider)i(the)h(cost)h(transformations)d
(inherent)h(in)h(any)g(query)f(op-)2044 1125 y(timizer;)g(rules)g(are)g
(syntactic)g(transformation)e(rules.)2127 1233 y(EXODUS)j([9])g
(provides)e(an)i(optimizer)f(generator)g(which)g(ac-)2044
1332 y(cepts)k(a)g(rule-based)e(speci\256cation)h(of)g(the)h(data)g
(model)f(as)h(input.)2042 1432 y(The)19 b(optimizer)f(generator)f
(compiles)i(these)g(rules,)g(together)f(with)2042 1532
y(pre-de\256ned)e(rules,)j(to)f(generate)g(an)g(optimizer)g(for)g(the)g
(particular)2044 1631 y(data)25 b(model)g(and)g(set)h(of)f(operators.)
41 b(Unlike)25 b(Freytag,)h(the)g(opti-)2043 1731 y(mizer)18
b(generator)f(for)i(EXODUS)g(allows)h(for)e(C)i(code)f(along)f(with)
2037 1831 y(de\256nitions)13 b(of)i(new)f(rules.)25 b(This)15
b(allows)f(the)h(database)f(implemen-)2039 1930 y(tor)i(the)g(freedom)f
(to)h(associate)h(any)f(action)f(with)i(a)f(particular)f(rule.)2041
2030 y(Operator)i(trees)h(in)g(EXODUS)g(are)g(constructed)e(bottom-up)g
(from)2044 2129 y(previously)i(constructed)h(trees.)2121
2237 y(The)d(V)-11 b(olcano)14 b(optimizer)h(generator)f(project)g([7])
h(evolved)g(from)2044 2337 y(the)22 b(EXODUS)g(project.)31
b(It)22 b(is)g(dif)o(ferent)e(from)h(all)h(the)g(above)f(op-)2044
2437 y(timizers)j(in)h(one)e(signi\256cant)h(way:)35
b(it)25 b(is)h(a)e(top-down)e(optimizer)2042 2536 y(compared)17
b(with)i(the)f(bottom-up)f(strategy)h(of)g(the)h(others.)26
b(Opera-)2041 2636 y(tor)17 b(trees)h(are)f(optimized)f(starting)i
(from)e(the)i(root)e(while)i(sub-trees)2041 2735 y(are)h(not)e(yet)i
(optimized.)25 b(This)18 b(leads)g(to)h(a)f(constraint-driven)d(gen-)
2044 2835 y(eration)23 b(of)h(the)g(search)f(space.)38
b(While)25 b(this)f(method)f(results)h(in)h(a)2040 2935
y(tight)17 b(control)e(of)i(the)g(search)g(space,)g(it)h(is)f
(unconventional)d(and)i(re-)2044 3034 y(quires)24 b(careful)f
(attention)h(on)g(the)h(part)f(of)g(the)g(optimizer)g(imple-)2043
3134 y(mentor)19 b(to)h(ensure)g(that)g(legal)g(operator)e(trees)i(are)
g(not)g(accidently)2044 3234 y(left)25 b(out)f(of)h(the)g(search)f
(space.)41 b(W)-7 b(e)26 b(have)f(used)f(V)-11 b(olcano)24
b(as)i(our)2044 3333 y(back-end)18 b(search)i(engine.)2044
3658 y FB(6)119 b(Conclusion)31 b(and)g(futur)n(e)f(work)2044
3859 y FG(Current)24 b(rule-based)f(query)g(optimizers)h(do)g(not)h
(provide)e(a)i(very)2044 3959 y(intuitive)20 b(and)g(conceptually)f
(streamlined)h(framework)f(to)i(de\256ne)2044 4059 y(rules)26
b(and)g(actions.)45 b(Our)26 b(experiences)e(with)j(the)f(V)-11
b(olcano)26 b(opti-)2044 4158 y(mizer)e(generator)e(suggest)i(that)g
(its)i(model)d(of)h(rules)g(and)g(the)g(ex-)2044 4258
y(pression)i(of)h(these)g(rules)g(is)h(much)e(more)g(complicated)g(and)
g(too)2042 4358 y(low-level)19 b(than)f(it)i(needs)f(to)g(be.)26
b(As)20 b(a)g(consequence,)c(rule)j(sets)h(in)2043 4457
y(V)-11 b(olcano)19 b(are)g(fragile,)g(hard)g(to)h(write,)f(and)h
(debug.)25 b(Similar)19 b(prob-)2044 4557 y(lems)i(may)f(exist)h(in)g
(other)f(contemporary)d(rule-based)i(query)h(op-)2044
4656 y(timizers.)2126 4764 y(W)-7 b(e)21 b(believe)d(that)i(rule-based)
e(query)g(optimizers)g(will)j(be)e(stan-)2044 4864 y(dard)i(tools)i(of)
f(future)g(database)g(systems.)34 b(The)23 b(pragmatic)e(dif)o(\256-)
2044 4964 y(culties)g(of)h(using)f(existing)f(rule-based)g(optimizers)h
(led)g(us)h(to)f(de-)2044 5063 y(velop)f(Prairie,)g(an)h(extensible)f
(and)g(structured)g(algebraic)f(frame-)2044 5163 y(work)j(for)h
(specifying)f(rules.)36 b(Prairie)23 b(is)h(similar)g(to)f(existing)g
(op-)2044 5263 y(timizers)33 b(in)g(that)f(it)i(supports)e(both)g
(transformation)e(rules)j(and)p eop
%%Page: 10 10
10 9 bop -112 21 a FG(implementation)21 b(rules.)37 b(However)m(,)23
b(Prairie)g(makes)h(several)f(im-)-112 120 y(provements:)-50
291 y(1.)41 b(it)14 b(of)o(fers)e(a)i(conceptually)d(more)h
(streamlined)h(model)f(for)h(rule)54 390 y(speci\256cation;)-50
562 y(2.)41 b(rules)18 b(are)g(encapsulated,)e(there)i(are)g(no)g
(\252hidden\272)e(operators)54 662 y(or)j(\252hidden\272)g(algorithms;)
-50 834 y(3.)41 b(implementation)19 b(hints)i(\(e.g.,)f(enforcers\))g
(are)h(deduced)e(au-)54 933 y(tomatically;)-50 1105 y(4.)41
b(and)19 b(it)i(has)g(ef)o(\256cient)e(implementations.)-29
1276 y(W)-7 b(e)26 b(have)e(explained)f(how)i(the)f(\256rst)i(three)f
(points)f(are)h(impor)n(-)-113 1376 y(tant)20 b(for)f(simplifying)f
(rule)h(speci\256cations)g(and)h(making)e(rule)h(sets)-112
1475 y(less)27 b(brittle)g(for)f(extensibility)-5 b(.)45
b(A)27 b(consequence)e(is)i(that)g(Prairie)-112 1575
y(rules)20 b(are)h(simpler)f(and)g(more)g(robust)f(than)i(rules)f(of)g
(existing)h(op-)-112 1674 y(timizers)j(\(e.g.,)h(V)-11
b(olcano\).)40 b(W)-7 b(e)25 b(addressed)f(the)h(fourth)e(point)h(by)
-112 1774 y(building)g(a)j(P2V)g(pre-processor)c(which)j(uses)h
(sophisticated)f(al-)-112 1874 y(gorithms)e(to)j(compose)e(and)g
(compact)g(a)i(Prairie)f(rule)g(set)h(into)e(a)-112 1973
y(V)-11 b(olcano)23 b(rule)g(set.)39 b(T)-6 b(o)24 b(demonstrate)f(the)
h(scalability)f(of)h(our)f(ap-)-113 2073 y(proach,)c(we)h(rewrote)g
(the)g(TI)g(Open)g(OODB)h(rule)e(set)i(as)g(a)g(Prairie)-113
2173 y(rule)e(set,)h(generated)d(its)k(V)-11 b(olcano)18
b(counterpart,)f(and)i(showed)g(that)-113 2272 y(the)h(performance)d
(of)j(the)f(synthesized)g(V)-11 b(olcano)19 b(rule)h(set)g(closely)-112
2372 y(matches)f(the)i(hand-crafted)c(V)-11 b(olcano)19
b(rule)h(set.)-29 2473 y(Our)25 b(future)g(work)g(will)i(concentrate)d
(on)i(developing)d(higher)n(-)-120 2573 y(level)15 b(abstractions)e
(using)h(Prairie,)h(including)d(automatically)h(gen-)-116
2672 y(erating)k(Prairie)h(rule)f(sets,)i(and)e(combining)f(multiple)h
(Prairie)g(rule)-112 2772 y(sets)k(to)f(automatically)f(generate)g(ef)o
(\256cient)g(optimizers.)-112 3059 y FB(Acknowledgments)-112
3247 y FG(W)-7 b(e)30 b(wish)g(to)g(thank)f(T)-6 b(exas)30
b(Instruments,)g(Inc.)f(for)g(making)g(the)-119 3347
y(Open)14 b(OODB)i(source)e(code)g(available)g(to)h(us.)25
b(Comments)14 b(by)h(Jos)5 b(\302)-33 b(e)-112 3447 y(Blakeley)-5
b(,)23 b(Anne)h(Ngu,)g(V)-5 b(ivek)23 b(Singhal,)h(Thomas)f(W)-7
b(oo)24 b(and)g(the)-113 3546 y(anonymous)18 b(referees)h(greatly)h
(improved)e(the)i(quality)f(of)h(the)g(pa-)-112 3646
y(per)-5 b(.)-112 3934 y FB(Refer)n(ences)-71 4122 y
FG([1])40 b(D.)16 b(S.)f(Batory)-5 b(.)19 b(Building)14
b(blocks)g(of)h(database)f(management)67 4221 y(systems.)26
b(T)-6 b(echnical)18 b(Report)g(TR\26187\26123,)e(The)i(University)67
4321 y(of)i(T)-6 b(exas)20 b(at)h(Austin,)f(February)f(1988.)-71
4493 y([2])40 b(Jos)5 b(\302)-33 b(e)37 b(A.)g(Blakeley)-5
b(,)39 b(W)m(illiam)e(J.)g(McKenna,)i(and)d(Goetz)67
4592 y(Graefe.)j(Experiences)21 b(building)f(the)j(Open)e(OODB)i(query)
67 4692 y(optimizer)-5 b(.)27 b(In)19 b FF(Pr)m(oceedings)e(1993)h(ACM)
i(SIGMOD)f(Inter)n(-)67 4792 y(national)27 b(Confer)m(ence)h(on)g
(Management)e(of)i(Data)p FG(,)i(pages)67 4891 y(287\261296,)17
b(W)-7 b(ashington,)20 b(May)f(1993.)-71 5063 y([3])40
b(Dean)33 b(Daniels,)k(Patricia)c(Selinger)m(,)j(Laura)c(Haas,)37
b(Bruce)67 5163 y(Lindsay)-5 b(,)25 b(C.)g(Mohan,)g(Adrian)f(W)-7
b(alker)m(,)26 b(and)e(Paul)h(W)m(ilms.)67 5263 y(An)14
b(introduction)c(to)k(distributed)e(query)g(compilation)f(in)j(R)1797
5232 y Ff(\003)1835 5263 y FG(.)2224 21 y(In)22 b FF(Pr)m(oceedings)f
(2nd)h(International)e(Confer)m(ence)i(on)h(Dis-)2224
120 y(tributed)k(Databases)p FG(,)i(pages)f(291\261309,)f(Berlin,)j
(Septem-)2224 220 y(ber)19 b(1982.)2085 386 y([4])41
b(Dinesh)29 b(Das)h(and)e(Don)h(Batory)-5 b(.)74 b(Prairie:)45
b(An)29 b(algebraic)2224 486 y(framework)37 b(for)j(rule)g
(speci\256cation)f(in)h(query)f(optimiz-)2224 585 y(ers.)92
b(In)33 b FF(Pr)m(oceedings)e(of)i(the)g(W)-8 b(orkshop)33
b(on)f(Database)2224 685 y(Query)14 b(Optimizer)g(Generators)g(and)g
(Rule-Based)e(Optimiz-)2224 784 y(ers)p FG(,)21 b(pages)e(139\261154,)e
(Dallas,)k(September)e(1993.)2085 950 y([5])41 b(Dinesh)28
b(Das)h(and)f(Don)g(Batory)-5 b(.)69 b(Prairie:)43 b(A)29
b(rule)f(speci-)2224 1050 y(\256cation)h(framework)e(for)i(query)f
(optimizers.)75 b(T)-6 b(echnical)2224 1150 y(Report)22
b(TR)h(94\26116,)e(The)h(University)g(of)g(T)-6 b(exas)22
b(at)h(Austin,)2224 1249 y(May)d(1994.)2085 1415 y([6])41
b(Johann)15 b(Christoph)h(Freytag.)21 b(A)d(rule-based)d(view)h(of)g
(query)2224 1515 y(optimization.)80 b(In)30 b FF(Pr)m(oceedings)f(1987)
h(ACM)h(SIGMOD)2224 1615 y(International)37 b(Confer)m(ence)j(on)f
(Management)f(of)j(Data)p FG(,)2224 1714 y(pages)19 b(173\261180,)e
(San)k(Francisco,)e(May)h(1987.)2085 1880 y([7])41 b(Goetz)33
b(Graefe.)94 b(V)-11 b(olcano,)36 b(an)d(extensible)g(and)g(parallel)
2224 1980 y(query)23 b(evaluation)g(system.)53 b(T)-6
b(echnical)24 b(Report)h(CU\261CS\261)2224 2080 y(481\26190,)14
b(University)i(of)g(Colorado)f(at)i(Boulder)m(,)e(July)i(1990.)2085
2246 y([8])41 b(Goetz)24 b(Graefe.)48 b(Query)24 b(evaluation)e
(techniques)h(for)h(lar)o(ge)2224 2345 y(databases.)66
b FF(ACM)28 b(Computing)f(Surveys)p FG(,)i(25\(2\):73\261170,)2224
2445 y(June)20 b(1993.)2085 2611 y([9])41 b(Goetz)29
b(Graefe)h(and)f(David)g(J.)i(DeW)m(itt.)78 b(The)30
b(EXODUS)2224 2710 y(optimizer)21 b(generator)-5 b(.)42
b(In)23 b FF(Pr)m(oceedings)e(1987)h(ACM)i(SIG-)2224
2810 y(MOD)40 b(International)d(Confer)m(ence)i(on)g(Management)f(of)
2224 2910 y(Data)p FG(,)19 b(pages)h(387\261394,)d(San)j(Francisco,)g
(May)g(1987.)2044 3076 y([10])40 b(L.)23 b(M.)g(Haas,)h(J.)g(C.)g
(Freytag,)e(G.)i(M.)f(Lohman,)f(and)g(H.)i(Pi-)2224 3175
y(rahesh.)31 b(Extensible)20 b(query)f(processing)h(in)h(Starburst.)32
b(Re-)2224 3275 y(search)20 b(Report)g(RJ)i(6610,)e(IBM)h(Almaden)e
(Research)i(Cen-)2224 3375 y(ter)m(,)e(December)g(1988.)2047
3541 y([1)m(1])40 b(P)-9 b(.)33 b(G.)g(Selinger)m(,)h(M.)f(M.)g
(Astrahan,)i(D.)e(D.)g(Chamberlin,)2224 3640 y(R.)28
b(A.)h(Lorie,)g(and)f(T)-6 b(.)28 b(G.)g(Price.)69 b(Access)29
b(path)e(selection)2224 3740 y(in)d(a)g(relational)f(database)g
(management)f(system.)47 b(In)23 b FF(Pr)m(o-)2224 3840
y(ceedings)k(1979)g(ACM)i(SIGMOD)f(International)e(Confer)n(-)2224
3939 y(ence)g(on)h(Management)e(of)i(Data)p FG(,)h(pages)e(23\26134,)g
(Boston,)2224 4039 y(May)20 b(1979.)2044 4205 y([12])40
b(Michael)30 b(Stonebraker)f(and)i(Lawrence)f(A.)i(Rowe.)84
b(The)2224 4305 y(design)25 b(of)h(Postgres.)60 b(In)26
b FF(Pr)m(oceedings)f(1986)g(ACM)i(SIG-)2224 4404 y(MOD)40
b(International)d(Confer)m(ence)i(on)g(Management)f(of)2224
4504 y(Data)p FG(,)19 b(pages)h(340\261355,)d(W)-7 b(ashington,)19
b(May)h(1986.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
